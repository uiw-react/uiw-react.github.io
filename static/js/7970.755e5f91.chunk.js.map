{"version":3,"file":"static/js/7970.755e5f91.chunk.js","mappings":"gHAAA","sources":["../../packages/react-transfer/README.md"],"sourcesContent":["export default \"Transfer 穿梭框\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-transfer/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-transfer.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-transfer)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-transfer.svg?label=@uiw/react-transfer)](https://npmjs.com/@uiw/react-transfer)\\n\\n选择一个或以上的选项后，点击左右的方向按钮，可以把选中的选项移动到另一栏为选中。在 v4.14.0+ 添加。\\n\\n## 基础用法\\n\\n最简单的用法。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport { Transfer } from 'uiw';\\n\\nfunction Demo() {\\n\\n  const options = [\\n    { label: '武汉市',  key: 1 },\\n    { label: '汉南区1', key: 5 },\\n    { label: '汉南区2', key: 6 },\\n    { label: '汉南区3', key: 7 },\\n  ]\\n\\n  const [value,valueSet] = React.useState([{ label: '武汉市',  key: 1 }])\\n\\n  return (\\n    <Row style={{ flexDirection:'column' }} >\\n      <Transfer\\n        options={options}\\n        value={value}\\n        onChange={(transfer,option)=>{\\n          valueSet(option)\\n        }}\\n      />\\n    </Row>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 树形节点\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport { Transfer } from 'uiw';\\n\\nfunction Demo() {\\nconst options = [\\n    {\\n      label: '武汉市',\\n      key: 1,\\n      children: [\\n        { label: '新洲区', key: 2, disabled: true },\\n        { label: '武昌区', key: 3 },\\n        {\\n          label: '汉南区',\\n          key: 4,\\n          children: [\\n            { label: '汉南区1', key: 5 },\\n            { label: '汉南区2', key: 6 },\\n            { label: '汉南区3', key: 7 },\\n          ]\\n        },\\n      ]\\n    }\\n  ];\\n\\n  const [value,valueSet] = React.useState([{ label: '武汉市',  key: 1 }])\\n\\n  return (\\n    <Row style={{ flexDirection:'column' }} >\\n      <Transfer\\n        options={options}\\n        value={value}\\n        onChange={(transfer,option)=>{\\n          valueSet(option)\\n        }}\\n      />\\n    </Row>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 搜索选项\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport { Transfer } from 'uiw';\\n\\nfunction Demo() {\\nconst options = [\\n    {\\n      label: '武汉市',\\n      key: 1,\\n      children: [\\n        { label: '新洲区', key: 2, disabled: true },\\n        { label: '武昌区', key: 3 },\\n        {\\n          label: '汉南区',\\n          key: 4,\\n          children: [\\n            { label: '汉南区1', key: 5 },\\n            { label: '汉南区2', key: 6 },\\n            { label: '汉南区3', key: 7 },\\n          ]\\n        },\\n      ]\\n    }\\n  ];\\n\\n  const [value,valueSet] = React.useState([\\n    { label: '武昌区', key: 3 },\\n    { label: '汉南区1', key: 5 },\\n    { label: '汉南区2', key: 6 },\\n  ])\\n\\n  return (\\n    <Row style={{ flexDirection:'column' }} >\\n      <Transfer\\n        options={options}\\n        showSearch={true}\\n        placeholder=\\\"搜索内容\\\"\\n        value={value}\\n        onChange={(transfer,option)=>{\\n          valueSet(option)\\n        }}\\n      />\\n    </Row>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Form中使用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport { Transfer, Form } from 'uiw';\\n\\nfunction Demo() {\\n\\n  const options = [\\n    { label: '武汉市',  key: 1 },\\n    { label: '汉南区1', key: 5 },\\n    { label: '汉南区2', key: 6 },\\n    { label: '汉南区3', key: 7 },\\n  ]\\n\\n  const [value,valueSet] = React.useState([{ label: '武汉市',  key: 1 }])\\n  const form=React.useRef()\\n\\n  const setValue=()=>{\\n    form.current.setFields({\\n     transfer: [\\n        { label: '汉南区1', key: 5 },\\n        { label: '汉南区3', key: 7 },\\n      ]\\n    })\\n  }\\n\\n  const resetValue=()=>{\\n    form.current.resetForm()\\n  }\\n\\n  return (\\n    <Form\\n        ref={form}\\n        onSubmitError={(error) => {\\n          if (error.filed) {\\n            return { ...error.filed };\\n          }\\n          return null;\\n        }}\\n        onSubmit={({initial, current}) => {\\n          const errorObj = {};\\n          if (!current.searchTree) {\\n            errorObj.searchTree = '默认需要选择内容，选择入内容';\\n          }\\n          if(Object.keys(errorObj).length > 0) {\\n            const err = new Error();\\n            err.filed = errorObj;\\n            Notify.error({ title: '提交失败！', description: '请确认提交表单是否正确！' });\\n            throw err;\\n          }\\n          Notify.success({\\n            title: '提交成功！',\\n            description: `表单提交成功，选择值为：${current.selectField}，将自动填充初始化值！`,\\n          });\\n        }}\\n        fields={{\\n          transfer: {\\n            initialValue:[{ label: '汉南区2', key: 6 },{ label: '汉南区3', key: 7 },],\\n            children: (\\n              <Transfer options={options}/>\\n            )\\n          }\\n        }}\\n      >\\n        {({ fields, state, canSubmit }) => {\\n          return (\\n            <div>\\n              <Row style={{display:'flex',flexDirection:'column'}}>\\n                <Col >{fields.transfer}</Col>\\n              </Row>\\n              <Row>\\n                <Col fixed>\\n                  <Button disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n                  <Button onClick={setValue} type=\\\"primary\\\" >setValue</Button>\\n                  <Button onClick={resetValue} type=\\\"primary\\\" >重置</Button>\\n                </Col>\\n              </Row>\\n              <Row>\\n                <Col>\\n                  <pre style={{ padding: 10, marginTop: 10 }}>\\n                    {JSON.stringify(state.current, null, 2)}\\n                  </pre>\\n                </Col>\\n              </Row>\\n            </div>\\n          )\\n        }}\\n      </Form>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| bodyStyle | 选项区域样式 | Object | { height: 200px, overflow-y: auto } |\\n| onChange | 点击穿梭时回调 | (arrow, selectkeys) => void | - |\\n| value | 指定当前选中的条目 | [{label, key }] | - |\\n| options | 下拉数据源,可参考Tree下拉数据源 | [{ label, key, children: [{label, key}] }] | - |\\n| showSearch | 启用搜索 | boolean | false |\\n| placeholder | 搜索输入框文字 | string | - |\\n| onSearch | 搜索时回调函数 |  (arrow, searchValue) => void | - |\\n\";"],"names":[],"sourceRoot":""}