{"version":3,"file":"static/js/8488.148bfa75.chunk.js","mappings":"gHAAA","sources":["../../packages/react-month-picker/README.md"],"sourcesContent":["export default \"MonthPicker 月份选择器\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-month-picker/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-month-picker.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-month-picker)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-month-picker.svg?label=@uiw/react-month-picker)](https://npmjs.com/@uiw/react-month-picker)\\n\\n模态对话框。\\n\\n```jsx\\nimport { MonthPicker } from 'uiw';\\n// or\\nimport MonthPicker from '@uiw/react-month-picker';\\n```\\n\\n### 基础用法\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { MonthPicker, Row, Col } from 'uiw';\\n\\nconst Demo = () => {\\n  const [formatDate, setFormatDate] = React.useState('2019/04')\\n  function onChange(date, formatDate) {\\n    setFormatDate(formatDate)\\n  }\\n  return (\\n    <Row gutter={10}>\\n      <Col fixed>\\n        <MonthPicker size=\\\"large\\\" onChange={onChange} placeholder=\\\"Select month\\\" />\\n      </Col>\\n      <Col fixed>\\n        <MonthPicker disabled value={formatDate} placeholder=\\\"Select month\\\" />\\n      </Col>\\n    </Row>\\n  )\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 在表单中使用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Form, MonthPicker, Notify, Row, Col, Button } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Form\\n      onSubmit={({initial, current}) => {\\n        if(current.date) {\\n          Notify.success({\\n            title: '提交成功！',\\n            description: `表单提交时间成功，时间为：${current.date}`,\\n          });\\n        } else {\\n          Notify.error({\\n            title: '提交失败！',\\n            description: `表单提交时间成功，时间为：${current.date}，将自动填充初始化值！`,\\n          });\\n        }\\n        console.log('-->>', initial, current);\\n      }}\\n      fields={{\\n        date: {\\n          labelClassName: 'fieldLabel',\\n          labelFor: 'date-inline',\\n          children: <MonthPicker id=\\\"date-inline\\\" />\\n        },\\n      }}\\n    >\\n      {({ fields, state, canSubmit }) => {\\n        return (\\n          <Row gutter={10}>\\n            <Col fixed>{fields.date}</Col>\\n            <Col>\\n              <Button disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n            </Col>\\n          </Row>\\n        )\\n      }}\\n    </Form>\\n  </div>\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| value | 初始时间值 | Date | - |\\n| placeholder | 输入框提示文字 | String | - |\\n| allowClear | 是否显示清除按钮 | Boolean | true |\\n| format | 格式化时间，规则查看 [`formatter`](#/components/formatter) 文档 | String | `YYYY/MM/DD` |\\n| onChange | 选择一天时调用。 | Function(Date, formatDate) | - |\\n| popoverProps | 将参数传递给内部 [`<Popover>`](#/components/popover) 组件 | Object | - |\\n| pickerCaptionProps | 将参数传递给内部 [`<DatePicker>`](#/components/date-picker) `PickerCaption` 组件 | [`PickerCaptionProps`](https://github.com/uiwjs/uiw/blob/207c787ed478ffb7205ecdf95754ad2c97bb69c9/packages/react-date-picker/src/DatePickerCaption.tsx#L18-L23) | - |\\n| disabled | 组件 [`<Input>`](#/components/input) 的属性，禁用日历 | Boolean | - |\\n\\n更多属性文档请参考 [`<Input>`](#/components/input)。\";"],"names":[],"sourceRoot":""}