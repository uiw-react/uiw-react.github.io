{"version":3,"sources":["../../../node_modules/@babel/plugin-transform-classes/lib/index.js","../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../../../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","keys","filter","name","test","builtinClasses","Set","_default","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","get","isClassDeclaration","ClassDeclaration","node","ref","id","scope","generateUidIdentifier","replaceWith","types","variableDeclaration","variableDeclarator","toExpression","ClassExpression","state","inferred","file","isCallExpression","isArrowFunctionExpression","arrowFunctionToExpression","program","expression","statement","statements","smart","t","obj","__esModule","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","buildLiteralData","defaultReplacements","forEach","replacement","i","push","isLoose","assumptions","classState","parent","undefined","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","Map","static","setState","newState","findThisesVisitor","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","refToPreserve","replace","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","callExpression","addHelper","bareSupers","Super","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","formatters","_builder","bind","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","cp","trail","clear","skipSpace","getTokenFromCode","codePointAtPos","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","placeholderName","reverse","emptyStatement","applyReplacement"],"mappings":"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","file":"static/js/vendors-runtime-template.c7b5a89e.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types$1.num:\n      case types$1.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types$1.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types$1._null:\n        return this.estreeParseLiteral(null);\n\n      case types$1._true:\n        return this.estreeParseLiteral(true);\n\n      case types$1._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types$1.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types$1._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types$1._true:\n      case types$1._false:\n        return this.parseBooleanLiteral();\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types$1._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}