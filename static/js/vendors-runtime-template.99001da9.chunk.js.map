{"version":3,"sources":["../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","formatters","_builder","_default","bind","undefined","beforeExpr","startsExpr","isLoop","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","Map","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","node","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","isExpr","preserveSpace","override","types","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","id","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","tryParse","failState","clone","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","cp","trail","clear","skipSpace","getTokenFromCode","codePointAtPos","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement"],"mappings":"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","file":"static/js/vendors-runtime-template.99001da9.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types$1.num:\n      case types$1.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types$1.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types$1._null:\n        return this.estreeParseLiteral(null);\n\n      case types$1._true:\n        return this.estreeParseLiteral(true);\n\n      case types$1._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types$1.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types$1._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types$1._true:\n      case types$1._false:\n        return this.parseBooleanLiteral();\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types$1._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}