{"version":3,"sources":["../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","keyword","cyan","capitalized","yellow","jsx_tag","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","NEWLINE","JSX_TAG","BRACKET","getTokenType","match","offset","text","token","matchToToken","type","isKeyword","isReservedWord","test","substr","toLowerCase","replace","colorize","map","supportsColor","forceColor","constructor","enabled","level","names","nameSet","prefix","result","buildTemplateCode","Set","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","formatters","_builder","_default","bind","undefined","beforeExpr","startsExpr","isLoop","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","node","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","params","raiseWithData","data","getLocationForPosition","message","_","_raise","errorContext","SyntaxError","errorRecovery","isLookahead","errors","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","scope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","id","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","tryParse","failState","clone","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","n","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","parent","update","ExpressionErrors","Node","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","computed","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement"],"mappings":"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","file":"static/js/vendors-runtime-template.5f440f79.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}