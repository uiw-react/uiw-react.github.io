{"version":3,"sources":["../../../node_modules/@babel/plugin-transform-classes/lib/index.js","../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../../../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_helperAnnotateAsPure","_interopRequireDefault","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","obj","__esModule","getBuiltinClasses","category","keys","filter","name","test","builtinClasses","Set","_default","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","get","isClassDeclaration","ClassDeclaration","node","ref","id","scope","generateUidIdentifier","replaceWith","types","variableDeclaration","variableDeclarator","toExpression","ClassExpression","state","inferred","file","isCallExpression","isArrowFunctionExpression","arrowFunctionToExpression","program","expression","statement","statements","smart","t","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","buildLiteralData","defaultReplacements","forEach","replacement","i","push","isLoose","assumptions","classState","parent","undefined","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","Map","static","setState","newState","findThisesVisitor","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","refToPreserve","replace","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","callExpression","addHelper","bareSupers","Super","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","formatters","_builder","bind","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","placeholderName","reverse","emptyStatement","applyReplacement"],"mappings":"kIAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAqBC,EAAQ,MAE7BC,EAAwBC,EAAuBF,EAAQ,MAEvDG,EAAsBD,EAAuBF,EAAQ,MAErDI,EAAgCF,EAAuBF,EAAQ,MAE/DK,EAAQL,EAAQ,KAEhBM,EAAWJ,EAAuBF,EAAQ,MAE1CO,EAAkBL,EAAuBF,EAAQ,OAErD,SAASE,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEV,QAASU,GAEvF,IAAME,EAAoB,SAAAC,GAAQ,OAAIjB,OAAOkB,KAAKN,EAASR,QAAQa,IAAWE,QAAO,SAAAC,GAAI,MAAI,SAASC,KAAKD,OAErGE,EAAiB,IAAIC,IAAJ,YAAYP,EAAkB,YAA9B,EAA6CA,EAAkB,cAElFQ,GAAW,EAAInB,EAAmBoB,UAAS,SAACC,EAAKC,GACnD,IAAIC,EAAiBC,EAAkBC,EAAkBC,EAEzDL,EAAIM,cAAc,GAH6C,IAK7DC,EACEN,EADFM,MAEIC,EAA2E,OAAxDN,EAAkBF,EAAIS,WAAW,oBAA8BP,EAAkBD,EAAQM,MAC5GG,EAAwE,OAAvDP,EAAmBH,EAAIS,WAAW,kBAA4BN,EAAmBF,EAAQM,MAC1GI,EAAkG,OAApEP,EAAmBJ,EAAIS,WAAW,+BAAyCL,EAAmBH,EAAQM,MACpIK,EAAsE,OAAtDP,EAAmBL,EAAIS,WAAW,iBAA2BJ,EAAmBJ,EAAQM,MACxGM,EAAUC,SAChB,MAAO,CACLpB,KAAM,oBACNqB,QAAS,CACPC,yBADO,SACkBC,GAClBA,EAAKC,IAAI,eAAeC,uBAC7B,EAAInC,EAA8BN,SAASuC,IAG7CG,iBANO,SAMUH,GAAM,IAEnBI,EACEJ,EADFI,KAEIC,EAAMD,EAAKE,IAAMN,EAAKO,MAAMC,sBAAsB,SACxDR,EAAKS,YAAYzC,EAAM0C,MAAMC,oBAAoB,MAAO,CAAC3C,EAAM0C,MAAME,mBAAmBP,EAAKrC,EAAM0C,MAAMG,aAAaT,QAGxHU,gBAdO,SAcSd,EAAMe,GAAO,IAEzBX,EACEJ,EADFI,KAEF,IAAIA,EAAKR,GAAT,CACA,IAAMoB,GAAW,EAAIlD,EAAoBL,SAASuC,GAE9CgB,GAAYA,IAAaZ,EAC3BJ,EAAKS,YAAYO,IAInBZ,EAAKR,IAAW,EAChBI,EAAKS,aAAY,EAAIvC,EAAgBT,SAASuC,EAAMe,EAAME,KAAMtC,EAAgBW,EAAO,CACrFC,kBACAE,gBACAC,6BACAC,kBAGEK,EAAKkB,sBACP,EAAItD,EAAsBH,SAASuC,GAE/BA,EAAKC,IAAI,UAAUkB,6BACrBnB,EAAKC,IAAI,UAAUmB,qCAS/B7D,EAAQE,QAAUoB,G,+CCtFlBxB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ8D,QAAU9D,EAAQ+D,WAAa/D,EAAQgE,UAAYhE,EAAQiE,WAAajE,EAAQkE,WAAQ,EAEhG,IAAIC,EAIJ,SAAiCvD,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEV,QAASU,GAAS,IAAIwD,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAI1D,GAAQ,OAAOwD,EAAM1B,IAAI9B,GAAQ,IAAI2D,EAAS,GAAQC,EAAwB1E,OAAOC,gBAAkBD,OAAO2E,yBAA0B,IAAK,IAAIC,KAAO9D,EAAO,GAAId,OAAO6E,UAAUC,eAAeC,KAAKjE,EAAK8D,GAAM,CAAE,IAAII,EAAON,EAAwB1E,OAAO2E,yBAAyB7D,EAAK8D,GAAO,KAAUI,IAASA,EAAKpC,KAAOoC,EAAKC,KAAQjF,OAAOC,eAAewE,EAAQG,EAAKI,GAAgBP,EAAOG,GAAO9D,EAAI8D,GAAYH,EAAOrE,QAAUU,EAASwD,GAASA,EAAMW,IAAInE,EAAK2D,GAAW,OAAOA,EAJttBS,CAAwB5E,EAAQ,MAExC,SAASiE,IAA6B,GAAuB,oBAAZY,QAAwB,OAAO,KAAM,IAAIb,EAAQ,IAAIa,QAAqE,OAA1DZ,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,SAASc,EAAuBC,GAC9B,MAAO,CACLC,KAAM,SAAAC,GAAG,wCAA+BA,IACxCC,SAAU,aACVC,OAAQ,SAAAC,GACN,OAAOL,EAAGK,EAAI1B,QAAQ2B,KAAKC,MAAM,MAKvC,IAAMxB,EAAQgB,GAAuB,SAAAO,GACnC,OAAIA,EAAKE,OAAS,EACTF,EAEAA,EAAK,MAGhBzF,EAAQkE,MAAQA,EAChB,IAAMD,EAAaiB,GAAuB,SAAAO,GAAI,OAAIA,KAClDzF,EAAQiE,WAAaA,EACrB,IAAMD,EAAYkB,GAAuB,SAAAO,GACvC,GAAoB,IAAhBA,EAAKE,OACP,MAAM,IAAIC,MAAM,4BAGlB,GAAIH,EAAKE,OAAS,EAChB,MAAM,IAAIC,MAAM,4CAGlB,OAAOH,EAAK,MAEdzF,EAAQgE,UAAYA,EACpB,IAAMD,EAAa,CACjBqB,KAAM,SAAAC,GAAG,mBAAUA,EAAV,QACTC,SAAU,SAAAE,GACR,GAAIA,EAAI1B,QAAQ2B,KAAKE,OAAS,EAC5B,MAAM,IAAIC,MAAM,4CAGlB,GAAqC,IAAjC7B,EAAWwB,OAAOC,GAAKK,MACzB,MAAM,IAAID,MAAM,kCAGpBL,OAAQ,YAEF,IADJzB,EACI,EADJA,QAEOgC,EADH,EACWhC,EAAQ2B,KADnB,MAGJ,OADAtB,EAAE4B,0BAA0BD,GACrBA,EAAK/B,aAGhB/D,EAAQ+D,WAAaA,EAMrB/D,EAAQ8D,QALQ,CACdsB,KAAM,SAAAC,GAAG,OAAIA,GACbC,SAAU,aACVC,OAAQ,SAAAC,GAAG,OAAIA,EAAI1B,W,kCClErBhE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAcR,SAAS8F,EAAsBC,EAAWC,GACxC,IAAMC,EAAkB,IAAIlB,QACtBmB,EAAmB,IAAInB,QACvBoB,EAAaH,IAAe,EAAII,EAAShB,UAAU,MACzD,OAAOxF,OAAOyG,QAAO,SAACC,GAAiB,2BAATC,EAAS,iCAATA,EAAS,kBACrC,GAAmB,kBAARD,EAAkB,CAC3B,GAAIC,EAAKd,OAAS,EAAG,MAAM,IAAIC,MAAM,4BACrC,OAAOc,GAAc,EAAIC,EAAQzG,SAAS+F,EAAWO,GAAK,EAAIF,EAASM,OAAOP,GAAY,EAAIC,EAAShB,UAAUmB,EAAK,OACjH,GAAII,MAAMC,QAAQN,GAAM,CAC7B,IAAIO,EAAUZ,EAAgBzD,IAAI8D,GAOlC,OALKO,IACHA,GAAU,EAAIC,EAAS9G,SAAS+F,EAAWO,EAAKH,GAChDF,EAAgBpB,IAAIyB,EAAKO,IAGpBL,EAAcK,EAAQN,IACxB,GAAmB,kBAARD,GAAoBA,EAAK,CACzC,GAAIC,EAAKd,OAAS,EAAG,MAAM,IAAIC,MAAM,4BACrC,OAAOI,EAAsBC,GAAW,EAAIK,EAASM,OAAOP,GAAY,EAAIC,EAAShB,UAAUkB,KAGjG,MAAM,IAAIZ,MAAJ,2CAA8CY,MACnD,CACDhB,IAAK,SAACgB,GAAiB,2BAATC,EAAS,iCAATA,EAAS,kBACrB,GAAmB,kBAARD,EAAkB,CAC3B,GAAIC,EAAKd,OAAS,EAAG,MAAM,IAAIC,MAAM,4BACrC,OAAO,EAAIe,EAAQzG,SAAS+F,EAAWO,GAAK,EAAIF,EAASM,QAAO,EAAIN,EAASM,OAAOP,GAAY,EAAIC,EAAShB,UAAUmB,EAAK,KAAMQ,GAA3H,GACF,GAAIJ,MAAMC,QAAQN,GAAM,CAC7B,IAAIO,EAAUX,EAAiB1D,IAAI8D,GAOnC,OALKO,IACHA,GAAU,EAAIC,EAAS9G,SAAS+F,EAAWO,GAAK,EAAIF,EAASM,OAAOP,EAAYY,IAChFb,EAAiBrB,IAAIyB,EAAKO,IAGrBA,EAAQN,EAARM,GAGT,MAAM,IAAInB,MAAJ,2CAA8CY,QAnD1D,IAAIF,EAAWlG,EAAQ,KAEnBuG,EAAUrG,EAAuBF,EAAQ,OAEzC4G,EAAW1G,EAAuBF,EAAQ,OAE9C,SAASE,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEV,QAASU,GAEvF,IAAMqG,GAAiB,EAAIX,EAAShB,UAAU,CAC5C4B,oBAAoB,IA+CtB,SAASR,EAAcvB,GACrB,IAAIgC,EAAY,GAEhB,IACE,MAAM,IAAIvB,MACV,MAAOwB,GACHA,EAAMC,QACRF,EAAYC,EAAMC,MAAMC,MAAM,MAAM5B,MAAM,GAAG6B,KAAK,OAItD,OAAO,SAAAC,GACL,IACE,OAAOrC,EAAGqC,GACV,MAAOC,GAEP,MADAA,EAAIJ,OAAJ,+BAAqCF,GAC/BM,M,kCC7EZ3H,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAAwB+F,EAAWb,EAAMsC,GAEvC,IAAIC,EACJ,OAFAvC,EAAOa,EAAUb,KAAKA,GAEf,SAAAoC,GACL,IAAMI,GAAe,EAAItB,EAASuB,uBAAuBL,GAEzD,OADKG,IAAUA,GAAW,EAAIG,EAAO5H,SAAS+F,EAAWb,EAAMsC,IACxDzB,EAAUV,QAAO,EAAIwC,EAAU7H,SAASyH,EAAUC,MAd7D,IAAItB,EAAWlG,EAAQ,KAEnB0H,EAASxH,EAAuBF,EAAQ,MAExC2H,EAAYzH,EAAuBF,EAAQ,MAE/C,SAASE,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEV,QAASU,K,uDCXvFd,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQgI,gBAAkBA,EAC1BhI,EAAQiI,SAAWA,EACnBjI,EAAQE,QAmGR,SAAmBkF,GAAoB,IAAd3D,EAAc,uDAAJ,GACjC,GAAIuG,EAAgBvG,GAAU,CAC5B,IAAMyG,EAAQD,EAASxG,GACjB0G,EAAOC,EAAQF,GACrB,OAAOG,EAAgBF,EAAM/C,GAE7B,OAAOA,GAvGX,IAAIkD,EAA6BlI,EAAQ,KAEnCmI,EAAWnI,EAAQ,MAEnBoI,EAAQpI,EAAQ,MAEhBqI,EAAoB,IAAIpH,IAAI,CAAC,KAAM,QAAS,OAAQ,MAAO,KAAM,QAEvE,SAAS+G,EAAQF,GACf,MAAO,CACLQ,QAASR,EAAMS,KACfC,YAAaV,EAAMW,OACnBC,cAAeZ,EAAMW,OACrBE,WAAYb,EAAMW,OAClBG,OAAQd,EAAMe,QACdC,OAAQhB,EAAMiB,MACdC,MAAOlB,EAAMe,QACbI,QAASnB,EAAMoB,KACfC,QAASrB,EAAMsB,MAAMC,MAAMC,MAI/B,IAEIC,EAFEC,EAAU,0BACVC,EAAU,cAGRC,EAAU,iBAEVC,EAAe,SAAUC,EAAOC,EAAQC,GAC5C,GAAmB,SAAfF,EAAMG,KAAiB,CACzB,IAAI,EAAI7B,EAA2B8B,WAAWJ,EAAM/J,SAAU,EAAIqI,EAA2B+B,sBAAsBL,EAAM/J,OAAO,IAASwI,EAAkBnE,IAAI0F,EAAM/J,OACnK,MAAO,UAGT,GAAI6J,EAAQ3I,KAAK6I,EAAM/J,SAAgC,MAArBiK,EAAKD,EAAS,IAA4C,MAA9BC,EAAKI,OAAOL,EAAS,EAAG,IACpF,MAAO,gBAGT,GAAID,EAAM/J,MAAM,KAAO+J,EAAM/J,MAAM,GAAGsK,cACpC,MAAO,cAIX,MAAmB,eAAfP,EAAMG,MAAyBN,EAAQ1I,KAAK6I,EAAM/J,OAC7C,UAGU,YAAf+J,EAAMG,MAAuC,MAAhBH,EAAM/J,OAAiC,MAAhB+J,EAAM/J,MAIvD+J,EAAMG,KAHJ,cAmBb,SAAS9B,EAAgBF,EAAM+B,GAC7B,IADmC,EAC/BM,EAAc,GADiB,IAM9Bb,EAASO,IANqB,mCAIjCC,EAJiC,EAIjCA,KACAlK,EALiC,EAKjCA,MAEMwK,EAAWtC,EAAKgC,GAGpBK,GADEC,EACaxK,EAAMqH,MAAMsC,GAASc,KAAI,SAAArF,GAAG,OAAIoF,EAASpF,MAAMkC,KAAK,MAEpDtH,GATnB,2BAGqB,IANc,8BAgBnC,OAAOuK,EAGT,SAASxC,EAAgBvG,GACvB,QAAS+G,EAAMmC,eAAiBlJ,EAAQmJ,WAG1C,SAAS3C,EAASxG,GAChB,OAAOA,EAAQmJ,WAAa,IAAIpC,EAAMqC,YAAY,CAChDC,SAAS,EACTC,MAAO,IACJvC,EAxCLmB,EAAQ,QAAG,WAAWO,GAAX,4EAGFc,EAAQzC,EAASrI,QAAQ+K,KAAKf,IAH5B,gBAKP,OADMF,EAAQzB,EAAS2C,aAAaF,GAJ7B,SAKD,CACJb,KAAMJ,EAAaC,EAAOgB,EAAMG,MAAOjB,GACvCjK,MAAO+J,EAAM/J,OAPR,iE,kCC7DbH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAAyB+F,EAAWO,EAAKkB,GAAM,MA0B/C,SAA0BzB,EAAWO,EAAKkB,GACxC,IAAI0D,EACAC,EACA1D,EACA2D,EAAS,GAEb,EAAG,CAED,IAAMC,EAASC,EAAkBhF,EADjC8E,GAAU,KAEVF,EAAQG,EAAOH,MACfC,EAAU,IAAIhK,IAAI+J,GAClBzD,GAAW,EAAIG,EAAO5H,SAAS+F,EAAWA,EAAUb,KAAKmG,EAAOnG,MAAO,CACrEqG,OAAQ/D,EAAK+D,OACbC,qBAAsB,IAAIrK,IAAIkK,EAAOH,MAAMO,OAAOjE,EAAKgE,qBAAuB7E,MAAM+E,KAAKlE,EAAKgE,sBAAwB,KACtHxE,mBAAoBQ,EAAKR,mBACzB2E,iBAAkBnE,EAAKmE,iBACvBC,sBAAuBpE,EAAKoE,8BAEvBnE,EAASoE,aAAaC,MAAK,SAAAC,GAAW,OAAIA,EAAYC,aAAeb,EAAQ/G,IAAI2H,EAAY/K,UAEtG,MAAO,CACLyG,WACAyD,SA5CEe,CAAiBlG,EAAWO,EAAKkB,GAFnCC,EAF2C,EAE3CA,SACAyD,EAH2C,EAG3CA,MAEF,OAAO,SAAA5D,GACL,IAAM4E,EAAsB,GAI5B,OAHA5E,EAAI6E,SAAQ,SAACC,EAAaC,GACxBH,EAAoBhB,EAAMmB,IAAMD,KAE3B,SAAA9E,GACL,IAAMI,GAAe,EAAItB,EAASuB,uBAAuBL,GAUzD,OARII,GACF9H,OAAOkB,KAAK4G,GAAcyE,SAAQ,SAAA3H,GAChC,GAAI5E,OAAO6E,UAAUC,eAAeC,KAAKuH,EAAqB1H,GAC5D,MAAM,IAAIkB,MAAM,sCAKfK,EAAUV,QAAO,EAAIwC,EAAU7H,SAASyH,EAAUC,EAAe9H,OAAOyG,OAAOqB,EAAcwE,GAAuBA,OA7BjI,IAAI9F,EAAWlG,EAAQ,KAEnB0H,EAASxH,EAAuBF,EAAQ,MAExC2H,EAAYzH,EAAuBF,EAAQ,MAE/C,SAASE,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEV,QAASU,GAsDvF,SAAS4K,EAAkBhF,EAAK8E,GAI9B,IAHA,IAAMF,EAAQ,GACVhG,EAAOoB,EAAI,GAEN+F,EAAI,EAAGA,EAAI/F,EAAIb,OAAQ4G,IAAK,CACnC,IAAMtM,EAAQ,GAAH,OAAMqL,GAAN,OAAeiB,EAAI,GAC9BnB,EAAMoB,KAAKvM,GACXmF,GAAQnF,EAAQuG,EAAI+F,GAGtB,MAAO,CACLnB,QACAhG,U,mEC7EJtF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QA4BR,SAAwBuC,EAAMiB,EAAMtC,EAAgBqL,EAASC,GAC3D,IAAMC,EAAa,CACjBC,YAAQC,EACR7J,WAAO6J,EACPhK,UAAMgK,EACNpK,UAAMoK,EACNnJ,UAAMmJ,EACNC,aAASD,EACTE,cAAUF,EACVG,eAAWH,EACXI,eAAWJ,EACXK,aAAc,GACdC,WAAW,EACXC,eAAe,EACfC,eAAWR,EACXS,qBAAiBT,EACjBU,qBAAiBV,EACjBW,yBAAqBX,EACrBY,gBAAgB,EAChBC,eAAgB,GAChBjI,KAAM,GACNkI,YAAa,GACbC,mBAAmB,EACnBC,gBAAgB,EAChBC,WAAY,KACZrB,SAAS,EACTsB,QAAS,CACPC,SAAU,CACRC,aAAa,EACbC,KAAM,GACNxD,IAAK,IAAIyD,KAEXC,OAAQ,CACNH,aAAa,EACbC,KAAM,GACNxD,IAAK,IAAIyD,OAKTE,EAAW,SAAAC,GACfxO,OAAOyG,OAAOoG,EAAY2B,IAGtBC,EAAoB9N,EAAM+N,SAASC,SAAS7H,MAAM,CAAC8H,EAAqBC,mBAAoB,CAChGC,eADgG,SACjFnM,GACbkK,EAAWgB,YAAYnB,KAAK/J,OAiChC,SAASoM,IAKP,GAjCF,WACE,IADgC,EAC5BpB,GAAiB,EACfqB,EAAQnC,EAAWlK,KAAKC,IAAI,aAFF,IAIboM,GAJa,IAIhC,6BACErB,EADwB,QACFsB,OAAO,OAAQ,mBALP,8BAShC,IAAItB,EAAJ,CACA,IAAIuB,EAAQvJ,EAEZ,GAAIkH,EAAWQ,UAAW,CACxB,IAAMtC,EAAcpK,EAAMwO,SAASlL,WAAWyB,IAA7B,4FAKjBwJ,EAASnE,EAAYmE,OACrBvJ,EAAOoF,EAAYpF,UAEnBuJ,EAAS,GACTvJ,EAAOhF,EAAM0C,MAAM+L,eAAe,IAGpCvC,EAAWlK,KAAKC,IAAI,QAAQyM,iBAAiB,OAAQ1O,EAAM0C,MAAMiM,YAAY,cAAe3O,EAAM0C,MAAMkM,WAAW,eAAgBL,EAAQvJ,KAI3I6J,GAoBF,WACE,IADkB,EACZC,EAAiB5C,EAAWlK,KAAKC,IAAI,aADzB,IAGC6M,GAHD,IAGlB,2BAAmC,KAAxB9M,EAAwB,QAC3BI,EAAOJ,EAAKI,KAElB,GAAIJ,EAAK+M,kBACP,MAAM/M,EAAKgN,oBAAoB,uCAGjC,GAAI5M,EAAK6M,WACP,MAAMjN,EAAKgN,oBAAoB,2EAG7BhP,EAAM0C,MAAMwM,cAAc9M,IAAO,WACnC,IAAM+M,EAA8B,gBAAd/M,EAAKgN,KACL,IAAInB,EAAqBxO,QAAQ,CACrD4P,WAAYrN,EACZsN,UAAWpD,EAAWI,SACtBiD,SAAUrD,EAAWM,UACrB/K,cAAewK,EAAYxK,cAC3BwB,KAAMiJ,EAAWjJ,KACjBuM,cAAetD,EAAWI,WAEdmD,UACd,IAAMhD,EAAe,GACrBzK,EAAK+L,SAAS/N,EAAM+N,SAASC,SAAS7H,MAAM,CAAC8H,EAAqBC,mBAAoB,CACpFwB,gBADoF,SACpE1N,GACTA,EAAK2N,oBAAoBxM,6BAC5BsJ,EAAaV,KAAK/J,QAMpBmN,EACFS,EAAgBnD,EAAcrK,EAAMJ,GAEpC6N,EAAWzN,EAAMJ,GAxBgB,IAdrB,+BAnBlB8N,GAsIF,WACE,IAAK5D,EAAWQ,UAAW,OAC3B,IAAM1K,EAAOkK,EAAWa,oBAClB/H,EAAOhD,EAAKC,IAAI,QACtBD,EAAK+L,SAASD,GAEd,IAN2B,EAMvBiC,EAAU,WACZ,IAAM1N,EAAML,EAAKO,MAAMyN,8BAA8B,QAIrD,OAFAD,EAAU,kBAAM/P,EAAM0C,MAAMuN,UAAU5N,IAE/BA,GAXkB,IAcJ6J,EAAWgB,aAdP,IAc3B,2BAA+C,KAApCgD,EAAoC,QAE3C9N,EAEE8N,EAFF9N,KAEE8N,EADFC,WAGaC,mBAAmB,CAChCC,OAAQjO,IAER8N,EAASzN,YAAYsN,KAIvBG,EAASzN,YAAYzC,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,yBAA0B,CAACR,QA3B5E,8BA8B3B,IAAMS,EAAa,IAAI5P,IACvBoB,EAAK+L,SAAS/N,EAAM+N,SAASC,SAAS7H,MAAM,CAAC8H,EAAqBC,mBAAoB,CACpFuC,MADoF,SAC9EzO,GAAM,IAERI,EAEEJ,EAFFI,KACA+N,EACEnO,EADFmO,WAGEA,EAAWjN,iBAAiB,CAC9BwN,OAAQtO,KAERoO,EAAWG,IAAIR,QAKrB,IA9C2B,EAiEvBS,EAnBAC,IAAgCL,EAAWM,KA9CpB,IAgDHN,GAhDG,IAgD3B,2BAAoC,KAAzBO,EAAyB,QAClCC,EAAcD,EAAW7E,EAAWM,UAAWuD,EAAS/K,GAEpD6L,GACFE,EAAUE,MAAK,SAAUd,GACvB,OAAIA,IAAenO,IAIfmO,EAAWe,UAAYf,EAAWgB,iBAAmBhB,EAAWhN,6BAClE0N,GAA8B,GACvB,QAFT,OAzDqB,8BAoEzBD,EADE1E,EAAWF,QACA,SAAAoF,GACX,IAAMC,EAAWrR,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,yBAA0B,CAACR,MAEjG,OAAOqB,EAAYpR,EAAM0C,MAAM4O,kBAAkB,KAAMF,EAAWC,GAAYA,GAGnE,SAAAD,GAAS,OAAIpR,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,6BAA8B,CAACR,KAAW7E,OAAOkG,GAAa,MAG/I,IAAMG,EAAYvM,EAAK/C,IAAI,QAEtBsP,EAAUrM,QAAWqM,EAAUC,MAAMC,qBACxCzM,EAAK0M,cAAc,OAAQ1R,EAAM0C,MAAMiP,gBAAgBd,EAA8Bd,IAAYa,MAhFxE,UAmFF1E,EAAWO,cAnFT,IAmF3B,2BAAkD,KAAvCmF,EAAuC,QAChDA,EAAW3P,IAAI,YAAYQ,YAAYmO,EAAWgB,EAAWxP,KAAKyP,YApFzC,+BArI3BC,GAEI5F,EAAWY,gBAAiB,KAE5BD,EAGEX,EAHFW,gBACAC,EAEEZ,EAFFY,gBACAF,EACEV,EADFU,UAEFC,EAAgB7H,KAAO6H,EAAgB7H,KAAKkG,OAAO4B,EAAgB9H,KAAKA,MAExEhF,EAAM0C,MAAMqP,SAASnF,EAAWE,GAEhC9M,EAAM0C,MAAMqP,SAASlF,EAAiBC,EAAgB9H,MAGxDgN,IA+CF,SAASA,IACPC,IASA,IAVyB,IAGvBjN,EACEkH,EADFlH,KAEIkN,EAAQ,CACZ3E,SAAU,KACVI,OAAQ,MAGV,MAAwB,CAAC,SAAU,YAAnC,eAAgD,CAA3C,IAAMwE,EAAS,KACdjG,EAAWoB,QAAQ6E,GAAW1E,KAAKvI,SACrCgN,EAAMC,GAAajG,EAAWoB,QAAQ6E,GAAW1E,KAAKxD,KAAI,SAAA5F,GAGxD,IAFA,IAAMlE,EAAMH,EAAM0C,MAAM0P,iBAAiB,CAACpS,EAAM0C,MAAM2P,eAAerS,EAAM0C,MAAMkM,WAAW,OAAQvK,EAAKJ,OAEzG,MAAmB,CAAC,MAAO,MAAO,SAAlC,eAA4C,CAAvC,IAAMmL,EAAI,KACK,MAAd/K,EAAK+K,IACPjP,EAAImS,WAAWvG,KAAK/L,EAAM0C,MAAM2P,eAAerS,EAAM0C,MAAMkM,WAAWQ,GAAO/K,EAAK+K,KAItF,OAAOjP,MAKb,GAAI+R,EAAM3E,UAAY2E,EAAMvE,OAAQ,CAIlC,IAHA,IAAI3H,EAAO,CAAChG,EAAM0C,MAAMuN,UAAU/D,EAAWI,UAAW4F,EAAM3E,SAAWvN,EAAM0C,MAAM6P,gBAAgBL,EAAM3E,UAAYvN,EAAM0C,MAAM8P,cAAeN,EAAMvE,OAAS3N,EAAM0C,MAAM6P,gBAAgBL,EAAMvE,QAAU3N,EAAM0C,MAAM8P,eACrNC,EAAmB,EAEd3G,EAAI,EAAGA,EAAI9F,EAAKd,OAAQ4G,IAC1B9L,EAAM0C,MAAMgQ,cAAc1M,EAAK8F,MAAK2G,EAAmB3G,GAG9D9F,EAAOA,EAAKf,MAAM,EAAGwN,EAAmB,GACxCzN,EAAK+G,KAAK/L,EAAM0C,MAAMiQ,oBAAoB3S,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,eAAgBvK,MAInH,SAASgL,EAAcD,EAAWxB,EAAUQ,EAAS/K,GACnD,IACIZ,EADEwO,EAAgB7B,EAAU3O,KAG5B6J,EAAYvK,4BACdkR,EAAcC,UAAUC,QAAQ9S,EAAM0C,MAAMqQ,kBAEL,IAAnCH,EAAcC,UAAU3N,QAAgBlF,EAAM0C,MAAMsQ,gBAAgBJ,EAAcC,UAAU,KAAO7S,EAAM0C,MAAMuQ,aAAaL,EAAcC,UAAU,GAAGhB,SAAU,CACnKpR,KAAM,eAENmS,EAAcC,UAAU,GAAKD,EAAcC,UAAU,GAAGhB,SACxDe,EAAclC,OAAS1Q,EAAM0C,MAAMwQ,iBAAiBlT,EAAM0C,MAAMuN,UAAUV,GAAWvP,EAAM0C,MAAMkM,WAAW,WAE5GgE,EAAclC,OAAS1Q,EAAM0C,MAAMwQ,iBAAiBlT,EAAM0C,MAAMuN,UAAUV,GAAWvP,EAAM0C,MAAMkM,WAAW,SAG9GxK,EAAOpE,EAAM0C,MAAM4O,kBAAkB,KAAMsB,EAAe5S,EAAM0C,MAAMqQ,mBAEtE3O,GAAO,EAAI+O,EAA8B1T,SAASO,EAAM0C,MAAMuN,UAAU/D,EAAWK,WAAYvM,EAAM0C,MAAMqQ,iBAAkBH,EAAcC,WAGzI9B,EAAUZ,WAAWiD,yBAA2BrC,EAAUZ,WAAWkD,YAAcrO,EAAK5C,KAAK4C,MAAQA,EAAK5C,KAAK4C,KAAKE,OAAS,IAAM6L,EAAUZ,WAAWlM,KACtJiI,EAAWgB,YAAYhI,SACzBd,EAAOpE,EAAM0C,MAAM4Q,qBAAqB,IAAKvD,IAAW3L,IAG1D2M,EAAUZ,WAAW1N,YAAYzC,EAAM0C,MAAMiP,gBAAgBvN,KAE7D2M,EAAUtO,YAAYzC,EAAM0C,MAAM4Q,qBAAqB,IAAKvD,IAAW3L,IA4F3E,SAASyL,EAAWzN,EAAMJ,GACxB,IAAMO,EAAQP,EAAOA,EAAKO,MAAQ2J,EAAW3J,MAE7C,GAAkB,WAAdH,EAAKgN,OAgDX,SAAuBhN,EAAMG,GAC3B,GAAI0J,EAAY1K,kBAAoBa,EAAK6M,WAAY,KAEjD3C,EACEJ,EADFI,SAGGlK,EAAKuL,UAgCd,WACE,GAA8B,OAA1BzB,EAAWmB,WAAqB,CAClCO,EAAS,CACPP,WAAYnB,EAAW3J,MAAMC,sBAAsB,WAGrD,IAAM+Q,EAAavT,EAAM0C,MAAMwQ,iBAAiBhH,EAAWI,SAAUtM,EAAM0C,MAAMkM,WAAW,cAEtF4E,EAAmBxT,EAAM0C,MAAMC,oBAAoB,MAAO,CAAC3C,EAAM0C,MAAME,mBAAmBsJ,EAAWmB,WAAYkG,KAEvHrH,EAAWlH,KAAK+G,KAAKyH,IAzCnBC,GACAnH,EAAWJ,EAAWmB,YAGxB,IAAMqG,EAAa1T,EAAM0C,MAAMwQ,iBAAiBlT,EAAM0C,MAAMuN,UAAU3D,GAAWlK,EAAK6B,IAAK7B,EAAKuR,UAAY3T,EAAM0C,MAAMkR,UAAUxR,EAAK6B,MAEnI4P,EAAO7T,EAAM0C,MAAMoR,mBAAmB,KAAM1R,EAAKmM,OAAQnM,EAAK4C,KAAM5C,EAAK2R,UAAW3R,EAAK4R,OAE7FhU,EAAM0C,MAAMqP,SAAS8B,EAAMzR,GAE3B,IAAM6B,EAAMjE,EAAM0C,MAAMuR,cAAc7R,EAAMA,EAAK6B,KAE7CjE,EAAM0C,MAAMwR,gBAAgBjQ,KAC9B4P,GAAO,EAAI/T,EAAoBL,SAAS,CACtC2C,KAAMyR,EACNvR,GAAI2B,EACJ1B,WAIJ,IAAM4R,EAAOnU,EAAM0C,MAAMiQ,oBAAoB3S,EAAM0C,MAAM4Q,qBAAqB,IAAKI,EAAYG,IAK/F,OAHA7T,EAAM0C,MAAM0R,iBAAiBD,EAAM/R,GAEnC8J,EAAWlH,KAAK+G,KAAKoI,IACd,EAGT,OAAO,EAlFDE,CAAcjS,EAAMG,GAD1B,CAIA,IAmBI+R,EAnBEnC,EAAY/P,EAAKuL,OAAS,SAAW,WACrCL,EAAUpB,EAAWoB,QAAQ6E,GAC7BoC,EAAwB,WAAdnS,EAAKgN,KAAoB,QAAUhN,EAAKgN,KAClDnL,EAAMjE,EAAM0C,MAAM8R,iBAAiBpS,EAAK6B,MAAQjE,EAAM0C,MAAM+R,gBAAgBrS,EAAK6B,KAAOjE,EAAM0C,MAAMgS,cAAcC,OAAOvS,EAAK6B,IAAIzE,QAAUQ,EAAM0C,MAAMuR,cAAc7R,GAExKsC,EAAK1E,EAAM0C,MAAMG,aAAaT,GAE9BpC,EAAM0C,MAAMwR,gBAAgBjQ,GACZ,WAAd7B,EAAKgN,OACP1K,GAAK,EAAI5E,EAAoBL,SAAS,CACpC6C,GAAI2B,EACJ7B,KAAMA,EACNG,WAIJ+K,EAAQE,aAAc,GAKnBF,EAAQE,aAAeF,EAAQrD,IAAIpG,IAAII,EAAIzE,SAC9C8U,EAAahH,EAAQrD,IAAIhI,IAAIgC,EAAIzE,QACtB+U,GAAW7P,EAEN,UAAZ6P,GACFD,EAAWrS,IAAM,KACjBqS,EAAWhQ,IAAM,MAEjBgQ,EAAW9U,MAAQ,OAGrB8U,EAAa,EAAH,CACRrQ,IAAKA,GACJsQ,EAAU7P,GAEb4I,EAAQG,KAAK1B,KAAKuI,GAEbhH,EAAQE,aACXF,EAAQrD,IAAI3F,IAAIL,EAAIzE,MAAO8U,KAyDjC,SAAS1E,EAAgBnD,EAAcmI,EAAQ5S,GAC7C4L,EAAS,CACPb,oBAAqB/K,EACrB8K,gBAAiB8H,EACjB5H,gBAAgB,EAChBP,iBALiD,IAQjDG,EACEV,EADFU,UAGF5M,EAAM0C,MAAM0R,iBAAiBxH,EAAWgI,GAExChI,EAAU2B,OAASqG,EAAOrG,OAE1BvO,EAAM0C,MAAMqP,SAASnF,EAAU5H,KAAM4P,EAAO5P,MAE5C4H,EAAU5H,KAAK6P,WAAaD,EAAO5P,KAAK6P,WAI1C,WACE,GAAI3I,EAAWiB,kBAAmB,OAClCjB,EAAWiB,mBAAoB,GAE3BjB,EAAW4I,wBAA0B5I,EAAW6I,uBAClD/C,IAGF9F,EAAWlH,KAAK+G,KAAKG,EAAWU,WAChCqF,IAZA+C,GAeF,SAAS/C,IACP,GAAK/F,EAAWQ,YAAaR,EAAWkB,eAAxC,CACA,IAAMb,EAAYvK,EAAKO,MAAMC,sBAAsB,SACnDoL,EAAS,CACPR,gBAAgB,EAChBb,cAGGN,EAAYvK,4BACfwK,EAAWlH,KAAK8N,QAAQ9S,EAAM0C,MAAMC,oBAAoB,MAAO,CAAC3C,EAAM0C,MAAME,mBAAmB2J,EAAWvM,EAAM0C,MAAM4N,gBAAe,EAAI2E,EAA0BxV,SAASyM,EAAWjJ,MAAO,CAACjD,EAAM0C,MAAMuN,UAAU/D,EAAWI,gBAGlOJ,EAAWlH,KAAK8N,QAAQ9S,EAAM0C,MAAMiQ,oBAAoB3S,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAUrE,EAAWF,QAAU,gBAAkB,YAAa,CAAChM,EAAM0C,MAAMuN,UAAU/D,EAAWI,UAAWtM,EAAM0C,MAAMuN,UAAU/D,EAAWM,gBAsGjP,OAtEA,SAA0BxK,EAAMiB,EAAMtC,EAAgBqL,GACpD4B,EAAS,CACPzB,OAAQnK,EAAKmK,OACb5J,MAAOP,EAAKO,MACZH,KAAMJ,EAAKI,KACXJ,OACAiB,OACA+I,YAEF4B,EAAS,CACPvB,QAASH,EAAW9J,KAAKE,GACzBgK,SAAUJ,EAAW9J,KAAKE,GAAKtC,EAAM0C,MAAMkM,WAAW1C,EAAW9J,KAAKE,GAAG7B,MAAQyL,EAAW3J,MAAMC,sBAAsB,SACxHgK,UAAWN,EAAW9J,KAAK8S,WAC3BxI,YAAaR,EAAW9J,KAAK8S,WAC7BrI,gBAAiB7M,EAAM0C,MAAM+L,eAAe,MAE9Cb,EAAS,CACPjB,cAAeT,EAAWQ,WAAa/L,EAAekD,IAAIqI,EAAWM,UAAU/L,QAAUyL,EAAW3J,MAAM4S,WAAWjJ,EAAWM,UAAU/L,MAAM,KAjBrF,IAoB3D6L,EAGEJ,EAHFI,SACAlK,EAEE8J,EAFF9J,KACAyK,EACEX,EADFW,gBAEFe,EAAS,CACPhB,UAAWwI,EAAiB9I,EAAUO,EAAiBzK,KAzBI,IA4B3D4C,EACEkH,EADFlH,KA5B2D,EA7B/D,WAAkC,IAE9BwH,EACEN,EADFM,UAEI6I,EAAgB,GAChBC,EAAc,GAEpB,GAAIpJ,EAAWQ,UAAW,CACxB,IAAI3F,EAAM/G,EAAM0C,MAAMuN,UAAUzD,GAE5BN,EAAWS,gBACb5F,EAAM/G,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,mBAAoB,CAACxJ,KAChF,EAAInH,EAAsBH,SAASsH,IAGrC,IAAMwO,EAAQrJ,EAAW3J,MAAMiT,iCAAiChJ,GAChE6I,EAActJ,KAAKwJ,GACnBD,EAAYvJ,KAAKhF,GACjB6G,EAAS,CACPpB,UAAWxM,EAAM0C,MAAMuN,UAAUsF,KAIrC,MAAO,CACLF,gBACAC,eAqCEG,GAFFJ,EA/B2D,EA+B3DA,cACAC,EAhC2D,EAgC3DA,YAEFlH,IAEKnC,EAAYtK,cACfkL,EAAgB7H,KAAK8N,QAAQ9S,EAAM0C,MAAMiQ,oBAAoB3S,EAAM0C,MAAM4N,eAAepE,EAAWjJ,KAAKsN,UAAU,kBAAmB,CAACvQ,EAAM0C,MAAMqQ,iBAAkB/S,EAAM0C,MAAMuN,UAAU/D,EAAWI,cAGvMtH,EAAOA,EAAKkG,OAAOgB,EAAWe,eAAehD,KAAI,SAAAvF,GAAE,OAAIA,EAAG1E,EAAM0C,MAAMuN,UAAU/D,EAAWI,eAC3F,IAAMoJ,EAAW1T,EAAK2T,iBAClBC,EAAkB1J,EAAWG,SAA2B,IAAhBrH,EAAKE,OAEjD,GAAI0Q,IAAoBF,EAAU,WACZxJ,EAAWU,UAAU2B,QADT,IAChC,2BAAiD,KAAtCgH,EAAsC,QAC/C,IAAKvV,EAAM0C,MAAMuQ,aAAasC,GAAQ,CACpCK,GAAkB,EAClB,QAJ4B,+BASlC,IAAMf,EAAae,EAAkB5Q,EAAK,GAAGA,KAAK6P,WAAa,GAM/D,GAJKa,GACHb,EAAW9I,KAAK/L,EAAM0C,MAAMmT,UAAU7V,EAAM0C,MAAMoT,iBAAiB,gBAGjEF,EACF,OAAO5V,EAAM0C,MAAMG,aAAamC,EAAK,IAGvCA,EAAK+G,KAAK/L,EAAM0C,MAAMiP,gBAAgB3R,EAAM0C,MAAMuN,UAAU/D,EAAWI,YAEvE,IAAM+G,EAAYrT,EAAM0C,MAAMqT,wBAAwBV,EAAerV,EAAM0C,MAAM+L,eAAezJ,EAAM6P,IAEtG,OAAO7U,EAAM0C,MAAM4N,eAAe+C,EAAWiC,GAGxCU,CAAiBhU,EAAMiB,EAAMtC,EAAgBqL,IAnkBtD,IAAIlM,EAAsBD,EAAuBF,EAAQ,MAErDsO,EAYJ,SAAiC9N,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEV,QAASU,GAAS,IAAIwD,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAI1D,GAAQ,OAAOwD,EAAM1B,IAAI9B,GAAQ,IAAI2D,EAAS,GAAQC,EAAwB1E,OAAOC,gBAAkBD,OAAO2E,yBAA0B,IAAK,IAAIC,KAAO9D,EAAO,GAAId,OAAO6E,UAAUC,eAAeC,KAAKjE,EAAK8D,GAAM,CAAE,IAAII,EAAON,EAAwB1E,OAAO2E,yBAAyB7D,EAAK8D,GAAO,KAAUI,IAASA,EAAKpC,KAAOoC,EAAKC,KAAQjF,OAAOC,eAAewE,EAAQG,EAAKI,GAAgBP,EAAOG,GAAO9D,EAAI8D,GAAYH,EAAOrE,QAAUU,EAASwD,GAASA,EAAMW,IAAInE,EAAK2D,GAAW,OAAOA,EAZnsBS,CAAwB5E,EAAQ,MAEvDwT,EAAgCtT,EAAuBF,EAAQ,MAE/DK,EAAQL,EAAQ,KAEhBC,EAAwBC,EAAuBF,EAAQ,MAEvDsV,EAA4BpV,EAAuBF,EAAQ,OAE/D,SAASiE,IAA6B,GAAuB,oBAAZY,QAAwB,OAAO,KAAM,IAAIb,EAAQ,IAAIa,QAAqE,OAA1DZ,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,SAAS9D,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEV,QAASU,GAEvF,SAASiV,EAAiB9I,EAAUO,EAAiBzK,GACnD,IAAMyR,EAAO7T,EAAM0C,MAAMuT,oBAAoBjW,EAAM0C,MAAMuN,UAAU3D,GAAW,GAAIO,GAIlF,OAFA7M,EAAM0C,MAAMqP,SAAS8B,EAAMzR,GAEpByR,I,iDC5BTxU,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAMR,SAA8BwD,GAC5B,GAAIiT,EAAUrS,IAAIZ,GAChB,OAAQjD,EAAM0C,MAAMuN,WAAajQ,EAAM0C,MAAMyT,OAAOD,EAAUjU,IAAIgB,IAGpE,IACE,OAAOA,EAAKsN,UAAU,eACtB,MAAO6F,IAET,IAAM9T,EAAKW,EAAKV,MAAMC,sBAAsB,eAC5C0T,EAAU5R,IAAIrB,EAAMX,GACpB,IAAMoC,EAAK2R,EAAO,CAChBC,aAAchU,EACdiU,iBAAkBtT,EAAKsN,UAAU,kBACjCiG,4BAA6BvT,EAAKsN,UAAU,+BAI9C,OAFAtN,EAAKjB,KAAK0M,iBAAiB,OAAQ,CAAChK,IACpCzB,EAAKV,MAAMkU,oBAAoBxT,EAAKjB,KAAKC,IAAI,WACtCjC,EAAM0C,MAAMuN,UAAU3N,IAtB/B,IAAItC,EAAQL,EAAQ,KAEduW,EAAY,IAAI1R,QAuBtB,IAAM6R,EAASrW,EAAMwO,SAASjL,UAAlB,+hD,iCC9BZlE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAAUF,EAAQ8D,QAAU9D,EAAQ+D,WAAa/D,EAAQiE,WAAajE,EAAQgE,UAAYhE,EAAQkE,WAAQ,EAElH,IAIgCtD,EAJ5BuW,EAQJ,SAAiCvW,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEV,QAASU,GAAS,IAAIwD,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAI1D,GAAQ,OAAOwD,EAAM1B,IAAI9B,GAAQ,IAAI2D,EAAS,GAAQC,EAAwB1E,OAAOC,gBAAkBD,OAAO2E,yBAA0B,IAAK,IAAIC,KAAO9D,EAAO,GAAId,OAAO6E,UAAUC,eAAeC,KAAKjE,EAAK8D,GAAM,CAAE,IAAII,EAAON,EAAwB1E,OAAO2E,yBAAyB7D,EAAK8D,GAAO,KAAUI,IAASA,EAAKpC,KAAOoC,EAAKC,KAAQjF,OAAOC,eAAewE,EAAQG,EAAKI,GAAgBP,EAAOG,GAAO9D,EAAI8D,GAAYH,EAAOrE,QAAUU,EAASwD,GAASA,EAAMW,IAAInE,EAAK2D,GAAW,OAAOA,EAR7sBS,CAAwB5E,EAAQ,OAE7CgX,GAE4BxW,EAFMR,EAAQ,QAEOQ,EAAIC,WAAaD,EAAM,CAAEV,QAASU,GAEvF,SAASyD,IAA6B,GAAuB,oBAAZY,QAAwB,OAAO,KAAM,IAAIb,EAAQ,IAAIa,QAAqE,OAA1DZ,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,IAAMF,GAAQ,EAAIkT,EAASlX,SAASiX,EAAWjT,OAC/ClE,EAAQkE,MAAQA,EAChB,IAAMF,GAAY,EAAIoT,EAASlX,SAASiX,EAAWnT,WACnDhE,EAAQgE,UAAYA,EACpB,IAAMC,GAAa,EAAImT,EAASlX,SAASiX,EAAWlT,YACpDjE,EAAQiE,WAAaA,EACrB,IAAMF,GAAa,EAAIqT,EAASlX,SAASiX,EAAWpT,YACpD/D,EAAQ+D,WAAaA,EACrB,IAAMD,GAAU,EAAIsT,EAASlX,SAASiX,EAAWrT,SACjD9D,EAAQ8D,QAAUA,EAElB,IAAIxC,EAAWxB,OAAOyG,OAAOrC,EAAMmT,UAAKxK,GAAY,CAClD3I,QACAF,YACAC,aACAF,aACAD,UACA0B,IAAKtB,EAAMsB,MAGbxF,EAAQE,QAAUoB,G,qHCnClBxB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,IAAMqX,GAAa,EACbC,GAAa,EACb5F,GAAS,EAETrG,GAAS,EAETkM,EACJ,WAAYC,GAAkB,IAAXC,EAAW,uDAAJ,GAAI,UAC5BC,KAAKF,WAAQ,EACbE,KAAKjP,aAAU,EACfiP,KAAKL,gBAAa,EAClBK,KAAKJ,gBAAa,EAClBI,KAAKC,sBAAmB,EACxBD,KAAKhG,YAAS,EACdgG,KAAKE,cAAW,EAChBF,KAAKrM,YAAS,EACdqM,KAAKG,aAAU,EACfH,KAAKI,WAAQ,EACbJ,KAAKK,mBAAgB,EACrBL,KAAKF,MAAQA,EACbE,KAAKjP,QAAUgP,EAAKhP,QACpBiP,KAAKL,aAAeI,EAAKJ,WACzBK,KAAKJ,aAAeG,EAAKH,WACzBI,KAAKC,mBAAqBF,EAAKE,iBAC/BD,KAAKhG,SAAW+F,EAAK/F,OACrBgG,KAAKE,WAAaH,EAAKG,SACvBF,KAAKrM,SAAWoM,EAAKpM,OACrBqM,KAAKG,UAAYJ,EAAKI,QACtBH,KAAKI,MAAsB,MAAdL,EAAKK,MAAgBL,EAAKK,MAAQ,KAC/CJ,KAAKK,cAAgB,MAInBC,EAAW,IAAI9J,IAErB,SAAS+J,EAAchX,GAAoB,IAAdO,EAAc,uDAAJ,GACrCA,EAAQiH,QAAUxH,EAClB,IAAM8I,EAAQ,IAAIwN,EAAUtW,EAAMO,GAElC,OADAwW,EAASlT,IAAI7D,EAAM8I,GACZA,EAGT,SAASmO,EAAYjX,EAAM6W,GACzB,OAAO,IAAIP,EAAUtW,EAAM,CACzBoW,aACAS,UAIJ,IAAM5U,EAAQ,CACZiV,IAAK,IAAIZ,EAAU,MAAO,CACxBD,eAEFc,OAAQ,IAAIb,EAAU,SAAU,CAC9BD,eAEFe,QAAS,IAAId,EAAU,UAAW,CAChCD,eAEFgB,OAAQ,IAAIf,EAAU,SAAU,CAC9BD,eAEFrO,OAAQ,IAAIsO,EAAU,SAAU,CAC9BD,eAEFrW,KAAM,IAAIsW,EAAU,OAAQ,CAC1BD,eAEFiB,IAAK,IAAIhB,EAAU,OACnBiB,SAAU,IAAIjB,EAAU,IAAK,CAC3BF,aACAC,eAEFmB,aAAc,IAAIlB,EAAU,KAAM,CAChCF,aACAC,eAEFoB,YAAa,IAAInB,EAAU,KAAM,CAC/BF,aACAC,eAEFqB,SAAU,IAAIpB,EAAU,KACxBqB,YAAa,IAAIrB,EAAU,MAC3BsB,OAAQ,IAAItB,EAAU,IAAK,CACzBF,aACAC,eAEFwB,UAAW,IAAIvB,EAAU,KAAM,CAC7BF,aACAC,eAEFyB,WAAY,IAAIxB,EAAU,KAAM,CAC9BF,aACAC,eAEF0B,OAAQ,IAAIzB,EAAU,KACtB0B,UAAW,IAAI1B,EAAU,MACzB2B,OAAQ,IAAI3B,EAAU,IAAK,CACzBF,aACAC,eAEF6B,OAAQ,IAAI5B,EAAU,KACtB6B,MAAO,IAAI7B,EAAU,IAAK,CACxBF,eAEFgC,KAAM,IAAI9B,EAAU,IAAK,CACvBF,eAEFiC,MAAO,IAAI/B,EAAU,IAAK,CACxBF,eAEFkC,YAAa,IAAIhC,EAAU,KAAM,CAC/BF,eAEFmC,IAAK,IAAIjC,EAAU,KACnBkC,SAAU,IAAIlC,EAAU,IAAK,CAC3BF,eAEFqC,YAAa,IAAInC,EAAU,MAC3BoC,MAAO,IAAIpC,EAAU,KAAM,CACzBF,eAEFrI,SAAU,IAAIuI,EAAU,YACxBqC,SAAU,IAAIrC,EAAU,MAAO,CAC7BF,eAEFwC,UAAW,IAAItC,EAAU,IAAK,CAC5BD,eAEFwC,aAAc,IAAIvC,EAAU,KAAM,CAChCF,aACAC,eAEFyC,GAAI,IAAIxC,EAAU,KAClByC,KAAM,IAAIzC,EAAU,IAAK,CACvBD,eAEF2C,qBAAsB,IAAI1C,EAAU,SACpC2C,GAAI,IAAI3C,EAAU,IAAK,CACrBF,aACAO,SAzIa,OA2IftR,OAAQ,IAAIiR,EAAU,KAAM,CAC1BF,aACAO,SA7Ia,OA+IfuC,OAAQ,IAAI5C,EAAU,QAAS,CAC7BlM,SACAwM,SA/IY,EAgJZP,eAEF8C,KAAM,IAAI7C,EAAU,IAAK,CACvBF,aACAhM,SACAiM,eAEF+C,MAAO,IAAI9C,EAAU,IAAK,CACxBF,aACAhM,SACAiM,eAEFgD,SAAUpC,EAAY,KAAM,GAC5BqC,kBAAmBrC,EAAY,KAAM,GACrCsC,UAAWtC,EAAY,KAAM,GAC7BuC,WAAYvC,EAAY,KAAM,GAC9BwC,UAAWxC,EAAY,IAAK,GAC5ByC,WAAYzC,EAAY,IAAK,GAC7B0C,WAAY1C,EAAY,IAAK,GAC7B2C,SAAU3C,EAAY,gBAAiB,GACvC4C,WAAY5C,EAAY,YAAa,GACrC6C,SAAU7C,EAAY,YAAa,GACnC8C,QAAS,IAAIzD,EAAU,MAAO,CAC5BF,aACAS,MAAO,EACPzM,SACAiM,eAEF2D,OAAQ,IAAI1D,EAAU,IAAK,CACzBF,aACAS,MAAO,GACPR,eAEF4D,KAAM,IAAI3D,EAAU,IAAK,CACvBO,MAAO,KAETqD,MAAOjD,EAAY,IAAK,IACxBkD,SAAU,IAAI7D,EAAU,KAAM,CAC5BF,aACAS,MAAO,GACPH,kBAAkB,IAEpB0D,OAAQpD,EAAc,SACtBqD,MAAOrD,EAAc,OAAQ,CAC3BZ,eAEFkE,OAAQtD,EAAc,SACtBuD,UAAWvD,EAAc,YACzBwD,UAAWxD,EAAc,YACzB5W,SAAU4W,EAAc,UAAW,CACjCZ,eAEFqE,IAAKzD,EAAc,KAAM,CACvBvG,SACA2F,eAEFsE,MAAO1D,EAAc,OAAQ,CAC3BZ,eAEFuE,SAAU3D,EAAc,WACxB4D,KAAM5D,EAAc,MAAO,CACzBvG,WAEFoK,UAAW7D,EAAc,WAAY,CACnCX,eAEFyE,IAAK9D,EAAc,MACnB+D,QAAS/D,EAAc,SAAU,CAC/BZ,eAEF4E,QAAShE,EAAc,UACvBiE,OAAQjE,EAAc,QAAS,CAC7BZ,aACAhM,SACAiM,eAEF6E,KAAMlE,EAAc,OACpBmE,KAAMnE,EAAc,OACpBoE,OAAQpE,EAAc,SACtBqE,OAAQrE,EAAc,QAAS,CAC7BvG,WAEF6K,MAAOtE,EAAc,QACrBuE,KAAMvE,EAAc,MAAO,CACzBZ,aACAC,eAEFmF,MAAOxE,EAAc,OAAQ,CAC3BX,eAEFoF,OAAQzE,EAAc,QAAS,CAC7BX,eAEFqF,OAAQ1E,EAAc,QAAS,CAC7BX,eAEFsF,SAAU3E,EAAc,UAAW,CACjCZ,eAEFwF,QAAS5E,EAAc,UACvB6E,QAAS7E,EAAc,SAAU,CAC/BX,eAEFyF,MAAO9E,EAAc,OAAQ,CAC3BX,eAEF0F,MAAO/E,EAAc,OAAQ,CAC3BX,eAEF2F,OAAQhF,EAAc,QAAS,CAC7BX,eAEF4F,IAAKjF,EAAc,KAAM,CACvBZ,aACAS,MAAO,IAETqF,YAAalF,EAAc,aAAc,CACvCZ,aACAS,MAAO,IAETsF,QAASnF,EAAc,SAAU,CAC/BZ,aACAhM,SACAiM,eAEF+F,MAAOpF,EAAc,OAAQ,CAC3BZ,aACAhM,SACAiM,eAEFgG,QAASrF,EAAc,SAAU,CAC/BZ,aACAhM,SACAiM,gBAIEiG,EAAY,yBACZC,EAAa,IAAIC,OAAOF,EAAUG,OAAQ,KAChD,SAASC,EAAUxY,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EAET,QACE,OAAO,GAGb,IAAMyY,EAAiB,gCACvB,SAASC,EAAa1Y,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,G,IAIP2Y,EACJ,WAAYC,EAAMC,GAAK,UACrBtG,KAAKqG,UAAO,EACZrG,KAAKuG,YAAS,EACdvG,KAAKqG,KAAOA,EACZrG,KAAKuG,OAASD,GAIZE,EACJ,WAAYtY,EAAOuY,GAAK,UACtBzG,KAAK9R,WAAQ,EACb8R,KAAKyG,SAAM,EACXzG,KAAK0G,cAAW,EAChB1G,KAAK2G,oBAAiB,EACtB3G,KAAK9R,MAAQA,EACb8R,KAAKyG,IAAMA,GAkCf,SAASG,EAAKlX,GACZ,OAAOA,EAAMA,EAAM1B,OAAS,G,IAGxB6Y,E,wHACJ,SAAWnV,GACLsO,KAAK0G,WAAUhV,EAAQoV,IAAIJ,SAAW1G,KAAK0G,UAC/C1G,KAAKnU,MAAMkb,iBAAiBlS,KAAKnD,GACjCsO,KAAKnU,MAAMmb,gBAAgBnS,KAAKnD,K,8CAGlC,SAAiCxG,EAAM+b,EAAUC,GAC/C,GAA0C,IAAtClH,KAAKnU,MAAMmb,gBAAgBhZ,OAA/B,CAOA,IAHA,IAAImZ,EAAc,KACdvS,EAAIqS,EAASjZ,OAEM,OAAhBmZ,GAAwBvS,EAAI,GACjCuS,EAAcF,IAAWrS,GAG3B,GAAoB,OAAhBuS,EAAJ,CAIA,IAAK,IAAIC,EAAI,EAAGA,EAAIpH,KAAKnU,MAAMmb,gBAAgBhZ,OAAQoZ,IACjDpH,KAAKnU,MAAMmb,gBAAgBI,GAAGX,IAAMzG,KAAKnU,MAAMwb,oBAAoBZ,MACrEzG,KAAKnU,MAAMmb,gBAAgBM,OAAOF,EAAG,GACrCA,KAMJ,IAFA,IAAMG,EAAsB,GAEnB3S,EAAI,EAAGA,EAAIoL,KAAKnU,MAAMmb,gBAAgBhZ,OAAQ4G,IAAK,CAC1D,IAAM4S,EAAiBxH,KAAKnU,MAAMmb,gBAAgBpS,GAE9C4S,EAAef,IAAMvb,EAAKub,KAC5Bc,EAAoB1S,KAAK2S,GAEpBN,IACHlH,KAAKnU,MAAMmb,gBAAgBM,OAAO1S,EAAG,GACrCA,YAG4BM,IAA1BhK,EAAK6b,mBACP7b,EAAK6b,iBAAmB,IAG1B7b,EAAK6b,iBAAiBlS,KAAK2S,IAI3BN,IAAiBlH,KAAKnU,MAAMmb,gBAAkB,IAE9CO,EAAoBvZ,OAAS,EAC/BmZ,EAAYJ,iBAAmBQ,OACWrS,IAAjCiS,EAAYJ,mBACrBI,EAAYJ,iBAAmB,Q,4BAInC,SAAe7b,GACb,KAAkB,YAAdA,EAAKsH,MAAsBtH,EAAK4C,KAAKE,OAAS,GAAlD,CACA,IACIyZ,EAAYC,EAAWX,EAAkBnS,EAAGwS,EAD1C1X,EAAQsQ,KAAKnU,MAAM8b,aAGzB,GAAI3H,KAAKnU,MAAMkb,iBAAiB/Y,OAAS,EACnCgS,KAAKnU,MAAMkb,iBAAiB,GAAG7Y,OAAShD,EAAKub,KAC/CM,EAAmB/G,KAAKnU,MAAMkb,iBAC9B/G,KAAKnU,MAAMkb,iBAAmB,IAE9B/G,KAAKnU,MAAMkb,iBAAiB/Y,OAAS,OAElC,GAAI0B,EAAM1B,OAAS,EAAG,CAC3B,IAAM4Z,EAAchB,EAAKlX,GAErBkY,EAAYb,kBAAoBa,EAAYb,iBAAiB,GAAG7Y,OAAShD,EAAKub,MAChFM,EAAmBa,EAAYb,wBACxBa,EAAYb,kBAQvB,IAJIrX,EAAM1B,OAAS,GAAK4Y,EAAKlX,GAAOxB,OAAShD,EAAKgD,QAChDuZ,EAAa/X,EAAM4K,OAGd5K,EAAM1B,OAAS,GAAK4Y,EAAKlX,GAAOxB,OAAShD,EAAKgD,OACnDwZ,EAAYhY,EAAM4K,MAKpB,IAFKoN,GAAaD,IAAYC,EAAYD,GAEtCA,EACF,OAAQvc,EAAKsH,MACX,IAAK,mBACHwN,KAAK6H,iCAAiC3c,EAAMA,EAAKkQ,YACjD,MAEF,IAAK,gBACH4E,KAAK6H,iCAAiC3c,EAAMA,EAAKkQ,YAAY,GAC7D,MAEF,IAAK,iBACH4E,KAAK6H,iCAAiC3c,EAAMA,EAAKyQ,WACjD,MAEF,IAAK,kBACHqE,KAAK6H,iCAAiC3c,EAAMA,EAAK+b,UACjD,MAEF,IAAK,eACHjH,KAAK6H,iCAAiC3c,EAAMA,EAAK+b,UAAU,QAGtDjH,KAAKnU,MAAMwb,sBAAgE,oBAAxCrH,KAAKnU,MAAMwb,oBAAoB7U,MAA4C,oBAAdtH,EAAKsH,MAAsE,oBAAxCwN,KAAKnU,MAAMwb,oBAAoB7U,MAA4C,oBAAdtH,EAAKsH,OAC9MwN,KAAK6H,iCAAiC3c,EAAM,CAAC8U,KAAKnU,MAAMwb,sBAG1D,GAAIK,GACF,GAAIA,EAAUV,gBACZ,GAAIU,IAAcxc,GAAQwc,EAAUV,gBAAgBhZ,OAAS,GAAK4Y,EAAKc,EAAUV,iBAAiBP,KAAOvb,EAAKgD,MAC5GhD,EAAK8b,gBAAkBU,EAAUV,uBAC1BU,EAAUV,qBAEjB,IAAKpS,EAAI8S,EAAUV,gBAAgBhZ,OAAS,EAAG4G,GAAK,IAAKA,EACvD,GAAI8S,EAAUV,gBAAgBpS,GAAG6R,KAAOvb,EAAKgD,MAAO,CAClDhD,EAAK8b,gBAAkBU,EAAUV,gBAAgBM,OAAO,EAAG1S,EAAI,GAC/D,YAKH,GAAIoL,KAAKnU,MAAMmb,gBAAgBhZ,OAAS,EAC7C,GAAI4Y,EAAK5G,KAAKnU,MAAMmb,iBAAiBP,KAAOvb,EAAKgD,MAAO,CACtD,GAAI8R,KAAKnU,MAAMwb,oBACb,IAAKD,EAAI,EAAGA,EAAIpH,KAAKnU,MAAMmb,gBAAgBhZ,OAAQoZ,IAC7CpH,KAAKnU,MAAMmb,gBAAgBI,GAAGX,IAAMzG,KAAKnU,MAAMwb,oBAAoBZ,MACrEzG,KAAKnU,MAAMmb,gBAAgBM,OAAOF,EAAG,GACrCA,KAKFpH,KAAKnU,MAAMmb,gBAAgBhZ,OAAS,IACtC9C,EAAK8b,gBAAkBhH,KAAKnU,MAAMmb,gBAClChH,KAAKnU,MAAMmb,gBAAkB,QAE1B,CACL,IAAKpS,EAAI,EAAGA,EAAIoL,KAAKnU,MAAMmb,gBAAgBhZ,UACrCgS,KAAKnU,MAAMmb,gBAAgBpS,GAAG6R,IAAMvb,EAAKgD,OADI0G,KAMnD,IAAMoS,EAAkBhH,KAAKnU,MAAMmb,gBAAgBjZ,MAAM,EAAG6G,GAExDoS,EAAgBhZ,SAClB9C,EAAK8b,gBAAkBA,GAKO,KAFhCD,EAAmB/G,KAAKnU,MAAMmb,gBAAgBjZ,MAAM6G,IAE/B5G,SACnB+Y,EAAmB,MAOzB,GAFA/G,KAAKnU,MAAMwb,oBAAsBnc,EAE7B6b,EACF,GAAIA,EAAiB/Y,QAAU+Y,EAAiB,GAAG7Y,OAAShD,EAAKgD,OAAS0Y,EAAKG,GAAkBN,KAAOvb,EAAKub,IAC3Gvb,EAAK4c,cAAgBf,MAChB,CACL,IAAMgB,EAA4BhB,EAAiBiB,WAAU,SAAAtW,GAAO,OAAIA,EAAQ+U,KAAOvb,EAAKub,OAExFsB,EAA4B,GAC9B7c,EAAK4c,cAAgBf,EAAiBhZ,MAAM,EAAGga,GAC/C7c,EAAK6b,iBAAmBA,EAAiBhZ,MAAMga,IAE/C7c,EAAK6b,iBAAmBA,EAK9BrX,EAAMmF,KAAK3J,Q,cA3Mb,aAAc,UACZ8U,KAAKiI,mBAAoB,EACzBjI,KAAKkI,6BAA8B,E,mCAGrC,SAAU3e,GACR,OAAOyW,KAAKmI,QAAQxb,IAAIpD,K,6BAG1B,SAAgB6e,EAAQ7e,GACtB,GAAIyW,KAAKqI,UAAUD,GAAS,OAAOpI,KAAKmI,QAAQpd,IAAIqd,GAAQ7e,O,MAsM1D+e,EAAgBngB,OAAOogB,OAAO,CAClCC,oBAAqB,gCACrBC,iBAAkB,6DAClBC,sCAAuC,0EACvCC,uBAAwB,6DACxBC,oCAAqC,0DACrCC,+BAAgC,oDAChCC,uBAAwB,kFACxBC,wBAAyB,iDACzBC,eAAgB,6CAChBC,eAAgB,gDAChBC,uBAAwB,wDACxBC,sBAAuB,mDACvBC,6BAA8B,4DAC9BC,sBAAuB,2CACvBC,mBAAoB,yCACpBC,uBAAwB,mCACxBC,8BAA+B,qCAC/BC,sBAAuB,mKACvBC,qBAAsB,kFACtBC,qBAAsB,mHACtBC,mBAAoB,iDACpBC,qBAAsB,+CACtBC,mBAAoB,0CACpBC,uBAAwB,qGACxBC,qBAAsB,0CACtBC,uBAAwB,8CACxBC,gBAAiB,uEACjBC,eAAgB,qCAChBC,qBAAsB,oCACtBC,iBAAkB,oCAClBC,2BAA4B,yBAC5BC,sBAAuB,uIACvBC,8BAA+B,gEAC/BC,uBAAwB,2DACxBC,SAAU,gEACVC,kCAAmC,qEACnCC,qBAAsB,iBACtBC,6BAA8B,4EAC9BC,cAAe,+BACfC,sBAAuB,oGACvBC,gCAAiC,4DACjCC,gBAAiB,+BACjBC,2BAA4B,kCAC5BC,yBAA0B,iCAC1BC,wBAAyB,4DACzBC,oBAAqB,sEACrBC,qBAAsB,wBACtBC,iBAAkB,2BAClBC,eAAgB,kBAChBC,aAAc,8BACdC,sBAAuB,gCACvBC,8BAA+B,sCAC/BC,2BAA4B,gCAC5BC,kBAAmB,wBACnBC,WAAY,+BACZC,kBAAmB,uCACnBC,cAAe,iBACfC,yBAA0B,gEAC1BC,yBAA0B,4BAC1BC,+BAAgC,2CAChCC,8BAA+B,kCAC/BC,8BAA+B,4BAC/BC,sBAAuB,wEACvBC,6BAA8B,mCAC9BC,mBAAoB,iCACpBC,oBAAqB,8EACrBC,0BAA2B,uCAC3BC,qBAAsB,kCACtBC,iBAAkB,2BAClBC,sBAAuB,8DACvBC,iBAAkB,oBAClBC,qBAAsB,4CACtBC,0BAA2B,qFAC3BC,iCAAkC,+CAClCC,4BAA6B,8DAC7BC,kCAAmC,yDACnCC,iCAAkC,gEAClCC,sBAAuB,6BACvBC,yBAA0B,2BAC1BC,kBAAmB,8BACnBC,iBAAkB,kCAClBC,iBAAkB,mCAClBC,iCAAkC,6FAClCC,kBAAmB,wFACnBC,sBAAuB,0DACvBC,2BAA4B,4DAC5BC,UAAW,sBACXC,mBAAoB,gDACpBC,iBAAkB,uCAClBC,oBAAqB,mGACrBC,+BAAgC,iEAChCC,+BAAgC,oEAChCC,oBAAqB,8DACrBC,uBAAwB,sEACxBC,kCAAmC,+FACnCC,oBAAqB,wGACrBC,yBAA0B,6BAC1BC,0CAA2C,mIAC3CC,4CAA6C,qIAC7CC,6CAA8C,sIAC9CC,cAAe,mDACfC,kBAAmB,+CACnBC,eAAgB,0HAChBC,gBAAiB,uDACjBC,aAAc,yCACdC,oBAAqB,mCACrBC,2BAA4B,8BAC5BC,eAAgB,qFAChBC,oBAAqB,wDACrBC,mBAAoB,uDACpBC,WAAY,wBACZC,gBAAiB,kJACjBC,kBAAmB,4CACnBC,kBAAmB,iDACnBC,yCAA0C,kIAC1CC,2CAA4C,oIAC5CC,4CAA6C,qIAC7CC,8BAA+B,kCAC/BC,iCAAkC,0FAClCC,yBAA0B,oCAC1BC,uBAAwB,yDACxBC,kBAAmB,0BACnBC,2BAA4B,6DAC5BC,6BAA8B,kEAC9BC,oBAAqB,2CACrBC,2BAA4B,yDAC5BC,uBAAwB,0JACxBC,uBAAwB,gCACxBC,gBAAiB,sDACjBC,gBAAiB,wBACjBC,mCAAoC,mFACpCC,gBAAiB,kDACjBC,2BAA4B,qDAC5BC,yBAA0B,8EAC1BC,kBAAmB,qDACnBC,wBAAyB,+CACzBC,8BAA+B,mDAC/BC,6BAA8B,kEAC9BC,iBAAkB,qHAClBC,oBAAqB,uBACrBC,mBAAoB,kCACpBC,mBAAoB,+BACpBC,qBAAsB,wBACtBC,iBAAkB,4CAClBC,uBAAwB,uDACxBC,iBAAkB,uDAClBC,0BAA2B,sDAGvBC,E,oIACJ,SAAuBC,GAGrB,OADIA,IAAQ5R,KAAKnU,MAAMqC,MAAa8R,KAAKnU,MAAMgmB,SAAkBD,IAAQ5R,KAAKnU,MAAMimB,aAAoB9R,KAAKnU,MAAMkmB,gBAAyBH,IAAQ5R,KAAKnU,MAAM4a,IAAWzG,KAAKnU,MAAMmmB,OAAgBJ,IAAQ5R,KAAKnU,MAAMomB,WAAkBjS,KAAKnU,MAAMqmB,cAxXzP,SAAqBC,EAAO7f,GAC1B,IAEIe,EAFAgT,EAAO,EACP+L,EAAY,EAIhB,IAFAtM,EAAWuM,UAAY,GAEfhf,EAAQyS,EAAWxS,KAAK6e,KAAW9e,EAAMG,MAAQlB,GACvD+T,IACA+L,EAAYtM,EAAWuM,UAGzB,OAAO,IAAIjM,EAASC,EAAM/T,EAAS8f,GA6W6OE,CAAYtS,KAAKmS,MAAOP,K,mBAIxS,SAAMA,EAAKW,GAA0B,2BAARlb,EAAQ,iCAARA,EAAQ,kBACnC,OAAO2I,KAAKwS,cAAL,MAAAxS,KAAA,CAAmB4R,OAAK1c,EAAWqd,GAAnC,OAAqDlb,M,4BAG9D,SAAeua,EAAKW,GAA0B,2BAARlb,EAAQ,iCAARA,EAAQ,kBAC5C,IAAMyP,EAAM9G,KAAKyS,uBAAuBb,GAClCc,EAAUH,EAAcha,QAAQ,WAAW,SAACoa,EAAG/d,GAAJ,OAAUyC,EAAOzC,MAAlD,YAA6DkS,EAAIT,KAAjE,YAAyES,EAAIP,OAA7E,KAEhB,GAAIvG,KAAKlW,QAAQ8oB,cAGf,IAFA,IAAMC,EAAS7S,KAAKnU,MAAMgnB,OAEjBje,EAAIie,EAAO7kB,OAAS,EAAG4G,GAAK,EAAGA,IAAK,CAC3C,IAAMnF,EAAQojB,EAAOje,GAErB,GAAInF,EAAMmiB,MAAQA,EAChB,OAAOzpB,OAAOyG,OAAOa,EAAO,CAC1BijB,YAEG,GAAIjjB,EAAMmiB,IAAMA,EACrB,MAKN,OAAO5R,KAAK8S,OAAO,CACjBhM,MACA8K,OACCc,K,2BAGL,SAAcd,EAAKmB,EAAMR,GAA0B,2BAARlb,EAAQ,iCAARA,EAAQ,kBACjD,IAAMyP,EAAM9G,KAAKyS,uBAAuBb,GAClCc,EAAUH,EAAcha,QAAQ,WAAW,SAACoa,EAAG/d,GAAJ,OAAUyC,EAAOzC,MAAlD,YAA6DkS,EAAIT,KAAjE,YAAyES,EAAIP,OAA7E,KAChB,OAAOvG,KAAK8S,OAAO3qB,OAAOyG,OAAO,CAC/BkY,MACA8K,OACCmB,GAAOL,K,oBAGZ,SAAOM,EAAcN,GACnB,IAAM5iB,EAAM,IAAImjB,YAAYP,GAG5B,GAFAvqB,OAAOyG,OAAOkB,EAAKkjB,GAEfhT,KAAKlW,QAAQ8oB,cAEf,OADK5S,KAAKkT,aAAalT,KAAKnU,MAAMgnB,OAAOhe,KAAK/E,GACvCA,EAEP,MAAMA,M,GAtDc+W,GAkZpBsM,EACJ,WAAY9gB,EAAO+gB,EAAQC,EAAeC,GAAU,UAClDtT,KAAK3N,WAAQ,EACb2N,KAAKoT,YAAS,EACdpT,KAAKqT,mBAAgB,EACrBrT,KAAKsT,cAAW,EAChBtT,KAAK3N,MAAQA,EACb2N,KAAKoT,SAAWA,EAChBpT,KAAKqT,gBAAkBA,EACvBrT,KAAKsT,SAAWA,GAIdC,EAAU,CACdC,eAAgB,IAAIL,EAAW,KAAK,GACpCM,gBAAiB,IAAIN,EAAW,KAAK,GACrCO,iBAAkB,IAAIP,EAAW,MAAM,GACvCQ,cAAe,IAAIR,EAAW,MAAM,GACpCS,eAAgB,IAAIT,EAAW,KAAK,GACpCU,gBAAiB,IAAIV,EAAW,KAAK,GACrC7b,SAAU,IAAI6b,EAAW,KAAK,GAAM,GAAM,SAAAW,GAAC,OAAIA,EAAEC,mBACjDnX,mBAAoB,IAAIuW,EAAW,YAAY,GAC/Ca,kBAAmB,IAAIb,EAAW,YAAY,IAGhD3nB,EAAMiW,OAAOpB,cAAgB7U,EAAM8V,OAAOjB,cAAgB,WACxD,GAAkC,IAA9BL,KAAKnU,MAAMooB,QAAQjmB,OAAvB,CAKA,IAAIkmB,EAAMlU,KAAKnU,MAAMooB,QAAQ3Z,MAEzB4Z,IAAQX,EAAQC,gBAA8C,aAA5BxT,KAAKmU,aAAa9hB,QACtD6hB,EAAMlU,KAAKnU,MAAMooB,QAAQ3Z,OAG3B0F,KAAKnU,MAAMuoB,aAAeF,EAAId,YAV5BpT,KAAKnU,MAAMuoB,aAAc,GAa7B5oB,EAAMjC,KAAK8W,cAAgB,SAAUgU,GACnC,IAAIC,GAAU,EAEVD,IAAa7oB,EAAMsW,MACI,OAArB9B,KAAKnU,MAAMvD,OAAmB0X,KAAKnU,MAAMuoB,aAAeC,IAAa7oB,EAAM4Y,WAAaiQ,IAAa7oB,EAAMyZ,SAC7GqP,GAAU,IAIdtU,KAAKnU,MAAMuoB,YAAcE,EAErBtU,KAAKnU,MAAM0oB,aACbvU,KAAKnU,MAAM0oB,YAAa,IAI5B/oB,EAAM2V,OAAOd,cAAgB,SAAUgU,GACrCrU,KAAKnU,MAAMooB,QAAQpf,KAAKmL,KAAKwU,aAAaH,GAAYd,EAAQC,eAAiBD,EAAQE,iBACvFzT,KAAKnU,MAAMuoB,aAAc,GAG3B5oB,EAAM4W,aAAa/B,cAAgB,WACjCL,KAAKnU,MAAMooB,QAAQpf,KAAK0e,EAAQI,eAChC3T,KAAKnU,MAAMuoB,aAAc,GAG3B5oB,EAAMgW,OAAOnB,cAAgB,SAAUgU,GACrC,IAAMI,EAAkBJ,IAAa7oB,EAAM6Y,KAAOgQ,IAAa7oB,EAAM2Y,MAAQkQ,IAAa7oB,EAAMqZ,OAASwP,IAAa7oB,EAAMoZ,OAC5H5E,KAAKnU,MAAMooB,QAAQpf,KAAK4f,EAAkBlB,EAAQK,eAAiBL,EAAQM,iBAC3E7T,KAAKnU,MAAMuoB,aAAc,GAG3B5oB,EAAMiX,OAAOpC,cAAgB,aAE7B7U,EAAM4Y,UAAU/D,cAAgB7U,EAAMyZ,OAAO5E,cAAgB,SAAUgU,IACjEA,EAAS1U,YAAc0U,IAAa7oB,EAAMmW,MAAQ0S,IAAa7oB,EAAMyY,OAAWoQ,IAAa7oB,EAAM8Y,SAAWtE,KAAK0U,0BAA+BL,IAAa7oB,EAAMoW,OAASyS,IAAa7oB,EAAM2V,SAAWnB,KAAKmU,eAAiBZ,EAAQoB,OAG5O3U,KAAKnU,MAAMooB,QAAQpf,KAAK0e,EAAQS,mBAFhChU,KAAKnU,MAAMooB,QAAQpf,KAAK0e,EAAQ3W,oBAKlCoD,KAAKnU,MAAMuoB,aAAc,GAG3B5oB,EAAM2W,UAAU9B,cAAgB,WAC1BL,KAAKmU,eAAiBZ,EAAQjc,SAChC0I,KAAKnU,MAAMooB,QAAQ3Z,MAEnB0F,KAAKnU,MAAMooB,QAAQpf,KAAK0e,EAAQjc,UAGlC0I,KAAKnU,MAAMuoB,aAAc,GAG3B5oB,EAAM6V,WAAWhB,cAAgB,WAC/BL,KAAKnU,MAAMooB,QAAQpf,KAAK0e,EAAQG,kBAChC1T,KAAKnU,MAAMuoB,aAAc,GAG3B,IAAIQ,EAA+B,wrIAC/BC,EAA0B,ujFACxBC,EAA0B,IAAI/O,OAAO,IAAM6O,EAA+B,KAC1EG,EAAqB,IAAIhP,OAAO,IAAM6O,EAA+BC,EAA0B,KACrGD,EAA+BC,EAA0B,KACzD,IAAMG,EAA6B,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,GAAI,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,MAC3wDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,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","file":"static/js/vendors-runtime-template.a50cfe8b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isDeclareContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf || this.match(types._in)) {\n      if (isForOf && startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      }\n\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}