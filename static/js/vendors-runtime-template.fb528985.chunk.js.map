{"version":3,"sources":["../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","require","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","default","createTemplateBuilder","formatter","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","get","_literal","set","NO_PLACEHOLDER","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","has","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","key","prototype","hasOwnProperty","call","push","formatters","_builder","_default","bind","undefined","beforeExpr","startsExpr","isLoop","isAssign","TokenType","label","conf","this","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","loc","state","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","lineStart","lastIndex","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","preserveSpace","types","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","out","chunkStart","ch","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","count","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","curContext","jsxReadToken","jsxReadWord","jsxReadString","prevType","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","tryParse","failState","clone","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","indexOf","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","last","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","hasPrecedingLineBreak","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","startSkip","spaceStart","loop","skipBlockComment","addComment","skipLineComment","CommentWhitespace","readToken_interpreter","nextPos","readWord1","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","content","mods","char","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","parent","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement"],"mappings":"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AAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAE55B,SAASC,EAActe,EAAMgC,GAG3B,IAFA,IAAIoa,EAAM,MAEDxU,EAAI,EAAGrH,EAASyB,EAAIzB,OAAQqH,EAAIrH,EAAQqH,GAAK,EAAG,CAEvD,IADAwU,GAAOpa,EAAI4F,IACD5H,EAAM,OAAO,EAEvB,IADAoc,GAAOpa,EAAI4F,EAAI,KACJ5H,EAAM,OAAO,EAG1B,OAAO,EAGT,SAASue,EAAkBve,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQke,EAAwBzY,KAAK+Y,OAAOC,aAAaze,IAGnEse,EAActe,EAAMoe,KAE7B,SAASM,EAAiB1e,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQme,EAAmB1Y,KAAK+Y,OAAOC,aAAaze,IAG9Dse,EAActe,EAAMoe,IAA+BE,EAActe,EAAMqe,MAGhF,IAAMM,EAEI,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,SAF9FA,EAGQ,CAAC,OAAQ,aAEjBC,EAAW,IAAIjb,IAJV,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzTkb,EAAyB,IAAIlb,IAAIgb,GACjCG,EAA6B,IAAInb,IAAIgb,GAC3C,SAASI,GAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,EAEzC,SAASzZ,GAAqByZ,EAAMC,GAClC,OAAOF,GAAeC,EAAMC,IAAaJ,EAAuBrZ,IAAIwZ,GAEtE,SAASE,GAA6BF,GACpC,OAAOF,EAA2BtZ,IAAIwZ,GAExC,SAASG,GAAyBH,EAAMC,GACtC,OAAO1Z,GAAqByZ,EAAMC,IAAaC,GAA6BF,GAE9E,SAAS1Z,GAAU0Z,GACjB,OAAOJ,EAASpZ,IAAIwZ,GAMtB,IAAMI,GAAsB,IAAIzb,IAAI,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,SAAU,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,QAAS,OAAQ,YAAa,OAAQ,UAKje,IAOM0b,GAAc,GAEdC,GAAkB,IAClBC,GAAYC,IAOZC,GAAmB,IACnBC,GAAqB,IACrBC,GAA2B,IAC3BC,GAA4B,KAC5BC,GAA6B,KAQ7BC,GAAkB,KAClBC,GAAY,GAeZC,GACJ,WAAYC,GAAO,UACjBlX,KAAKmX,IAAM,IAAIvc,IACfoF,KAAKoX,QAAU,IAAIxc,IACnBoF,KAAKqX,UAAY,IAAIzc,IACrBoF,KAAKkX,MAAQA,GAIXI,G,WACJ,WAAYC,EAAOrB,GAAU,UAC3BlW,KAAKwX,WAAa,GAClBxX,KAAKyX,iBAAmB,IAAInX,IAC5BN,KAAK0X,sBAAwB,IAAIpX,IACjCN,KAAKuX,MAAQA,EACbvX,KAAKkW,SAAWA,E,kCAGlB,WACE,OA9DmB,EA8DXlW,KAAK2X,wBAA2C,I,sBAG1D,WACE,OA/DgB,GA+DR3X,KAAK4X,yBAAyC,I,4BAGxD,WACE,OAlEuB,GAkEf5X,KAAK4X,yBAAgD,I,mBAG/D,WACE,OAAQ5X,KAAK4X,wBAA0BtB,IAAe,I,2CAGxD,WACE,IAAMY,EAAQlX,KAAK4X,wBACnB,OAAQV,EAAQZ,IAAe,GAAkC,KA/E9C,EA+EkBY,K,yBAGvC,WACE,IAAK,IAAIrY,EAAImB,KAAKwX,WAAWhgB,OAAS,GAAIqH,IAAK,CAC7C,IACEqY,EACElX,KAAKwX,WAAW3Y,GADlBqY,MAGF,GAlFqB,IAkFjBA,EACF,OAAO,EAGT,GAAY,IAARA,EACF,OAAO,K,8BAKb,WACE,OAnGmB,EAmGXlX,KAAK4X,yBAA4C,I,+BAG3D,WACE,OAAO5X,KAAK6X,2BAA2B7X,KAAK8X,kB,yBAG9C,SAAYZ,GACV,OAAO,IAAID,GAAMC,K,mBAGnB,SAAMA,GACJlX,KAAKwX,WAAWrY,KAAKa,KAAK+X,YAAYb,M,kBAGxC,WACElX,KAAKwX,WAAWxC,Q,wCAGlB,SAA2BgD,GACzB,SAvHmB,EAuHTA,EAAMd,QAA2BlX,KAAKkW,UAxH9B,EAwH0C8B,EAAMd,S,yBAGpE,SAAY1Y,EAAMyZ,EAAa5E,GAC7B,IAAI2E,EAAQhY,KAAK8X,eAEjB,GAjHuB,EAiHnBG,GAhHoB,GAgHgBA,EACtCjY,KAAKkY,0BAA0BF,EAAOxZ,EAAMyZ,EAAa5E,GAjHnC,GAmHlB4E,EACFD,EAAMX,UAAUc,IAAI3Z,GAEpBwZ,EAAMZ,QAAQe,IAAI3Z,GAvHC,EA0HjByZ,GACFjY,KAAKoY,mBAAmBJ,EAAOxZ,QAE5B,GA9HY,EA8HRyZ,EACT,IAAK,IAAIpZ,EAAImB,KAAKwX,WAAWhgB,OAAS,EAAGqH,GAAK,IAC5CmZ,EAAQhY,KAAKwX,WAAW3Y,GACxBmB,KAAKkY,0BAA0BF,EAAOxZ,EAAMyZ,EAAa5E,GACzD2E,EAAMb,IAAIgB,IAAI3Z,GACdwB,KAAKoY,mBAAmBJ,EAAOxZ,KAC3BwZ,EAAMd,MAAQV,OAL+B3X,GASjDmB,KAAKkW,UApJS,EAoJG8B,EAAMd,OACzBlX,KAAKyX,iBAAiBY,OAAO7Z,K,gCAIjC,SAAmBwZ,EAAOxZ,GACpBwB,KAAKkW,UA1JS,EA0JG8B,EAAMd,OACzBlX,KAAKyX,iBAAiBY,OAAO7Z,K,uCAIjC,SAA0BwZ,EAAOxZ,EAAMyZ,EAAa5E,GAC9CrT,KAAKsY,oBAAoBN,EAAOxZ,EAAMyZ,IACxCjY,KAAKuX,MAAMlE,EAAK5J,EAAciJ,iBAAkBlU,K,iCAIpD,SAAoBwZ,EAAOxZ,EAAMyZ,GAC/B,SA5JoB,EA4JdA,KAzJiB,EA2JnBA,EACKD,EAAMZ,QAAQ3a,IAAI+B,IAASwZ,EAAMX,UAAU5a,IAAI+B,IAASwZ,EAAMb,IAAI1a,IAAI+B,GA3JvD,GA8JpByZ,EACKD,EAAMZ,QAAQ3a,IAAI+B,KAAUwB,KAAK6X,2BAA2BG,IAAUA,EAAMb,IAAI1a,IAAI+B,GAGtFwZ,EAAMZ,QAAQ3a,IAAI+B,MA7KF,EA6KawZ,EAAMd,OAA8Bc,EAAMZ,QAAQmB,SAASC,OAAOjiB,QAAUiI,KAAUwB,KAAK6X,2BAA2BG,IAAUA,EAAMX,UAAU5a,IAAI+B,M,8BAG1L,SAAiBia,GACf,IACEja,EACEia,EADFja,KAEIka,EAAgB1Y,KAAKwX,WAAW,GAEjCkB,EAActB,QAAQ3a,IAAI+B,IAAUka,EAAcvB,IAAI1a,IAAI+B,IAAUka,EAAcrB,UAAU5a,IAAI+B,IACnGwB,KAAKyX,iBAAiBxe,IAAIuF,EAAMia,EAAG/gB,S,0BAIvC,WACE,OAAOsI,KAAKwX,WAAWxX,KAAKwX,WAAWhgB,OAAS,K,kCAGlD,WACE,IAAK,IAAIqH,EAAImB,KAAKwX,WAAWhgB,OAAS,GAAIqH,IAAK,CAC7C,IACEqY,EACElX,KAAKwX,WAAW3Y,GADlBqY,MAGF,GAAIA,EAAQV,GACV,OAAOU,K,mCAKb,WACE,IAAK,IAAIrY,EAAImB,KAAKwX,WAAWhgB,OAAS,GAAIqH,IAAK,CAC7C,IACEqY,EACElX,KAAKwX,WAAW3Y,GADlBqY,MAGF,GAAY,IAARA,KAlNU,EAkN6BA,GACzC,OAAOA,O,KAOTyB,G,8BACJ,aAAqB,2CAANngB,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJogB,iBAAmB,IAAIhe,IAFT,E,UADCqc,IAQlB4B,G,yHACJ,SAAY3B,GACV,OAAO,IAAIyB,GAAUzB,K,yBAGvB,SAAY1Y,EAAMyZ,EAAa5E,GAC7B,IAAM2E,EAAQhY,KAAK8X,eAEnB,GAAIG,EAAcnB,GAIhB,OAHA9W,KAAKkY,0BAA0BF,EAAOxZ,EAAMyZ,EAAa5E,GACzDrT,KAAKoY,mBAAmBJ,EAAOxZ,QAC/BwZ,EAAMY,iBAAiBT,IAAI3Z,GAI7B,gDAAqBqK,a,iCAGvB,SAAoBmP,EAAOxZ,EAAMyZ,GAC/B,gEAAiCpP,eAE7BoP,EAAcnB,OACRkB,EAAMY,iBAAiBnc,IAAI+B,KAAUwZ,EAAMZ,QAAQ3a,IAAI+B,IAASwZ,EAAMX,UAAU5a,IAAI+B,O,8BAMhG,SAAiBia,GACVzY,KAAKwX,WAAW,GAAGoB,iBAAiBnc,IAAIgc,EAAGja,OAC9C,oDAAuBia,O,GA9BEnB,IAoCzBwB,GAAgB,IAAIle,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKme,GAAarP,EAAmB,CACpCsP,0BAA2B,iFAC3BC,2BAA4B,yKAC5BC,mBAAoB,qCACpBC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,gDAC/BC,gCAAiC,sGACjCC,wBAAyB,oGACzBC,6BAA8B,+KAC9BC,wBAAyB,mGACzBC,uCAAwC,uGACxCC,wCAAyC,gFACzCC,uCAAwC,qEACxCC,wCAAyC,iHACzCC,sBAAuB,2HACvBC,+BAAgC,0EAChCC,0CAA2C,8GAC3CC,0BAA2B,2CAC3BC,oCAAqC,yKACrCC,mBAAoB,8EACpBC,uBAAwB,2EACxBC,gBAAiB,gDACjBC,oCAAqC,0FACrCC,wBAAyB,0GACzBC,oBAAqB,mEACrBC,kBAAmB,0DACnBC,uBAAwB,iFACxBC,0BAA2B,2CAC3BC,eAAgB,0CAChBC,4BAA6B,0DAC7BC,6BAA8B,oGAC9BC,0BAA2B,2CAC3BC,qBAAsB,6DACtBC,mBAAoB,qDACpBC,sBAAuB,oHACvBC,kBAAmB,uEACnBC,kCAAmC,uEACnCC,uBAAwB,+BACxBC,6BAA8B,yDAC9BC,mCAAoC,wDACpCC,qBAAsB,mEACtBC,6BAA8B,mDAC9BC,kCAAmC,oEACnCC,gDAAiD,oHACjDC,6BAA8B,0DAC9BC,oCAAqC,oEACrCC,wBAAyB,8BACxBzS,EAAWE,aAMd,SAASwS,GAAkB9U,GACzB,MAA2B,SAApBA,EAAK+U,YAA6C,WAApB/U,EAAK+U,WAG5C,SAASC,GAAqBpU,GAC5B,OAAQA,EAAMvL,OAASmE,EAAQjC,QAAUqJ,EAAMvL,KAAKzB,UAA4B,SAAhBgN,EAAMtR,MAGxE,IAAM2lB,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACL9f,KAAM,cACN+f,UAAW,oBAcb,IAAMC,GAAoB,yBAmzFpBC,GAAW,CACfC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNpgB,MAAO,SACPqgB,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,IAAK,SACLC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,GAAI,SACJC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,UAGHC,G,WACJ,aAAc,UACZpsB,KAAKqsB,YAAS,EACdrsB,KAAKssB,aAAU,EACftsB,KAAKsT,cAAW,EAChBtT,KAAKyT,YAAS,EACdzT,KAAKqU,OAAS,GACdrU,KAAKusB,kBAAoB,EACzBvsB,KAAKwsB,UAAY,GACjBxsB,KAAKysB,0BAA4B,GACjCzsB,KAAK0sB,wBAAyB,EAC9B1sB,KAAK2sB,YAAa,EAClB3sB,KAAK4sB,QAAS,EACd5sB,KAAK6sB,oBAAqB,EAC1B7sB,KAAK8sB,gBAAiB,EACtB9sB,KAAK+sB,gBAAiB,EACtB/sB,KAAKgtB,kBAAmB,EACxBhtB,KAAKitB,iBAAkB,EACvBjtB,KAAKktB,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjBptB,KAAKqtB,WAAY,EACjBrtB,KAAKstB,4BAA6B,EAClCttB,KAAKutB,OAAS,GACdvtB,KAAKwtB,eAAiB,CAAC,IACvBxtB,KAAKkH,SAAW,GAChBlH,KAAK8H,aAAe,GACpB9H,KAAKqT,IAAM,EACXrT,KAAK4T,UAAY,EACjB5T,KAAK1D,KAAOmE,EAAQM,IACpBf,KAAKzJ,MAAQ,KACbyJ,KAAKtI,MAAQ,EACbsI,KAAK6G,IAAM,EACX7G,KAAK2T,cAAgB,KACrB3T,KAAKwT,gBAAkB,KACvBxT,KAAKuT,aAAe,EACpBvT,KAAK0T,WAAa,EAClB1T,KAAK+U,QAAU,CAACF,EAAMC,OACtB9U,KAAKytB,aAAc,EACnBztB,KAAK0tB,aAAc,EACnB1tB,KAAK2tB,aAAe,IAAIrtB,IACxBN,KAAK4tB,aAAe,E,8BAGtB,SAAKzzB,GACH6F,KAAKqsB,QAAgC,IAAvBlyB,EAAQ0zB,cAAsD,IAAvB1zB,EAAQ0zB,YAAoD,WAAvB1zB,EAAQ2zB,YAClG9tB,KAAKssB,QAAUnyB,EAAQ4zB,UACvB/tB,KAAKsT,SAAWtT,KAAKyT,OAASzT,KAAKguB,gB,yBAGrC,WACE,OAAO,IAAIxnB,EAASxG,KAAKssB,QAAStsB,KAAKqT,IAAMrT,KAAK4T,a,mBAGpD,SAAMqa,GAIJ,IAHA,IAAMpmB,EAAQ,IAAIukB,EACZttB,EAAO1I,OAAO0I,KAAKkB,MAEhBnB,EAAI,EAAGrH,EAASsH,EAAKtH,OAAQqH,EAAIrH,EAAQqH,IAAK,CACrD,IAAME,EAAMD,EAAKD,GACbqvB,EAAMluB,KAAKjB,IAEVkvB,GAAcr1B,MAAMC,QAAQq1B,KAC/BA,EAAMA,EAAI32B,SAGZsQ,EAAM9I,GAAOmvB,EAGf,OAAOrmB,M,KAKLsmB,GAAa,gBACbC,GAAiB,QACjBC,GAAY3kB,EAAmB,CACnC4kB,iBAAkB,+DAClBC,yBAA0B,mDAC1BC,0BAA2B,iDAC3BC,6BAA8B,2GAC9BC,oBAAqB,iEACrBC,uBAAwB,6BACxBC,6BAA8B,oGAC7BvlB,EAAWE,aAiBd,SAASslB,GAAWC,GAClB,QAAOA,IAAyB,uBAAhBA,EAAOxyB,MAAiD,uBAAhBwyB,EAAOxyB,MAGjE,SAASyyB,GAAoBD,GAC3B,GAAoB,kBAAhBA,EAAOxyB,KACT,OAAOwyB,EAAOtwB,KAGhB,GAAoB,sBAAhBswB,EAAOxyB,KACT,OAAOwyB,EAAOE,UAAUxwB,KAAO,IAAMswB,EAAOtwB,KAAKA,KAGnD,GAAoB,wBAAhBswB,EAAOxyB,KACT,OAAOyyB,GAAoBD,EAAOA,QAAU,IAAMC,GAAoBD,EAAOG,UAG/E,MAAM,IAAIx3B,MAAM,6BAA+Bq3B,EAAOxyB,MAjCxDuY,EAAMqa,OAAS,IAAIva,EAAW,QAC9BE,EAAMsa,OAAS,IAAIxa,EAAW,SAC9BE,EAAMua,OAAS,IAAIza,EAAW,kBAAkB,GAChDlU,EAAQ4uB,QAAU,IAAIxvB,EAAU,WAChCY,EAAQ6uB,QAAU,IAAIzvB,EAAU,UAAW,CACzCJ,YAAY,IAEdgB,EAAQ8uB,YAAc,IAAI1vB,EAAU,cAAe,CACjDH,YAAY,IAEde,EAAQ+uB,UAAY,IAAI3vB,EAAU,aAElCY,EAAQ8uB,YAAYnvB,cAAgB,SAAA2U,GAClCA,EAAQ5V,KAAK0V,EAAMua,OAAQva,EAAMqa,SAuBnC,IAqcMO,G,8BACJ,aAAqB,2CAANj3B,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJqc,MAAQ,IAAIja,IACjB,EAAK80B,MAAQ,IAAI90B,IACjB,EAAK+0B,WAAa,IAAI/0B,IACtB,EAAKg1B,QAAU,IAAIh1B,IACnB,EAAKi1B,mBAAqB,IAAIj1B,IANX,E,UADOqc,IAYxB6Y,G,yHACJ,SAAY5Y,GACV,OAAO,IAAIuY,GAAgBvY,K,yBAG7B,SAAY1Y,EAAMyZ,EAAa5E,GAC7B,IAAM2E,EAAQhY,KAAK8X,eAEnB,GAAIG,EAAcpB,GAGhB,OAFA7W,KAAKoY,mBAAmBJ,EAAOxZ,QAC/BwZ,EAAM6X,mBAAmB1X,IAAI3Z,GAI/B,gDAAqBqK,WA19HF,EA49HfoP,IA79HgB,EA89HZA,IACJjY,KAAKkY,0BAA0BF,EAAOxZ,EAAMyZ,EAAa5E,GACzDrT,KAAKoY,mBAAmBJ,EAAOxZ,IAGjCwZ,EAAMnD,MAAMsD,IAAI3Z,IAGdyZ,EAActB,IAAoBqB,EAAM0X,MAAMvX,IAAI3Z,GAClDyZ,EAAcrB,IAA0BoB,EAAM2X,WAAWxX,IAAI3Z,GAC7DyZ,EAAcvB,IAAkBsB,EAAM4X,QAAQzX,IAAI3Z,K,iCAGxD,SAAoBwZ,EAAOxZ,EAAMyZ,GAC/B,GAAID,EAAM0X,MAAMjzB,IAAI+B,GAAO,CACzB,GAAIyZ,EAActB,GAAoB,CACpC,IAAMoZ,KAAa9X,EAAcrB,IAC3BoZ,EAAWhY,EAAM2X,WAAWlzB,IAAI+B,GACtC,OAAOuxB,IAAYC,EAGrB,OAAO,EAGT,OAAI/X,EAAcvB,IAAoBsB,EAAM4X,QAAQnzB,IAAI+B,KAClDwZ,EAAMZ,QAAQ3a,IAAI+B,OAv/HJ,EAw/HNyZ,MAv/HK,EA6/HfA,GAAgCD,EAAMnD,MAAMpY,IAAI+B,KAIpD,wDAAoCqK,a,8BAGtC,SAAiB4P,GACf,IAAMC,EAAgB1Y,KAAKwX,WAAW,GAEpChZ,EACEia,EADFja,KAGGka,EAAc7D,MAAMpY,IAAI+B,IAAUka,EAAcmX,mBAAmBpzB,IAAI+B,IAC1E,oDAAuBia,O,GA/DQnB,IA0E/B2Y,G,WACJ,aAAc,UACZjwB,KAAKkwB,OAAS,G,+BAGhB,SAAMhZ,GACJlX,KAAKkwB,OAAO/wB,KAAK+X,K,kBAGnB,WACElX,KAAKkwB,OAAOlb,Q,0BAGd,WACE,OAAOhV,KAAKkwB,OAAOlwB,KAAKkwB,OAAO14B,OAAS,K,oBAG1C,WACE,OArBgB,EAqBRwI,KAAKmwB,gBAAgC,I,oBAG/C,WACE,OA1BgB,EA0BRnwB,KAAKmwB,gBAAgC,I,qBAG/C,WACE,OA5BiB,EA4BTnwB,KAAKmwB,gBAAiC,I,iBAGhD,WACE,OA/Ba,EA+BLnwB,KAAKmwB,gBAA6B,M,KAI9C,SAASC,GAAcC,EAASC,GAC9B,OAAQD,EAtCU,EAsCc,IAAMC,EAvCpB,EAuCgD,GAGpE,SAASC,GAAQC,GACf,GAAS,MAALA,EACF,MAAM,IAAI/4B,MAAJ,qBAAwB+4B,EAAxB,YAGR,OAAOA,EAGT,SAASC,GAAOD,GACd,IAAKA,EACH,MAAM,IAAI/4B,MAAM,eAIpB,IAAMi5B,GAAWhnB,EAAmB,CAClCinB,gCAAiC,2EACjCC,kCAAmC,8DACnCC,gCAAiC,2CACjCC,sBAAuB,oDACvBC,uBAAwB,qDACxBC,6BAA8B,8DAC9BC,gBAAiB,sCACjBC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,+BAAgC,uCAChCC,kBAAmB,4BACnBC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCAAmC,+DACnCC,yBAA0B,6CAC1BC,sBAAuB,mDACvBC,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,yBAA0B,uDAC1BC,0BAA2B,2DAC3BC,wBAAyB,sDACzBC,4BAA6B,gDAC7BC,sBAAuB,4CACvBC,wBAAyB,0DACzBC,iCAAkC,2DAClCC,kCAAmC,6DACnCC,yCAA0C,mFAC1CC,2BAA4B,wDAC5BC,sBAAuB,6GACvBC,kBAAmB,iFACnBC,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,2BAA4B,oFAC5BC,sCAAuC,sDACvCC,kCAAmC,+CACnCC,+BAAgC,yDAChCC,8BAA+B,gDAC/BC,0BAA2B,oHAC3BC,uCAAwC,mFACxCC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,sDAC/BC,iCAAkC,oEAClCC,kCAAmC,6FAClCpqB,EAAWE,aAuCd,SAASmqB,GAAmBC,GAC1B,MAAoB,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,EAo4E5DlzB,EAAQnC,YAAc,IAAIuB,EAAU,KAAM,CACxCH,YAAY,IAEd,IAAMk0B,GAAoBlqB,EAAmB,CAC3CmqB,oBAAqB,6BACpBxqB,EAAWE,aAsPd,SAASH,GAAUF,EAAS1K,GAC1B,OAAO0K,EAAQ7K,MAAK,SAAA8K,GAClB,OAAIvQ,MAAMC,QAAQsQ,GACTA,EAAO,KAAO3K,EAEd2K,IAAW3K,KAIxB,SAASs1B,GAAgB5qB,EAAS1K,EAAMu1B,GACtC,IAAM5qB,EAASD,EAAQ8qB,MAAK,SAAA7qB,GAC1B,OAAIvQ,MAAMC,QAAQsQ,GACTA,EAAO,KAAO3K,EAEd2K,IAAW3K,KAItB,OAAI2K,GAAUvQ,MAAMC,QAAQsQ,GACnBA,EAAO,GAAG4qB,GAGZ,KAET,IAAME,GAAqB,CAAC,UAAW,QAAS,UAC1CC,GAAgC,CAAC,OAAQ,OAoD/C,IAAMC,GAAe,CACnBC,OAzzOY,SAAAC,GAAU,uIACtB,YAGG,IAFDC,EAEC,EAFDA,QACApd,EACC,EADDA,MAEI3b,EAAQ,KAEZ,IACEA,EAAQ,IAAI4K,OAAOmuB,EAASpd,GAC5B,MAAOqd,IAET,IAAMttB,EAAOjH,KAAKw0B,mBAAmBj5B,GAKrC,OAJA0L,EAAK1L,MAAQ,CACX+4B,UACApd,SAEKjQ,IAhBa,gCAmBtB,SAAmB1Q,GACjB,IAAIk+B,EAEJ,IACEA,EAASC,OAAOn+B,GAChB,MAAOo+B,GACPF,EAAS,KAGX,IAAMxtB,EAAOjH,KAAKw0B,mBAAmBC,GAErC,OADAxtB,EAAKtG,OAAS8U,OAAOxO,EAAK1Q,OAASA,GAC5B0Q,IA9Ba,iCAiCtB,SAAoB1Q,GAClB,IACM0Q,EAAOjH,KAAKw0B,mBADF,MAGhB,OADAvtB,EAAKrG,QAAU6U,OAAOxO,EAAK1Q,OAASA,GAC7B0Q,IArCa,gCAwCtB,SAAmB1Q,GACjB,OAAOyJ,KAAK40B,aAAar+B,EAAO,aAzCZ,gCA4CtB,SAAmBA,GACjB,OAAOyJ,KAAKw0B,mBAAmBj+B,KA7CX,iCAgDtB,SAAoBA,GAClB,OAAOyJ,KAAKw0B,mBAAmBj+B,KAjDX,8BAoDtB,WACE,OAAOyJ,KAAKw0B,mBAAmB,QArDX,iCAwDtB,SAAoBj+B,GAClB,OAAOyJ,KAAKw0B,mBAAmBj+B,KAzDX,6BA4DtB,SAAgBs+B,GACd,IAAMC,EAAmBD,EAAUt+B,MAC7BoB,EAAOqI,KAAK+0B,YAAYF,EAAUn9B,MAAOm9B,EAAUjtB,IAAIlQ,OACvDjB,EAAauJ,KAAK+0B,YAAYD,EAAiBp9B,MAAOo9B,EAAiBltB,IAAIlQ,OAKjF,OAJAjB,EAAWF,MAAQu+B,EAAiBE,MAAMC,gBAC1Cx+B,EAAWy+B,IAAMJ,EAAiBE,MAAME,IACxCv9B,EAAKlB,WAAauJ,KAAKm1B,aAAa1+B,EAAY,UAAWq+B,EAAiBjuB,IAAKiuB,EAAiBltB,IAAIf,KACtGlP,EAAKk9B,UAAYC,EAAiBE,MAAME,IAAI39B,MAAM,GAAI,GAC/CyI,KAAKm1B,aAAax9B,EAAM,sBAAuBk9B,EAAUhuB,IAAKguB,EAAUjtB,IAAIf,OApE/D,0BAuEtB,SAAaI,EAAMopB,GACjB,gDAAmBppB,EAAMopB,GACzBppB,EAAKxQ,YAAa,IAzEE,8BA4EtB,SAAiBwQ,GACH,MAARA,GAAgBjH,KAAKo1B,iBAAiBnuB,GACxCjH,KAAKq1B,iBAAiBpuB,EAAK1Q,OAE3B,oDAAuB0Q,KAhFL,0CAoFtB,SAA6BquB,GAC3B,OAAOA,EAAO/+B,MAAMuS,SArFA,8BAwFtB,SAAiBnR,GACf,IAAI49B,EAEJ,MAAqB,wBAAd59B,EAAK2E,MAA2D,YAAzB3E,EAAKlB,WAAW6F,MAAuD,kBAA1B3E,EAAKlB,WAAWF,SAA2E,OAAlDg/B,EAAwB59B,EAAKlB,WAAWu+B,QAAkBO,EAAsBC,iBA3FhM,6BA8FtB,SAAgB79B,GACd,IAAMpB,EAAQoB,EAAKlB,WAAWF,MACxBs+B,EAAY,EAAH,iDAAyBl9B,GAExC,OADAqI,KAAKy1B,SAASZ,EAAUt+B,MAAO,kBAAmBA,GAC3Cs+B,IAlGa,4BAqGtB,SAAe5tB,GAAe,oCAANzO,EAAM,iCAANA,EAAM,mBAC5B,8DAAqByO,GAArB,OAA8BzO,IAC9B,IAAMk9B,EAAsBzuB,EAAK0uB,WAAW54B,KAAI,SAAA64B,GAAC,OAAI,EAAKC,gBAAgBD,MAC1E3uB,EAAK3P,KAAOo+B,EAAoB13B,OAAOiJ,EAAK3P,aACrC2P,EAAK0uB,aAzGQ,6BA4GtB,SAAgBG,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,GACtEh2B,KAAKi2B,YAAYX,EAAQhF,EAAaD,EAAS0F,EAAeC,EAAmB,eAAe,GAE5FV,EAAOY,iBACTZ,EAAO/+B,MAAM2/B,eAAiBZ,EAAOY,sBAC9BZ,EAAOY,gBAGhBJ,EAAUx+B,KAAK6H,KAAKm2B,KApHA,mCAuHtB,WAA+B,6BAAN98B,EAAM,yBAANA,EAAM,gBAC7B,IAAMyO,GAAI,6EAAkCzO,IAE5C,MAAkB,gBAAdyO,EAAK3K,MAA0B0D,KAAK8zB,gBAAgB,SAAU,iBACzD9zB,KAAKm2B,sCAAsClvB,GAG7CA,IA9Ha,mDAiItB,SAAsCA,GACpC,IAAMzI,EAAO,EAAH,kDAA0ByI,GAKpC,cAJAA,EAAOA,GACKwR,GACZxR,EAAKzI,KAAOA,EACZyI,EAAK3K,KAAO,oBACL2K,IAvIa,2BA0ItB,SAAcA,GACZ,OAAKjH,KAAK8zB,gBAAgB,SAAU,iBAIf,sBAAd7sB,EAAK3K,KAHV,iDAA2B2K,KA5IT,8BAkJtB,SAAiBA,GACf,OAAKjH,KAAK8zB,gBAAgB,SAAU,iBAI7B7sB,EAAKzI,KAHV,oDAA8ByI,KApJZ,0BA0JtB,SAAa1Q,EAAO+F,GAClB,IAAM2K,EAAO,EAAH,8CAAsB1Q,EAAO+F,GAGvC,OAFA2K,EAAKiuB,IAAMjuB,EAAK+tB,MAAME,WACfjuB,EAAK+tB,MACL/tB,IA9Ja,+BAiKtB,SAAkBA,EAAMmvB,GAAmC,IAAlBC,EAAkB,wDACzD,qDAAwBpvB,EAAMmvB,EAAiBC,GAC/CpvB,EAAKxQ,WAAgC,mBAAnBwQ,EAAK3P,KAAKgF,OAnKR,yBAsKtB,SAAY2K,EAAMqpB,EAAaD,EAAS0F,EAAeO,EAAkBh6B,GAA4B,IAAtBi6B,EAAsB,wDAC/FC,EAAWx2B,KAAKy2B,YAYpB,OAXAD,EAASE,KAAOzvB,EAAKyvB,MACrBF,EAAW,EAAH,6CAAqBA,EAAUlG,EAAaD,EAAS0F,EAAeO,EAAkBh6B,EAAMi6B,IAC3Fj6B,KAAO,4BACTk6B,EAASE,KAChBzvB,EAAK1Q,MAAQigC,EAEA,uBAATl6B,IACF2K,EAAK0vB,UAAW,GAGlBr6B,EAAO,mBACA0D,KAAK42B,WAAW3vB,EAAM3K,KAnLT,gCAsLtB,WAA4B,6BAAN9D,EAAM,yBAANA,EAAM,gBAC1B,IAAMq+B,GAAY,0EAA+Br+B,IAMjD,OAJIwH,KAAK8zB,gBAAgB,SAAU,mBACjC+C,EAAav6B,KAAO,sBAGfu6B,IA7La,uCAgMtB,WAAmC,6BAANr+B,EAAM,yBAANA,EAAM,gBACjC,IAAMq+B,GAAY,iFAAsCr+B,IAOxD,OALIwH,KAAK8zB,gBAAgB,SAAU,mBACjC+C,EAAav6B,KAAO,qBACpBu6B,EAAaF,UAAW,GAGnBE,IAxMa,+BA2MtB,SAAkB7M,EAAMsG,EAAaD,EAASyG,EAAWC,GACvD,IAAM9vB,EAAO,EAAH,mDAA2B+iB,EAAMsG,EAAaD,EAASyG,EAAWC,GAQ5E,OANI9vB,IACFA,EAAK3K,KAAO,WACM,WAAd2K,EAAKyvB,OAAmBzvB,EAAKyvB,KAAO,QACxCzvB,EAAK+vB,WAAY,GAGZ/vB,IApNa,iCAuNtB,SAAoB+iB,EAAMiN,EAAU3jB,EAAUwjB,EAAWI,GACvD,IAAMjwB,EAAO,EAAH,qDAA6B+iB,EAAMiN,EAAU3jB,EAAUwjB,EAAWI,GAO5E,OALIjwB,IACFA,EAAKyvB,KAAO,OACZzvB,EAAK3K,KAAO,YAGP2K,IA/Na,0BAkOtB,SAAaA,GAAqB,IAAfkwB,EAAe,wDAChC,OAAY,MAARlwB,GAAgBjH,KAAKo1B,iBAAiBnuB,IACxCjH,KAAKo3B,aAAanwB,EAAK1Q,MAAO4gC,GACvBlwB,GAGT,gDAA0BA,EAAMkwB,KAxOZ,8CA2OtB,SAAiCnN,GAC/B,GAAkB,QAAdA,EAAK0M,MAAgC,QAAd1M,EAAK0M,KAC9B12B,KAAKuX,MAAMyS,EAAKjrB,IAAIrH,MAAO+R,EAAcyF,yBACpC,GAAI8a,EAAKsL,OACdt1B,KAAKuX,MAAMyS,EAAKjrB,IAAIrH,MAAO+R,EAAc0F,sBACpC,8BALiC3W,EAKjC,iCALiCA,EAKjC,mBACL,gFAAuCwxB,GAAvC,OAAgDxxB,OAjP9B,kCAqPtB,SAAqByO,EAAMowB,GAGzB,GAFA,wDAA2BpwB,EAAMowB,GAER,WAArBpwB,EAAKqwB,OAAOh7B,KAAmB,CAK/B,IAAIi7B,EADN,GAHAtwB,EAAK3K,KAAO,mBACZ2K,EAAKb,OAASa,EAAK4B,UAAU,GAEzB7I,KAAKoJ,UAAU,oBAGjBnC,EAAKuwB,WAAuD,OAAzCD,EAAmBtwB,EAAK4B,UAAU,IAAc0uB,EAAmB,YAGjFtwB,EAAK4B,iBACL5B,EAAKqwB,OAGd,OAAOrwB,IAtQa,mCAyQtB,SAAsBA,GACF,qBAAdA,EAAK3K,MAIT,yDAA4B2K,KA9QR,yBAiRtB,SAAYA,GAGV,OAFA,+CAAkBA,GAEVA,EAAK3K,MACX,IAAK,uBACH2K,EAAKwwB,SAAW,KAChB,MAEF,IAAK,yBAC4B,IAA3BxwB,EAAK8B,WAAWvR,QAA4C,6BAA5ByP,EAAK8B,WAAW,GAAGzM,OACrD2K,EAAK3K,KAAO,uBACZ2K,EAAKwwB,SAAWxwB,EAAK8B,WAAW,GAAG0uB,gBAC5BxwB,EAAK8B,YAMlB,OAAO9B,IAnSa,4BAsStB,SAAeywB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAChD,IAAMZ,EAAO,EAAH,gDAAwBywB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAErE,GAAIA,EAAM+vB,qBAKR,GAJkB,6BAAd3wB,EAAK3K,MAAqD,2BAAd2K,EAAK3K,OACnD2K,EAAK3K,KAAO2K,EAAK3K,KAAKu7B,UAAU,IAG9BhwB,EAAMiwB,KAAM,CACd,IAAMC,EAAQ/3B,KAAKg4B,gBAAgB/wB,GAEnC,OADA8wB,EAAMthC,WAAawQ,EACZjH,KAAK42B,WAAWmB,EAAO,wBAET,qBAAd9wB,EAAK3K,MAA6C,mBAAd2K,EAAK3K,OAClD2K,EAAKowB,UAAW,GAGlB,OAAOpwB,IAvTa,sCA0TtB,SAAyBA,GAKvB,MAJkB,oBAAdA,EAAK3K,OACP2K,EAAOA,EAAKxQ,YAGd,4DAAsCwQ,KA/TlB,6BAkUtB,SAAgBA,GACd,MAAqB,oBAAdA,EAAK3K,OAnUQ,8BAsUtB,SAAiB2K,GACf,MAAqB,aAAdA,EAAK3K,MAAqC,SAAd2K,EAAKyvB,OAAoBzvB,EAAKquB,SAvU7C,4BA0UtB,SAAeruB,GACb,OAAOA,EAAKquB,QAAwB,QAAdruB,EAAKyvB,MAAgC,QAAdzvB,EAAKyvB,SA3U9B,GAAkBrC,IA0zOxC4D,IAr3GS,SAAA5D,GAAU,iIACnB,WAIE,IAHA,IAAI6D,EAAM,GACNC,EAAan4B,KAAK6H,MAAMwL,MAEnB,CACP,GAAIrT,KAAK6H,MAAMwL,KAAOrT,KAAKxI,OACzB,MAAMwI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO22B,GAAUM,wBAG/C,IAAMyJ,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAE5C,OAAQ+kB,GACN,KAAK,GACL,KAAK,IACH,OAAIp4B,KAAK6H,MAAMwL,MAAQrT,KAAK6H,MAAMnQ,MACrB,KAAP0gC,GAAap4B,KAAK6H,MAAM4lB,eACxBztB,KAAK6H,MAAMwL,IACNrT,KAAKq4B,YAAY53B,EAAQ8uB,cAGlC,oDAA8B6I,IAGhCF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KACxCrT,KAAKq4B,YAAY53B,EAAQ6uB,QAAS4I,IAE3C,KAAK,GACHA,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C6kB,GAAOl4B,KAAKs4B,gBACZH,EAAan4B,KAAK6H,MAAMwL,IACxB,MAEF,KAAK,GACL,KAAK,IAEL,QACMhN,EAAU+xB,IACZF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C6kB,GAAOl4B,KAAKu4B,gBAAe,GAC3BJ,EAAan4B,KAAK6H,MAAMwL,OAEtBrT,KAAK6H,MAAMwL,QA1CJ,4BAiDnB,SAAemlB,GACb,IACIN,EADEE,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAa5C,QAXErT,KAAK6H,MAAMwL,IAEF,KAAP+kB,GAAuD,KAA1Cp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,QAC9CrT,KAAK6H,MAAMwL,IACb6kB,EAAMM,EAAgB,KAAO,QAE7BN,EAAMziB,OAAOC,aAAa0iB,KAG1Bp4B,KAAK6H,MAAMykB,QACbtsB,KAAK6H,MAAM+L,UAAY5T,KAAK6H,MAAMwL,IAC3B6kB,IA/DU,2BAkEnB,SAAcO,GAIZ,IAHA,IAAIP,EAAM,GACNC,IAAen4B,KAAK6H,MAAMwL,MAErB,CACP,GAAIrT,KAAK6H,MAAMwL,KAAOrT,KAAKxI,OACzB,MAAMwI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc+I,oBAGnD,IAAM4lB,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAC5C,GAAI+kB,IAAOK,EAAO,MAEP,KAAPL,GACFF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C6kB,GAAOl4B,KAAKs4B,gBACZH,EAAan4B,KAAK6H,MAAMwL,KACfhN,EAAU+xB,IACnBF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C6kB,GAAOl4B,KAAKu4B,gBAAe,GAC3BJ,EAAan4B,KAAK6H,MAAMwL,OAEtBrT,KAAK6H,MAAMwL,IAKjB,OADA6kB,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,OACxCrT,KAAKq4B,YAAY53B,EAAQpF,OAAQ68B,KA5FvB,2BA+FnB,WAOE,IANA,IAEIQ,EAFAxhC,EAAM,GACNyhC,EAAQ,EAERP,EAAKp4B,KAAK0I,MAAM1I,KAAK6H,MAAMwL,KACzB4jB,IAAaj3B,KAAK6H,MAAMwL,IAEvBrT,KAAK6H,MAAMwL,IAAMrT,KAAKxI,QAAUmhC,IAAU,IAAI,CAGnD,GAAW,OAFXP,EAAKp4B,KAAK0I,MAAM1I,KAAK6H,MAAMwL,QAEX,CACC,MAAXnc,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAIyF,OAAO,GAEbwxB,GAAWzxB,KAAKxF,KAClBwhC,EAASjjB,OAAOmjB,cAAcC,SAAS3hC,EAAK,QAG9CA,EAAMA,EAAIyF,OAAO,GAEbyxB,GAAe1xB,KAAKxF,KACtBwhC,EAASjjB,OAAOmjB,cAAcC,SAAS3hC,EAAK,OAIhDwhC,EAASnc,GAASrlB,GAGpB,MAGFA,GAAOkhC,EAGT,OAAKM,IACH14B,KAAK6H,MAAMwL,IAAM4jB,EACV,OApIQ,yBA0InB,WACE,IAAImB,EACE1gC,EAAQsI,KAAK6H,MAAMwL,IAEzB,GACE+kB,EAAKp4B,KAAK0I,MAAMC,aAAa3I,KAAK6H,MAAMwL,WACjCsC,EAAiByiB,IAAc,KAAPA,GAEjC,OAAOp4B,KAAKq4B,YAAY53B,EAAQ4uB,QAASrvB,KAAK0I,MAAMnR,MAAMG,EAAOsI,KAAK6H,MAAMwL,QAlJ3D,gCAqJnB,WACE,IAAMpM,EAAOjH,KAAKy2B,YAWlB,OATIz2B,KAAK3C,MAAMoD,EAAQ4uB,SACrBpoB,EAAKzI,KAAOwB,KAAK6H,MAAMtR,MACdyJ,KAAK6H,MAAMvL,KAAKzB,QACzBoM,EAAKzI,KAAOwB,KAAK6H,MAAMvL,KAAKzB,QAE5BmF,KAAK84B,aAGP94B,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,mBAjKZ,oCAoKnB,WACE,IAAMgwB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtB9U,EAAOwB,KAAK+4B,qBAClB,IAAK/4B,KAAKg5B,IAAIv4B,EAAQqB,OAAQ,OAAOtD,EACrC,IAAMyI,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAGxC,OAFArM,EAAK+nB,UAAYxwB,EACjByI,EAAKzI,KAAOwB,KAAK+4B,qBACV/4B,KAAK42B,WAAW3vB,EAAM,uBA5KZ,iCA+KnB,WACE,IAAMgwB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACxBrM,EAAOjH,KAAKi5B,yBAEhB,GAAkB,sBAAdhyB,EAAK3K,KACP,OAAO2K,EAGT,KAAOjH,KAAKg5B,IAAIv4B,EAAQuB,MAAM,CAC5B,IAAMk3B,EAAUl5B,KAAK+0B,YAAYkC,EAAU3jB,GAC3C4lB,EAAQpK,OAAS7nB,EACjBiyB,EAAQjK,SAAWjvB,KAAK+4B,qBACxB9xB,EAAOjH,KAAK42B,WAAWsC,EAAS,uBAGlC,OAAOjyB,IA/LU,oCAkMnB,WACE,IAAIA,EAEJ,OAAQjH,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQY,OASX,OARA4F,EAAOjH,KAAKy2B,YACZz2B,KAAKwY,OAGwB,wBAF7BvR,EAAOjH,KAAKm5B,4BAA4BlyB,IAE/BxQ,WAAW6F,MAClB0D,KAAKuX,MAAMtQ,EAAKvP,MAAO22B,GAAUC,kBAG5BrnB,EAET,KAAKxG,EAAQ8uB,YACb,KAAK9uB,EAAQpF,OACX,OAAO2E,KAAKo5B,gBAEd,QACE,MAAMp5B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO22B,GAAUK,wBAtNhC,qCA0NnB,WACE,IAAMznB,EAAOjH,KAAK+0B,YAAY/0B,KAAK6H,MAAM6L,WAAY1T,KAAK6H,MAAM8L,eAChE,OAAO3T,KAAKm1B,aAAaluB,EAAM,qBAAsBjH,KAAK6H,MAAMnQ,MAAOsI,KAAK6H,MAAMyL,YA5NjE,iCA+NnB,SAAoBrM,GAIlB,OAHAjH,KAAKwY,OACLvR,EAAKxQ,WAAauJ,KAAKq5B,kBACvBr5B,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,oBAnOZ,yCAsOnB,SAA4BA,GAC1B,GAAIjH,KAAK3C,MAAMoD,EAAQe,QACrByF,EAAKxQ,WAAauJ,KAAKu5B,8BAClB,CACL,IAAM9iC,EAAauJ,KAAKq5B,kBACxBpyB,EAAKxQ,WAAaA,EAIpB,OADAuJ,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,4BA/OZ,+BAkPnB,WACE,IAAMA,EAAOjH,KAAKy2B,YAElB,OAAIz2B,KAAKg5B,IAAIv4B,EAAQY,SACnBrB,KAAKs5B,OAAO74B,EAAQ4B,UACpB4E,EAAKuyB,SAAWx5B,KAAKy5B,0BACrBz5B,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,wBAG/BA,EAAKzI,KAAOwB,KAAKi5B,yBACjBhyB,EAAK1Q,MAAQyJ,KAAKg5B,IAAIv4B,EAAQkC,IAAM3C,KAAK05B,yBAA2B,KAC7D15B,KAAK42B,WAAW3vB,EAAM,mBA9PZ,sCAiQnB,SAAyBgwB,EAAU3jB,GACjC,IAAMrM,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAExC,OAAItT,KAAK3C,MAAMoD,EAAQ+uB,YACrBxvB,KAAKs5B,OAAO74B,EAAQ+uB,WACbxvB,KAAK42B,WAAW3vB,EAAM,wBAG/BA,EAAKzI,KAAOwB,KAAK25B,sBACV35B,KAAK45B,gCAAgC3yB,MA1Q3B,6CA6QnB,SAAgCA,GAG9B,IAFA,IAAMuwB,EAAa,IAEXx3B,KAAK3C,MAAMoD,EAAQoD,SAAW7D,KAAK3C,MAAMoD,EAAQ+uB,YACvDgI,EAAWr4B,KAAKa,KAAK65B,qBAMvB,OAHA5yB,EAAKuwB,WAAaA,EAClBvwB,EAAK6yB,YAAc95B,KAAKg5B,IAAIv4B,EAAQoD,OACpC7D,KAAKs5B,OAAO74B,EAAQ+uB,WACbxvB,KAAK42B,WAAW3vB,EAAM,uBAvRZ,sCA0RnB,SAAyBgwB,EAAU3jB,GACjC,IAAMrM,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAExC,OAAItT,KAAK3C,MAAMoD,EAAQ+uB,YACrBxvB,KAAKs5B,OAAO74B,EAAQ+uB,WACbxvB,KAAK42B,WAAW3vB,EAAM,wBAG/BA,EAAKzI,KAAOwB,KAAK25B,sBACjB35B,KAAKs5B,OAAO74B,EAAQ+uB,WACbxvB,KAAK42B,WAAW3vB,EAAM,wBApSZ,+BAuSnB,SAAkBgwB,EAAU3jB,GAC1B,IAAMrM,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAClCymB,EAAW,GACXC,EAAiBh6B,KAAKi6B,yBAAyBhD,EAAU3jB,GAC3D4mB,EAAiB,KAErB,IAAKF,EAAeF,YAAa,CAC/BK,EAAU,OACR,OAAQn6B,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQ8uB,YAKX,GAJA0H,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBtT,KAAKwY,OAEDxY,KAAKg5B,IAAIv4B,EAAQoD,OAAQ,CAC3Bq2B,EAAiBl6B,KAAKo6B,yBAAyBnD,EAAU3jB,GACzD,MAAM6mB,EAGRJ,EAAS56B,KAAKa,KAAKq6B,kBAAkBpD,EAAU3jB,IAC/C,MAEF,KAAK7S,EAAQ6uB,QACXyK,EAAS56B,KAAKa,KAAKo5B,iBACnB,MAEF,KAAK34B,EAAQY,OAET,IAAM4F,EAAOjH,KAAKy2B,YAClBz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQ4B,UACrB03B,EAAS56B,KAAKa,KAAKs6B,oBAAoBrzB,IAEvC8yB,EAAS56B,KAAKa,KAAKm5B,4BAA4BlyB,IAGjD,MAGJ,QACE,MAAMjH,KAAK84B,aAIbjK,GAAWmL,KAAoBnL,GAAWqL,GAC5Cl6B,KAAKuX,MAAM2iB,EAAexiC,MAAO22B,GAAUG,4BACjCK,GAAWmL,IAAmBnL,GAAWqL,GACnDl6B,KAAKuX,MAAM2iB,EAAexiC,MAAO22B,GAAUE,yBAA0BQ,GAAoBiL,EAAex7B,OAC9FqwB,GAAWmL,IAAoBnL,GAAWqL,IAChDnL,GAAoBmL,EAAe17B,QAAUuwB,GAAoBiL,EAAex7B,OAClFwB,KAAKuX,MAAM2iB,EAAexiC,MAAO22B,GAAUE,yBAA0BQ,GAAoBiL,EAAex7B,OAe9G,GAVIqwB,GAAWmL,IACb/yB,EAAKszB,gBAAkBP,EACvB/yB,EAAKuzB,gBAAkBN,IAEvBjzB,EAAK+yB,eAAiBA,EACtB/yB,EAAKizB,eAAiBA,GAGxBjzB,EAAK8yB,SAAWA,EAEZ/5B,KAAKy6B,aAAa,KACpB,MAAMz6B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO22B,GAAUO,8BAG/C,OAAOC,GAAWmL,GAAkBh6B,KAAK42B,WAAW3vB,EAAM,eAAiBjH,KAAK42B,WAAW3vB,EAAM,gBA7WhF,6BAgXnB,WACE,IAAMgwB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAE5B,OADAtT,KAAKwY,OACExY,KAAKq6B,kBAAkBpD,EAAU3jB,KApXvB,2BAuXnB,SAAc4jB,GACZ,OAAIl3B,KAAK3C,MAAMoD,EAAQ6uB,SACdtvB,KAAK40B,aAAa50B,KAAK6H,MAAMtR,MAAO,WAClCyJ,KAAK3C,MAAMoD,EAAQ8uB,aACrBvvB,KAAK06B,kBACH16B,KAAKy6B,aAAa,MAAkD,KAA1Cz6B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,MACpErT,KAAKq4B,YAAY53B,EAAQ8uB,aAClBvvB,KAAK06B,mBAEZ,iDAA2BxD,KAhYZ,kCAoYnB,SAAqBrvB,GACnB,IAAM8yB,EAAiB,EAAH,sDAA8B9yB,GAElD,OADA8yB,EAAe7N,eAAiBjlB,EAAMilB,eAC/B6N,IAvYU,8BA0YnB,SAAiB1jC,GACf,GAAI+I,KAAK6H,MAAMilB,eAAgB,OAAO,EAAP,kDAA8B71B,GAC7D,IAAM8d,EAAU/U,KAAK46B,aAErB,GAAI7lB,IAAYF,EAAMua,OACpB,OAAOpvB,KAAK66B,eAGd,GAAI9lB,IAAYF,EAAMqa,QAAUna,IAAYF,EAAMsa,OAAQ,CACxD,GAAI3Z,EAAkBve,GACpB,OAAO+I,KAAK86B,cAGd,GAAa,KAAT7jC,EAEF,QADE+I,KAAK6H,MAAMwL,IACNrT,KAAKq4B,YAAY53B,EAAQ+uB,WAGlC,IAAc,KAATv4B,GAAwB,KAATA,IAAgB8d,IAAYF,EAAMqa,OACpD,OAAOlvB,KAAK+6B,cAAc9jC,GAI9B,OAAa,KAATA,GAAe+I,KAAK6H,MAAM4lB,aAA6D,KAA9CztB,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,MAChFrT,KAAK6H,MAAMwL,IACNrT,KAAKq4B,YAAY53B,EAAQ8uB,cAGlC,oDAA8Bt4B,KAtab,2BAyanB,SAAc+jC,GACZ,iDAAoBA,GACpB,MAGIh7B,KAAK6H,MAFPkN,EADF,EACEA,QACAzY,EAFF,EAEEA,KAGF,GAAIA,IAASmE,EAAQoD,OAASm3B,IAAav6B,EAAQ8uB,YACjDxa,EAAQxM,QAAQ,EAAG,EAAGsM,EAAMsa,QAC5BnvB,KAAK6H,MAAM4lB,aAAc,OACpB,GAAInxB,IAASmE,EAAQ+uB,UAAW,CACrC,IAAM0I,EAAMnjB,EAAQC,MAEhBkjB,IAAQrjB,EAAMqa,QAAU8L,IAAav6B,EAAQoD,OAASq0B,IAAQrjB,EAAMsa,QACtEpa,EAAQC,MACRhV,KAAK6H,MAAM4lB,YAAc1Y,EAAQA,EAAQvd,OAAS,KAAOqd,EAAMua,QAE/DpvB,KAAK6H,MAAM4lB,aAAc,OAElBnxB,EAAKzB,SAAYmgC,IAAav6B,EAAQuB,KAAOg5B,IAAav6B,EAAQyB,YAG3ElC,KAAK6H,MAAM4lB,YAAcnxB,EAAKmD,WAF9BO,KAAK6H,MAAM4lB,aAAc,MA7bV,GAAkB4G,IAs3GrC4G,KAliNU,SAAA5G,GAAU,qCACpB,aAAqB,2CAAN77B,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJ0iC,gBAAa17B,EAFC,EADD,yCAMpB,WACE,OAAOqZ,KAPW,8BAUpB,WACE,OAAO7Y,KAAK8zB,gBAAgB,OAAQ,QAA8B,SAApB9zB,KAAKk7B,aAXjC,8BAcpB,WACE,QAASl7B,KAAK8zB,gBAAgB,OAAQ,WAfpB,yBAkBpB,SAAYx3B,EAAM4xB,GAOhB,OANI5xB,IAASmE,EAAQpF,QAAUiB,IAASmE,EAAQoB,MAAQvF,IAASmE,EAAQiC,2BAC/ClD,IAApBQ,KAAKk7B,aACPl7B,KAAKk7B,WAAa,MAItB,+CAAyB5+B,EAAM4xB,KAzBb,wBA4BpB,SAAW1yB,GACT,QAAwBgE,IAApBQ,KAAKk7B,WAA0B,CACjC,IAAMC,EAAU7e,GAAkBhf,KAAK9B,EAAQjF,OAE/C,GAAK4kC,EAAgB,GAAmB,SAAfA,EAAQ,GAC/Bn7B,KAAKk7B,WAAa,WACb,IAAmB,WAAfC,EAAQ,GAGjB,MAAM,IAAI1jC,MAAM,0BAFhBuI,KAAKk7B,WAAa,eAMtB,qDAAwB1/B,KAzCN,sCA4CpB,SAAyB4/B,GACvB,IAAMC,EAAYr7B,KAAK6H,MAAM+kB,OAC7B5sB,KAAK6H,MAAM+kB,QAAS,EACpB5sB,KAAKs5B,OAAO8B,GAAO36B,EAAQqB,OAC3B,IAAMxF,EAAO0D,KAAKs7B,gBAElB,OADAt7B,KAAK6H,MAAM+kB,OAASyO,EACb/+B,IAlDW,gCAqDpB,WACE,IAAM2K,EAAOjH,KAAKy2B,YACZ8E,EAAYv7B,KAAK6H,MAAMnQ,MAQ7B,OAPAsI,KAAKwY,OACLxY,KAAKw7B,iBAAiB,UAElBx7B,KAAK6H,MAAM0L,aAAegoB,EAAY,GACxCv7B,KAAKuX,MAAMgkB,EAAWxiB,GAAWwC,oCAG/Bvb,KAAKg5B,IAAIv4B,EAAQiB,SACnBuF,EAAK1Q,MAAQyJ,KAAKq5B,kBAClBr5B,KAAKs5B,OAAO74B,EAAQkB,QACb3B,KAAK42B,WAAW3vB,EAAM,sBAEtBjH,KAAK42B,WAAW3vB,EAAM,uBApEb,kDAwEpB,WACE,IAAMo0B,EAAYr7B,KAAK6H,MAAM+kB,OAC7B5sB,KAAK6H,MAAM+kB,QAAS,EACpB5sB,KAAKs5B,OAAO74B,EAAQqB,OACpB,IAAIxF,EAAO,KACPm/B,EAAY,KAchB,OAZIz7B,KAAK3C,MAAMoD,EAAQkD,SACrB3D,KAAK6H,MAAM+kB,OAASyO,EACpBI,EAAYz7B,KAAK07B,uBAEjBp/B,EAAO0D,KAAKs7B,gBACZt7B,KAAK6H,MAAM+kB,OAASyO,EAEhBr7B,KAAK3C,MAAMoD,EAAQkD,UACrB83B,EAAYz7B,KAAK07B,uBAId,CAACp/B,EAAMm/B,KA3FI,mCA8FpB,SAAsBx0B,GAGpB,OAFAjH,KAAKwY,OACLxY,KAAK27B,sBAAsB10B,GAAM,GAC1BjH,KAAK42B,WAAW3vB,EAAM,kBAjGX,sCAoGpB,SAAyBA,GACvBjH,KAAKwY,OACL,IAAMC,EAAKxR,EAAKwR,GAAKzY,KAAK47B,kBACpBC,EAAW77B,KAAKy2B,YAChBqF,EAAgB97B,KAAKy2B,YAEvBz2B,KAAKy6B,aAAa,KACpBoB,EAAS3F,eAAiBl2B,KAAK+7B,oCAE/BF,EAAS3F,eAAiB,KAG5Bl2B,KAAKs5B,OAAO74B,EAAQiB,QACpB,IAAMs6B,EAAMh8B,KAAKi8B,8BACjBJ,EAAS/yB,OAASkzB,EAAIlzB,OACtB+yB,EAASK,KAAOF,EAAIE,KACpBL,EAAS77B,KAAOg8B,EAAI72B,MACpBnF,KAAKs5B,OAAO74B,EAAQkB,QAjBS,MAkBW3B,KAAKm8B,uCAlBhB,SAwB7B,OANCN,EAASO,WAlBmB,KAkBPn1B,EAAKw0B,UAlBE,KAmB7BK,EAAcO,eAAiBr8B,KAAK42B,WAAWiF,EAAU,0BACzDpjB,EAAG4jB,eAAiBr8B,KAAK42B,WAAWkF,EAAe,kBACnD97B,KAAKs8B,iBAAiB7jB,GACtBzY,KAAKu8B,YACLv8B,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KApbNsY,KAobkC7P,EAAKwR,GAAG/gB,OAC5DsI,KAAK42B,WAAW3vB,EAAM,qBA5HX,8BA+HpB,SAAiBA,EAAMw1B,GACrB,GAAIz8B,KAAK3C,MAAMoD,EAAQ4E,QACrB,OAAOrF,KAAK08B,sBAAsBz1B,GAC7B,GAAIjH,KAAK3C,MAAMoD,EAAQ+D,WAC5B,OAAOxE,KAAK28B,yBAAyB11B,GAChC,GAAIjH,KAAK3C,MAAMoD,EAAQqE,MAC5B,OAAO9E,KAAK48B,yBAAyB31B,GAChC,GAAIjH,KAAK68B,cAAc,UAC5B,OAAI78B,KAAK3C,MAAMoD,EAAQuB,KACdhC,KAAK88B,8BAA8B71B,IAEtCw1B,GACFz8B,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAcwF,GAAWyB,qBAG1Cxa,KAAK+8B,uBAAuB91B,IAEhC,GAAIjH,KAAKg9B,aAAa,QAC3B,OAAOh9B,KAAKi9B,0BAA0Bh2B,GACjC,GAAIjH,KAAKg9B,aAAa,UAC3B,OAAOh9B,KAAKk9B,2BAA2Bj2B,GAClC,GAAIjH,KAAKg9B,aAAa,aAC3B,OAAOh9B,KAAKm9B,0BAA0Bl2B,GACjC,GAAIjH,KAAK3C,MAAMoD,EAAQ8E,SAC5B,OAAOvF,KAAKo9B,kCAAkCn2B,EAAMw1B,GAEpD,MAAMz8B,KAAK84B,eAzJK,sCA6JpB,SAAyB7xB,GAKvB,OAJAjH,KAAKwY,OACLvR,EAAKwR,GAAKzY,KAAKq9B,oCAAmC,GAClDr9B,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KAnelB8+B,EAmekCr2B,EAAKwR,GAAG/gB,OACvDsI,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,qBAlKX,oCAqKpB,SAAuBA,GAAM,WAC3BjH,KAAKgY,MAAMulB,MAjgBK,GAmgBZv9B,KAAK3C,MAAMoD,EAAQpF,QACrB4L,EAAKwR,GAAKzY,KAAKo5B,gBAEfnyB,EAAKwR,GAAKzY,KAAK47B,kBAGjB,IAAM4B,EAAWv2B,EAAK3P,KAAO0I,KAAKy2B,YAC5Bn/B,EAAOkmC,EAASlmC,KAAO,GAG7B,IAFA0I,KAAKs5B,OAAO74B,EAAQY,SAEZrB,KAAK3C,MAAMoD,EAAQe,SAAS,CAClC,IAAIg8B,EAAWx9B,KAAKy2B,YAEhBz2B,KAAK3C,MAAMoD,EAAQ+E,UACrBxF,KAAKwY,OAEAxY,KAAKg9B,aAAa,SAAYh9B,KAAK3C,MAAMoD,EAAQqF,UACpD9F,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAcwF,GAAWuB,qCAGjDta,KAAKy9B,YAAYD,KAEjBx9B,KAAKw7B,iBAAiB,UAAWziB,GAAW8C,qCAC5C2hB,EAAWx9B,KAAK09B,iBAAiBF,GAAU,IAG7ClmC,EAAK6H,KAAKq+B,GAGZx9B,KAAKgY,MAAM2lB,OACX39B,KAAKs5B,OAAO74B,EAAQe,QACpBxB,KAAK42B,WAAW4G,EAAU,kBAC1B,IAAI9G,EAAO,KACPkH,GAAkB,EAsBtB,OArBAtmC,EAAKqH,SAAQ,SAAAk/B,IAzOjB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAYvhC,MAA+D,6BAArBuhC,EAAYvhC,QAAyCuhC,EAAYC,aAAgD,cAAjCD,EAAYC,YAAYxhC,MAAyD,yBAAjCuhC,EAAYC,YAAYxhC,MAyO7MyhC,CAAeF,GAMa,yBAArBA,EAAYvhC,OACjBshC,GACF,EAAKrmB,MAAMsmB,EAAYnmC,MAAOqhB,GAAWM,+BAG9B,OAATqd,GACF,EAAKnf,MAAMsmB,EAAYnmC,MAAOqhB,GAAWE,4BAG3Cyd,EAAO,WACPkH,GAAkB,IAfL,aAATlH,GACF,EAAKnf,MAAMsmB,EAAYnmC,MAAOqhB,GAAWE,4BAG3Cyd,EAAO,SAcXzvB,EAAKyvB,KAAOA,GAAQ,WACb12B,KAAK42B,WAAW3vB,EAAM,mBA/NX,+CAkOpB,SAAkCA,EAAMw1B,GAGtC,GAFAz8B,KAAKs5B,OAAO74B,EAAQ8E,SAEhBvF,KAAKg5B,IAAIv4B,EAAQnB,UASnB,OARIU,KAAK3C,MAAMoD,EAAQ+D,YAAcxE,KAAK3C,MAAMoD,EAAQ4E,QACtD4B,EAAK62B,YAAc99B,KAAK09B,iBAAiB19B,KAAKy2B,cAE9CxvB,EAAK62B,YAAc99B,KAAKs7B,gBACxBt7B,KAAKu8B,aAGPt1B,EAAKpP,SAAU,EACRmI,KAAK42B,WAAW3vB,EAAM,4BAE7B,GAAIjH,KAAK3C,MAAMoD,EAAQsE,SAAW/E,KAAKg+B,UAAYh+B,KAAKg9B,aAAa,SAAWh9B,KAAKg9B,aAAa,gBAAkBP,EAAc,CAChI,IAAM38B,EAAQE,KAAK6H,MAAMtR,MACnB0nC,EAAa/hB,GAAkBpc,GACrC,MAAME,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOqhB,GAAW6C,6BAA8B9b,EAAOm+B,GAGrF,GAAIj+B,KAAK3C,MAAMoD,EAAQqE,OAAS9E,KAAK3C,MAAMoD,EAAQ+D,YAAcxE,KAAK3C,MAAMoD,EAAQ4E,SAAWrF,KAAKg9B,aAAa,UAG7G,OAFA/1B,EAAK62B,YAAc99B,KAAK09B,iBAAiB19B,KAAKy2B,aAC9CxvB,EAAKpP,SAAU,EACRmI,KAAK42B,WAAW3vB,EAAM,4BACxB,GAAIjH,KAAK3C,MAAMoD,EAAQmD,OAAS5D,KAAK3C,MAAMoD,EAAQY,SAAWrB,KAAKg9B,aAAa,cAAgBh9B,KAAKg9B,aAAa,SAAWh9B,KAAKg9B,aAAa,UAUpJ,MAPkB,4BAFlB/1B,EAAOjH,KAAKk+B,YAAYj3B,IAEf3K,OACP2K,EAAK3K,KAAO,oBACZ2K,EAAKpP,SAAU,SACRoP,EAAKk3B,YAGdl3B,EAAK3K,KAAO,UAAY2K,EAAK3K,KACtB2K,EAIb,MAAMjH,KAAK84B,eAxQO,2CA2QpB,SAA8B7xB,GAK5B,OAJAjH,KAAKwY,OACLxY,KAAKw7B,iBAAiB,WACtBv0B,EAAKo1B,eAAiBr8B,KAAKo+B,0BAC3Bp+B,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,0BAhRX,uCAmRpB,SAA0BA,GAIxB,OAHAjH,KAAKwY,OACLxY,KAAKq+B,mBAAmBp3B,GACxBA,EAAK3K,KAAO,mBACL2K,IAvRW,wCA0RpB,SAA2BA,GAIzB,OAHAjH,KAAKwY,OACLxY,KAAKs+B,oBAAoBr3B,GAAM,GAC/BA,EAAK3K,KAAO,oBACL2K,IA9RW,uCAiSpB,SAA0BA,GAGxB,OAFAjH,KAAKwY,OACLxY,KAAK27B,sBAAsB10B,GACpBjH,KAAK42B,WAAW3vB,EAAM,sBApSX,mCAuSpB,SAAsBA,GAAuB,IAAjBs3B,EAAiB,wDAc3C,GAbAt3B,EAAKwR,GAAKzY,KAAKw+B,+BAA+BD,GAAS,GACvDv+B,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KAAM+/B,EA3mBnBjB,GAFDA,EA6mB4Dr2B,EAAKwR,GAAG/gB,OAEjFsI,KAAKy6B,aAAa,KACpBxzB,EAAKivB,eAAiBl2B,KAAK+7B,oCAE3B90B,EAAKivB,eAAiB,KAGxBjvB,EAAKw3B,QAAU,GACfx3B,EAAKy3B,WAAa,GAClBz3B,EAAK03B,OAAS,GAEV3+B,KAAKg5B,IAAIv4B,EAAQ6E,UACnB,GACE2B,EAAKw3B,QAAQt/B,KAAKa,KAAK4+B,oCACfL,GAAWv+B,KAAKg5B,IAAIv4B,EAAQmB,QAGxC,GAAI5B,KAAKg9B,aAAa,UAAW,CAC/Bh9B,KAAKwY,OAEL,GACEvR,EAAK03B,OAAOx/B,KAAKa,KAAK4+B,mCACf5+B,KAAKg5B,IAAIv4B,EAAQmB,QAG5B,GAAI5B,KAAKg9B,aAAa,cAAe,CACnCh9B,KAAKwY,OAEL,GACEvR,EAAKy3B,WAAWv/B,KAAKa,KAAK4+B,mCACnB5+B,KAAKg5B,IAAIv4B,EAAQmB,QAG5BqF,EAAK3P,KAAO0I,KAAK6+B,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,MAhVE,uCAoVpB,WACE,IAAMj4B,EAAOjH,KAAKy2B,YASlB,OARAxvB,EAAKwR,GAAKzY,KAAKm/B,mCAEXn/B,KAAKy6B,aAAa,KACpBxzB,EAAKivB,eAAiBl2B,KAAKo/B,sCAE3Bn4B,EAAKivB,eAAiB,KAGjBl2B,KAAK42B,WAAW3vB,EAAM,sBA9VX,gCAiWpB,SAAmBA,GAEjB,OADAjH,KAAK27B,sBAAsB10B,GACpBjH,KAAK42B,WAAW3vB,EAAM,0BAnWX,gCAsWpB,SAAmBgP,GACJ,MAATA,GACFjW,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOqhB,GAAWuC,gCAxWxB,+BA4WpB,SAAkBrF,EAAM3C,EAAUwqB,GAC3BhlB,GAAcrc,IAAIwZ,IACvBjW,KAAKuX,MAAMjE,EAAUwqB,EAAc/kB,GAAWG,mBAAqBH,GAAWsC,uBAAwBpF,KA9WpF,2CAiXpB,SAA8BopB,EAASvB,GAErC,OADA99B,KAAKs/B,kBAAkBt/B,KAAK6H,MAAMtR,MAAOyJ,KAAK6H,MAAMnQ,MAAOomC,GACpD99B,KAAK47B,gBAAgByD,KAnXV,gCAsXpB,SAAmBp4B,GAYjB,OAXAA,EAAKwR,GAAKzY,KAAKw+B,+BAA8B,GAAO,GACpDx+B,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KA5rBd8+B,EA4rBkCr2B,EAAKwR,GAAG/gB,OAEvDsI,KAAKy6B,aAAa,KACpBxzB,EAAKivB,eAAiBl2B,KAAK+7B,oCAE3B90B,EAAKivB,eAAiB,KAGxBjvB,EAAKs4B,MAAQv/B,KAAKw/B,yBAAyB/+B,EAAQkC,IACnD3C,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,eAlYX,iCAqYpB,SAAoBA,EAAMw4B,GAwBxB,OAvBAz/B,KAAKw7B,iBAAiB,QACtBv0B,EAAKwR,GAAKzY,KAAKw+B,+BAA8B,GAAM,GACnDx+B,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KA5sBd8+B,EA4sBkCr2B,EAAKwR,GAAG/gB,OAEvDsI,KAAKy6B,aAAa,KACpBxzB,EAAKivB,eAAiBl2B,KAAK+7B,oCAE3B90B,EAAKivB,eAAiB,KAGxBjvB,EAAKy4B,UAAY,KAEb1/B,KAAK3C,MAAMoD,EAAQqB,SACrBmF,EAAKy4B,UAAY1/B,KAAKw/B,yBAAyB/+B,EAAQqB,QAGzDmF,EAAK04B,SAAW,KAEXF,IACHx4B,EAAK04B,SAAW3/B,KAAKw/B,yBAAyB/+B,EAAQkC,KAGxD3C,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,gBA7ZX,oCAgapB,WAA+C,IAAxB24B,EAAwB,wDACvC13B,EAAYlI,KAAK6H,MAAMnQ,MACvBuP,EAAOjH,KAAKy2B,YACZoJ,EAAW7/B,KAAK8/B,oBAChBC,EAAQ//B,KAAKq9B,qCAcnB,OAbAp2B,EAAKzI,KAAOuhC,EAAMvhC,KAClByI,EAAK44B,SAAWA,EAChB54B,EAAK+4B,MAAQD,EAAM1D,eAEfr8B,KAAK3C,MAAMoD,EAAQkC,KACrB3C,KAAKg5B,IAAIv4B,EAAQkC,IACjBsE,EAAKpP,QAAUmI,KAAKs7B,iBAEhBsE,GACF5/B,KAAKuX,MAAMrP,EAAW6Q,GAAWwB,yBAI9Bva,KAAK42B,WAAW3vB,EAAM,mBAlbX,+CAqbpB,WACE,IAAMo0B,EAAYr7B,KAAK6H,MAAM+kB,OACvB3lB,EAAOjH,KAAKy2B,YAClBxvB,EAAK6B,OAAS,GACd9I,KAAK6H,MAAM+kB,QAAS,EAEhB5sB,KAAKy6B,aAAa,MAAQz6B,KAAK3C,MAAMoD,EAAQ8uB,aAC/CvvB,KAAKwY,OAELxY,KAAK84B,aAGP,IAAImH,GAAkB,EAEtB,EAAG,CACD,IAAMC,EAAgBlgC,KAAKmgC,uBAAuBF,GAClDh5B,EAAK6B,OAAO3J,KAAK+gC,GAEbA,EAAcroC,UAChBooC,GAAkB,GAGfjgC,KAAKy6B,aAAa,MACrBz6B,KAAKs5B,OAAO74B,EAAQmB,cAEd5B,KAAKy6B,aAAa,MAI5B,OAFAz6B,KAAKogC,iBAAiB,KACtBpgC,KAAK6H,MAAM+kB,OAASyO,EACbr7B,KAAK42B,WAAW3vB,EAAM,8BAldX,iDAqdpB,WACE,IAAMA,EAAOjH,KAAKy2B,YACZ4E,EAAYr7B,KAAK6H,MAAM+kB,OAC7B3lB,EAAK6B,OAAS,GACd9I,KAAK6H,MAAM+kB,QAAS,EACpB5sB,KAAKogC,iBAAiB,KACtB,IAAMC,EAAwBrgC,KAAK6H,MAAMglB,mBAGzC,IAFA7sB,KAAK6H,MAAMglB,oBAAqB,GAExB7sB,KAAKy6B,aAAa,MACxBxzB,EAAK6B,OAAO3J,KAAKa,KAAKs7B,iBAEjBt7B,KAAKy6B,aAAa,MACrBz6B,KAAKs5B,OAAO74B,EAAQmB,OAOxB,OAHA5B,KAAK6H,MAAMglB,mBAAqBwT,EAChCrgC,KAAKogC,iBAAiB,KACtBpgC,KAAK6H,MAAM+kB,OAASyO,EACbr7B,KAAK42B,WAAW3vB,EAAM,gCAzeX,0DA4epB,WACE,IAAMA,EAAOjH,KAAKy2B,YACZ4E,EAAYr7B,KAAK6H,MAAM+kB,OAK7B,IAJA3lB,EAAK6B,OAAS,GACd9I,KAAK6H,MAAM+kB,QAAS,EACpB5sB,KAAKogC,iBAAiB,MAEdpgC,KAAKy6B,aAAa,MACxBxzB,EAAK6B,OAAO3J,KAAKa,KAAKsgC,wCAEjBtgC,KAAKy6B,aAAa,MACrBz6B,KAAKs5B,OAAO74B,EAAQmB,OAMxB,OAFA5B,KAAKogC,iBAAiB,KACtBpgC,KAAK6H,MAAM+kB,OAASyO,EACbr7B,KAAK42B,WAAW3vB,EAAM,gCA7fX,oCAggBpB,WACE,IAAMA,EAAOjH,KAAKy2B,YAIlB,GAHAz2B,KAAKw7B,iBAAiB,aACtBv0B,EAAKw3B,QAAU,GAEXz+B,KAAKg5B,IAAIv4B,EAAQ6E,UACnB,GACE2B,EAAKw3B,QAAQt/B,KAAKa,KAAK4+B,mCAChB5+B,KAAKg5B,IAAIv4B,EAAQmB,QAU5B,OAPAqF,EAAK3P,KAAO0I,KAAK6+B,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAETl/B,KAAK42B,WAAW3vB,EAAM,6BAlhBX,wCAqhBpB,WACE,OAAOjH,KAAK3C,MAAMoD,EAAQC,MAAQV,KAAK3C,MAAMoD,EAAQpF,QAAU2E,KAAKo5B,gBAAkBp5B,KAAK47B,iBAAgB,KAthBzF,wCAyhBpB,SAA2B30B,EAAMs5B,EAAUV,GAczC,OAbA54B,EAAKu5B,OAASD,EAEVvgC,KAAKygC,YAAYnkC,OAASmE,EAAQqB,OACpCmF,EAAKwR,GAAKzY,KAAK0gC,6BACfz5B,EAAKlI,IAAMiB,KAAKw/B,6BAEhBv4B,EAAKwR,GAAK,KACVxR,EAAKlI,IAAMiB,KAAKs7B,iBAGlBt7B,KAAKs5B,OAAO74B,EAAQU,UACpB8F,EAAK1Q,MAAQyJ,KAAKw/B,2BAClBv4B,EAAK44B,SAAWA,EACT7/B,KAAK42B,WAAW3vB,EAAM,uBAviBX,6CA0iBpB,SAAgCA,EAAMs5B,GAoBpC,OAnBAt5B,EAAKu5B,OAASD,EACdt5B,EAAKwR,GAAKzY,KAAK0gC,6BACf1gC,KAAKs5B,OAAO74B,EAAQU,UACpBnB,KAAKs5B,OAAO74B,EAAQU,UAEhBnB,KAAKy6B,aAAa,MAAQz6B,KAAK3C,MAAMoD,EAAQiB,SAC/CuF,EAAKquB,QAAS,EACdruB,EAAKowB,UAAW,EAChBpwB,EAAK1Q,MAAQyJ,KAAK2gC,6BAA6B3gC,KAAK+0B,YAAY9tB,EAAKvP,MAAOuP,EAAKW,IAAIlQ,UAErFuP,EAAKquB,QAAS,EAEVt1B,KAAKg5B,IAAIv4B,EAAQwB,YACnBgF,EAAKowB,UAAW,GAGlBpwB,EAAK1Q,MAAQyJ,KAAKw/B,4BAGbx/B,KAAK42B,WAAW3vB,EAAM,4BA9jBX,0CAikBpB,SAA6BA,GAqB3B,IApBAA,EAAK6B,OAAS,GACd7B,EAAKi1B,KAAO,KACZj1B,EAAKivB,eAAiB,KACtBjvB,EAAKjH,KAAO,KAERA,KAAKy6B,aAAa,OACpBxzB,EAAKivB,eAAiBl2B,KAAK+7B,qCAG7B/7B,KAAKs5B,OAAO74B,EAAQiB,QAEhB1B,KAAK3C,MAAMoD,EAAQ0E,SACrB8B,EAAKjH,KAAOA,KAAK4gC,4BAA2B,GAC5C35B,EAAKjH,KAAKxB,KAAO,KAEZwB,KAAK3C,MAAMoD,EAAQkB,SACtB3B,KAAKs5B,OAAO74B,EAAQmB,SAIhB5B,KAAK3C,MAAMoD,EAAQkB,UAAY3B,KAAK3C,MAAMoD,EAAQ4B,WACxD4E,EAAK6B,OAAO3J,KAAKa,KAAK4gC,4BAA2B,IAE5C5gC,KAAK3C,MAAMoD,EAAQkB,SACtB3B,KAAKs5B,OAAO74B,EAAQmB,OAUxB,OANI5B,KAAKg5B,IAAIv4B,EAAQ4B,YACnB4E,EAAKi1B,KAAOl8B,KAAK4gC,4BAA2B,IAG9C5gC,KAAKs5B,OAAO74B,EAAQkB,QACpBsF,EAAKm1B,WAAap8B,KAAKw/B,2BAChBx/B,KAAK42B,WAAW3vB,EAAM,4BApmBX,6CAumBpB,SAAgCA,EAAMs5B,GACpC,IAAMM,EAAY7gC,KAAKy2B,YAGvB,OAFAxvB,EAAKu5B,OAASD,EACdt5B,EAAK1Q,MAAQyJ,KAAK2gC,6BAA6BE,GACxC7gC,KAAK42B,WAAW3vB,EAAM,4BA3mBX,iCA8mBpB,YAMG,IALD63B,EAKC,EALDA,YACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEM7D,EAAYr7B,KAAK6H,MAAM+kB,OAC7B5sB,KAAK6H,MAAM+kB,QAAS,EACpB,IAKIkU,EACAC,EANE74B,EAAYlI,KAAKy2B,YACvBvuB,EAAU84B,eAAiB,GAC3B94B,EAAUU,WAAa,GACvBV,EAAU+4B,SAAW,GACrB/4B,EAAUg5B,cAAgB,GAG1B,IAAIC,GAAU,EAcd,IAZIpC,GAAc/+B,KAAK3C,MAAMoD,EAAQa,YACnCtB,KAAKs5B,OAAO74B,EAAQa,WACpBw/B,EAAWrgC,EAAQgB,UACnBs/B,GAAQ,IAER/gC,KAAKs5B,OAAO74B,EAAQY,QACpBy/B,EAAWrgC,EAAQe,OACnBu/B,GAAQ,GAGV74B,EAAU64B,MAAQA,GAEV/gC,KAAK3C,MAAMyjC,IAAW,CAC5B,IAAIP,GAAW,EACXa,EAAa,KACbC,EAAe,KACbp6B,EAAOjH,KAAKy2B,YAElB,GAAIwI,GAAcj/B,KAAKg9B,aAAa,SAAU,CAC5C,IAAMyD,EAAYzgC,KAAKygC,YAEnBA,EAAUnkC,OAASmE,EAAQqB,OAAS2+B,EAAUnkC,OAASmE,EAAQwB,WACjEjC,KAAKwY,OACL4oB,EAAaphC,KAAK6H,MAAMnQ,MACxBonC,GAAc,GAIlB,GAAIA,GAAe9+B,KAAKg9B,aAAa,UAAW,CAC9C,IAAMyD,EAAYzgC,KAAKygC,YAEnBA,EAAUnkC,OAASmE,EAAQqB,OAAS2+B,EAAUnkC,OAASmE,EAAQwB,WACjEjC,KAAKwY,OACL+nB,GAAW,GAIf,IAAMV,EAAW7/B,KAAK8/B,oBAEtB,GAAI9/B,KAAKg5B,IAAIv4B,EAAQO,UACD,MAAdogC,GACFphC,KAAK84B,WAAWsI,GAGdphC,KAAKg5B,IAAIv4B,EAAQO,WACf6+B,GACF7/B,KAAK84B,WAAW+G,EAASnoC,OAG3BwQ,EAAUg5B,cAAc/hC,KAAKa,KAAKshC,gCAAgCr6B,EAAMs5B,KAExEr4B,EAAU+4B,SAAS9hC,KAAKa,KAAKuhC,2BAA2Bt6B,EAAMs5B,EAAUV,SAErE,GAAI7/B,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAKy6B,aAAa,KACvC,MAAd2G,GACFphC,KAAK84B,WAAWsI,GAGdvB,GACF7/B,KAAK84B,WAAW+G,EAASnoC,OAG3BwQ,EAAU84B,eAAe7hC,KAAKa,KAAKwhC,gCAAgCv6B,EAAMs5B,QACpE,CACL,IAAI7J,EAAO,OAEX,GAAI12B,KAAKg9B,aAAa,QAAUh9B,KAAKg9B,aAAa,OAAQ,CACxD,IAAMyD,EAAYzgC,KAAKygC,YAEnBA,EAAUnkC,OAASmE,EAAQjC,MAAQiiC,EAAUnkC,OAASmE,EAAQpF,QAAUolC,EAAUnkC,OAASmE,EAAQC,MACrGg2B,EAAO12B,KAAK6H,MAAMtR,MAClByJ,KAAKwY,QAIT,IAAMipB,EAAgBzhC,KAAK0hC,4BAA4Bz6B,EAAMs5B,EAAUa,EAAYvB,EAAUnJ,EAAMsI,EAA6B,MAAhBE,EAAuBA,GAAgB6B,GAEjI,OAAlBU,GACFN,GAAU,EACVE,EAAerhC,KAAK6H,MAAM0L,cAE1BrL,EAAUU,WAAWzJ,KAAKsiC,GAI9BzhC,KAAK2hC,2BAEDN,GAAiBrhC,KAAK3C,MAAMoD,EAAQe,SAAYxB,KAAK3C,MAAMoD,EAAQgB,YACrEzB,KAAKuX,MAAM8pB,EAActoB,GAAWqC,mCAIxCpb,KAAKs5B,OAAOwH,GAER9B,IACF92B,EAAUi5B,QAAUA,GAGtB,IAAMjJ,EAAMl4B,KAAK42B,WAAW1uB,EAAW,wBAEvC,OADAlI,KAAK6H,MAAM+kB,OAASyO,EACbnD,IApuBW,yCAuuBpB,SAA4BjxB,EAAMs5B,EAAUa,EAAYvB,EAAUnJ,EAAMsI,EAAaE,GACnF,GAAIl/B,KAAKg5B,IAAIv4B,EAAQ4B,UAGnB,OAFuBrC,KAAK3C,MAAMoD,EAAQmB,QAAU5B,KAAK3C,MAAMoD,EAAQoB,OAAS7B,KAAK3C,MAAMoD,EAAQe,SAAWxB,KAAK3C,MAAMoD,EAAQgB,YAG1Hu9B,EAEOE,GACVl/B,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAcwF,GAAWoB,oBAF/Cna,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAcwF,GAAWqB,wBAK7CylB,GACF7/B,KAAKuX,MAAMsoB,EAASnoC,MAAOqhB,GAAWsB,iBAGjC,OAGJ2kB,GACHh/B,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAcwF,GAAWyC,sBAG/B,MAAd4lB,GACFphC,KAAK84B,WAAWsI,GAGdvB,GACF7/B,KAAKuX,MAAMsoB,EAASnoC,MAAOqhB,GAAW6B,gBAGxC3T,EAAKuyB,SAAWx5B,KAAKs7B,gBACdt7B,KAAK42B,WAAW3vB,EAAM,6BAE7BA,EAAKlI,IAAMiB,KAAK0gC,6BAChBz5B,EAAKu5B,OAASD,EACdt5B,EAAK26B,MAAsB,MAAdR,EACbn6B,EAAKyvB,KAAOA,EACZ,IAAIW,GAAW,EAmCf,OAjCIr3B,KAAKy6B,aAAa,MAAQz6B,KAAK3C,MAAMoD,EAAQiB,SAC/CuF,EAAKquB,QAAS,EAEI,MAAd8L,GACFphC,KAAK84B,WAAWsI,GAGdvB,GACF7/B,KAAK84B,WAAW+G,EAASnoC,OAG3BuP,EAAK1Q,MAAQyJ,KAAK2gC,6BAA6B3gC,KAAK+0B,YAAY9tB,EAAKvP,MAAOuP,EAAKW,IAAIlQ,QAExE,QAATg/B,GAA2B,QAATA,GACpB12B,KAAK6hC,4BAA4B56B,IAG9B+3B,GAAiC,gBAAlB/3B,EAAKlI,IAAIP,MAA0ByI,EAAK1Q,MAAMyJ,MAChEA,KAAKuX,MAAMtQ,EAAK1Q,MAAMyJ,KAAKtI,MAAOqhB,GAAW+B,gCAGlC,SAAT4b,GAAiB12B,KAAK84B,aAC1B7xB,EAAKquB,QAAS,EAEVt1B,KAAKg5B,IAAIv4B,EAAQwB,YACnBo1B,GAAW,GAGbpwB,EAAK1Q,MAAQyJ,KAAKw/B,2BAClBv4B,EAAK44B,SAAWA,GAGlB54B,EAAKowB,SAAWA,EACTr3B,KAAK42B,WAAW3vB,EAAM,wBA/yBb,yCAmzBpB,SAA4BgoB,GAC1B,IAAM6S,EAA+B,QAAlB7S,EAASyH,KAAiB,EAAI,EAC3Ch/B,EAAQu3B,EAASv3B,MACjBF,EAASy3B,EAAS14B,MAAMuS,OAAOtR,QAAUy3B,EAAS14B,MAAM2lC,KAAO,EAAI,GAErEjN,EAAS14B,MAAMyJ,MACjBA,KAAKuX,MAAM0X,EAAS14B,MAAMyJ,KAAKtI,MAAyB,QAAlBu3B,EAASyH,KAAiB3d,GAAWkB,0BAA4BlB,GAAW4B,2BAGhHnjB,IAAWsqC,IACS,QAAlB7S,EAASyH,KACX12B,KAAKuX,MAAM7f,EAAO+R,EAAcU,gBAEhCnK,KAAKuX,MAAM7f,EAAO+R,EAAcW,iBAId,QAAlB6kB,EAASyH,MAAkBzH,EAAS14B,MAAM2lC,MAC5Cl8B,KAAKuX,MAAM7f,EAAO+R,EAAcY,0BAr0BhB,qCAy0BpB,WACOrK,KAAKg5B,IAAIv4B,EAAQoB,OAAU7B,KAAKg5B,IAAIv4B,EAAQmB,QAAW5B,KAAK3C,MAAMoD,EAAQe,SAAYxB,KAAK3C,MAAMoD,EAAQgB,YAC5GzB,KAAK84B,eA30BW,8CA+0BpB,SAAiC7B,EAAU3jB,EAAUmF,GACnDwe,EAAWA,GAAYj3B,KAAK6H,MAAMnQ,MAClC4b,EAAWA,GAAYtT,KAAK6H,MAAMyL,SAGlC,IAFA,IAAIrM,EAAOwR,GAAMzY,KAAKw+B,+BAA8B,GAE7Cx+B,KAAKg5B,IAAIv4B,EAAQuB,MAAM,CAC5B,IAAM+/B,EAAQ/hC,KAAK+0B,YAAYkC,EAAU3jB,GACzCyuB,EAAMC,cAAgB/6B,EACtB86B,EAAMtpB,GAAKzY,KAAKw+B,+BAA8B,GAC9Cv3B,EAAOjH,KAAK42B,WAAWmL,EAAO,2BAGhC,OAAO96B,IA31BW,kCA81BpB,SAAqBgwB,EAAU3jB,EAAUmF,GACvC,IAAMxR,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAQxC,OAPArM,EAAKivB,eAAiB,KACtBjvB,EAAKwR,GAAKzY,KAAKm/B,iCAAiClI,EAAU3jB,EAAUmF,GAEhEzY,KAAKy6B,aAAa,OACpBxzB,EAAKivB,eAAiBl2B,KAAKo/B,uCAGtBp/B,KAAK42B,WAAW3vB,EAAM,2BAv2BX,iCA02BpB,WACE,IAAMA,EAAOjH,KAAKy2B,YAGlB,OAFAz2B,KAAKs5B,OAAO74B,EAAQqF,SACpBmB,EAAKuyB,SAAWx5B,KAAKiiC,uBACdjiC,KAAK42B,WAAW3vB,EAAM,0BA92BX,gCAi3BpB,WACE,IAAMA,EAAOjH,KAAKy2B,YAIlB,IAHAxvB,EAAK4N,MAAQ,GACb7U,KAAKs5B,OAAO74B,EAAQO,UAEbhB,KAAK6H,MAAMwL,IAAMrT,KAAKxI,SAAWwI,KAAK3C,MAAMoD,EAAQU,YACzD8F,EAAK4N,MAAM1V,KAAKa,KAAKs7B,kBACjBt7B,KAAK3C,MAAMoD,EAAQU,YACvBnB,KAAKs5B,OAAO74B,EAAQmB,OAItB,OADA5B,KAAKs5B,OAAO74B,EAAQU,UACbnB,KAAK42B,WAAW3vB,EAAM,yBA73BX,wCAg4BpB,SAA2Bi7B,GACzB,IAAI1jC,EAAO,KACP64B,GAAW,EACXgF,EAAiB,KACfp1B,EAAOjH,KAAKy2B,YACZ0L,EAAKniC,KAAKygC,YACV2B,EAASpiC,KAAK6H,MAAMvL,OAASmE,EAAQ0E,MAyB3C,OAvBIg9B,EAAG7lC,OAASmE,EAAQqB,OAASqgC,EAAG7lC,OAASmE,EAAQwB,UAC/CmgC,IAAWF,GACbliC,KAAKuX,MAAMtQ,EAAKvP,MAAOqhB,GAAWiC,sBAGpCxc,EAAOwB,KAAK47B,gBAAgBwG,GAExBpiC,KAAKg5B,IAAIv4B,EAAQwB,YACnBo1B,GAAW,EAEP+K,GACFpiC,KAAKuX,MAAMtQ,EAAKvP,MAAOqhB,GAAWgC,4BAItCshB,EAAiBr8B,KAAKw/B,4BAEtBnD,EAAiBr8B,KAAKs7B,gBAGxBr0B,EAAKzI,KAAOA,EACZyI,EAAKowB,SAAWA,EAChBpwB,EAAKo1B,eAAiBA,EACfr8B,KAAK42B,WAAW3vB,EAAM,uBA/5BX,gDAk6BpB,SAAmC3K,GACjC,IAAM2K,EAAOjH,KAAK+0B,YAAYz4B,EAAK5E,MAAO4E,EAAKsL,IAAIlQ,OAInD,OAHAuP,EAAKzI,KAAO,KACZyI,EAAKowB,UAAW,EAChBpwB,EAAKo1B,eAAiB//B,EACf0D,KAAK42B,WAAW3vB,EAAM,uBAv6BX,yCA06BpB,WAAyC,IAAb6B,EAAa,uDAAJ,GAC/BozB,EAAO,KACP/2B,EAAQ,KAWZ,IATInF,KAAK3C,MAAMoD,EAAQ0E,UACrBA,EAAQnF,KAAK4gC,4BAA2B,IAClCpiC,KAAO,KAERwB,KAAK3C,MAAMoD,EAAQkB,SACtB3B,KAAKs5B,OAAO74B,EAAQmB,SAIhB5B,KAAK3C,MAAMoD,EAAQkB,UAAY3B,KAAK3C,MAAMoD,EAAQ4B,WACxDyG,EAAO3J,KAAKa,KAAK4gC,4BAA2B,IAEvC5gC,KAAK3C,MAAMoD,EAAQkB,SACtB3B,KAAKs5B,OAAO74B,EAAQmB,OAQxB,OAJI5B,KAAKg5B,IAAIv4B,EAAQ4B,YACnB65B,EAAOl8B,KAAK4gC,4BAA2B,IAGlC,CACL93B,SACAozB,OACA/2B,WAt8BgB,uCA08BpB,SAA0B8xB,EAAU3jB,EAAUrM,EAAMwR,GAClD,OAAQA,EAAGja,MACT,IAAK,MACH,OAAOwB,KAAK42B,WAAW3vB,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,yBAE/B,IAAK,QACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,uBAE/B,IAAK,QACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,uBAE/B,IAAK,SACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,wBAE/B,IAAK,SACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,wBAE/B,IAAK,SACH,OAAOjH,KAAK42B,WAAW3vB,EAAM,wBAE/B,QAEE,OADAjH,KAAKqiC,mBAAmB5pB,EAAGja,MACpBwB,KAAKsiC,qBAAqBrL,EAAU3jB,EAAUmF,MAp+BvC,kCAw+BpB,WACE,IAGIujB,EACA1/B,EAJE26B,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBrM,EAAOjH,KAAKy2B,YAGd8L,GAAgB,EACdlC,EAAwBrgC,KAAK6H,MAAMglB,mBAEzC,OAAQ7sB,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQjC,KACX,OAAIwB,KAAKg9B,aAAa,aACbh9B,KAAKwiC,yBAGPxiC,KAAKyiC,0BAA0BxL,EAAU3jB,EAAUrM,EAAMjH,KAAK47B,mBAEvE,KAAKn7B,EAAQY,OACX,OAAOrB,KAAK6+B,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKz+B,EAAQa,UACX,OAAOtB,KAAK6+B,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKz+B,EAAQO,SAIX,OAHAhB,KAAK6H,MAAMglB,oBAAqB,EAChCvwB,EAAO0D,KAAK0iC,qBACZ1iC,KAAK6H,MAAMglB,mBAAqBwT,EACzB/jC,EAET,KAAKmE,EAAQ+C,WACX,GAAyB,MAArBxD,KAAK6H,MAAMtR,MAUb,OATA0Q,EAAKivB,eAAiBl2B,KAAK+7B,oCAC3B/7B,KAAKs5B,OAAO74B,EAAQiB,QACpBs6B,EAAMh8B,KAAKi8B,8BACXh1B,EAAK6B,OAASkzB,EAAIlzB,OAClB7B,EAAKi1B,KAAOF,EAAIE,KAChBj1B,EAAKjH,KAAOg8B,EAAI72B,MAChBnF,KAAKs5B,OAAO74B,EAAQkB,QACpB3B,KAAKs5B,OAAO74B,EAAQ0B,OACpB8E,EAAKm1B,WAAap8B,KAAKs7B,gBAChBt7B,KAAK42B,WAAW3vB,EAAM,0BAG/B,MAEF,KAAKxG,EAAQiB,OAGX,GAFA1B,KAAKwY,QAEAxY,KAAK3C,MAAMoD,EAAQkB,UAAY3B,KAAK3C,MAAMoD,EAAQ4B,UACrD,GAAIrC,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK3C,MAAMoD,EAAQ0E,OAAQ,CACzD,IAAMhJ,EAAQ6D,KAAKygC,YAAYnkC,KAC/BimC,EAAgBpmC,IAAUsE,EAAQwB,UAAY9F,IAAUsE,EAAQqB,WAEhEygC,GAAgB,EAIpB,GAAIA,EAAe,CAKjB,GAJAviC,KAAK6H,MAAMglB,oBAAqB,EAChCvwB,EAAO0D,KAAKs7B,gBACZt7B,KAAK6H,MAAMglB,mBAAqBwT,EAE5BrgC,KAAK6H,MAAMglB,sBAAwB7sB,KAAK3C,MAAMoD,EAAQmB,QAAU5B,KAAK3C,MAAMoD,EAAQkB,SAAW3B,KAAKygC,YAAYnkC,OAASmE,EAAQ0B,OAElI,OADAnC,KAAKs5B,OAAO74B,EAAQkB,QACbrF,EAEP0D,KAAKg5B,IAAIv4B,EAAQmB,OAiBrB,OAZEo6B,EADE1/B,EACI0D,KAAKi8B,4BAA4B,CAACj8B,KAAK2iC,mCAAmCrmC,KAE1E0D,KAAKi8B,8BAGbh1B,EAAK6B,OAASkzB,EAAIlzB,OAClB7B,EAAKi1B,KAAOF,EAAIE,KAChBj1B,EAAKjH,KAAOg8B,EAAI72B,MAChBnF,KAAKs5B,OAAO74B,EAAQkB,QACpB3B,KAAKs5B,OAAO74B,EAAQ0B,OACpB8E,EAAKm1B,WAAap8B,KAAKs7B,gBACvBr0B,EAAKivB,eAAiB,KACfl2B,KAAK42B,WAAW3vB,EAAM,0BAE/B,KAAKxG,EAAQpF,OACX,OAAO2E,KAAK40B,aAAa50B,KAAK6H,MAAMtR,MAAO,+BAE7C,KAAKkK,EAAQiF,MACb,KAAKjF,EAAQkF,OAGX,OAFAsB,EAAK1Q,MAAQyJ,KAAK3C,MAAMoD,EAAQiF,OAChC1F,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,gCAE/B,KAAKxG,EAAQiD,QACX,GAAyB,MAArB1D,KAAK6H,MAAMtR,MAAe,CAG5B,GAFAyJ,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQC,KACrB,OAAOV,KAAK4iC,oBAAoB5iC,KAAK6H,MAAMtR,MAAO,8BAA+B0Q,GAGnF,GAAIjH,KAAK3C,MAAMoD,EAAQE,QACrB,OAAOX,KAAK4iC,oBAAoB5iC,KAAK6H,MAAMtR,MAAO,8BAA+B0Q,GAGnF,MAAMjH,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOqhB,GAAW0C,8BAGhD,MAAMzb,KAAK84B,aAEb,KAAKr4B,EAAQC,IACX,OAAOV,KAAK40B,aAAa50B,KAAK6H,MAAMtR,MAAO,+BAE7C,KAAKkK,EAAQE,OACX,OAAOX,KAAK40B,aAAa50B,KAAK6H,MAAMtR,MAAO,+BAE7C,KAAKkK,EAAQsF,MAEX,OADA/F,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,sBAE/B,KAAKxG,EAAQgF,MAEX,OADAzF,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,6BAE/B,KAAKxG,EAAQ0E,MAEX,OADAnF,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,sBAE/B,KAAKxG,EAAQmD,KAEX,OADA5D,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,wBAE/B,QACE,GAAgC,WAA5BjH,KAAK6H,MAAMvL,KAAKzB,QAClB,OAAOmF,KAAK6iC,sBACP,GAAI7iC,KAAK6H,MAAMvL,KAAKzB,QAAS,CAClC,IAAMiF,EAAQE,KAAK6H,MAAMvL,KAAKwD,MAE9B,OADAE,KAAKwY,OACL,oDAA8BvR,EAAMnH,IAK1C,MAAME,KAAK84B,eApoCO,kCAuoCpB,WAME,IALA,IAAM7B,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACxBhX,EAAO0D,KAAKiiC,uBACZa,GAA4B,GAExB9iC,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAK3C,MAAMoD,EAAQyB,gBAAkBlC,KAAK+iC,sBAAsB,CACtG,IAAM97B,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAClC+jB,EAAWr3B,KAAKg5B,IAAIv4B,EAAQyB,aAClC4gC,EAA4BA,GAA6BzL,EACzDr3B,KAAKs5B,OAAO74B,EAAQO,WAEfq2B,GAAYr3B,KAAK3C,MAAMoD,EAAQU,WAClC8F,EAAK+7B,YAAc1mC,EACnB0D,KAAKwY,OACLlc,EAAO0D,KAAK42B,WAAW3vB,EAAM,yBAE7BA,EAAKg8B,WAAa3mC,EAClB2K,EAAKi8B,UAAYljC,KAAKs7B,gBACtBt7B,KAAKs5B,OAAO74B,EAAQU,UAEhB2hC,GACF77B,EAAKowB,SAAWA,EAChB/6B,EAAO0D,KAAK42B,WAAW3vB,EAAM,8BAE7B3K,EAAO0D,KAAK42B,WAAW3vB,EAAM,sBAKnC,OAAO3K,IArqCW,iCAwqCpB,WACE,IAAM2K,EAAOjH,KAAKy2B,YAElB,OAAIz2B,KAAKg5B,IAAIv4B,EAAQwB,WACnBgF,EAAKo1B,eAAiBr8B,KAAKmjC,sBACpBnjC,KAAK42B,WAAW3vB,EAAM,2BAEtBjH,KAAKojC,yBA/qCI,gDAmrCpB,WACE,IAAMC,EAAQrjC,KAAKmjC,sBAEnB,IAAKnjC,KAAK6H,MAAMglB,oBAAsB7sB,KAAKg5B,IAAIv4B,EAAQ0B,OAAQ,CAC7D,IAAM8E,EAAOjH,KAAK+0B,YAAYsO,EAAM3rC,MAAO2rC,EAAMz7B,IAAIlQ,OAMrD,OALAuP,EAAK6B,OAAS,CAAC9I,KAAK2iC,mCAAmCU,IACvDp8B,EAAKi1B,KAAO,KACZj1B,EAAKjH,KAAO,KACZiH,EAAKm1B,WAAap8B,KAAKs7B,gBACvBr0B,EAAKivB,eAAiB,KACfl2B,KAAK42B,WAAW3vB,EAAM,0BAG/B,OAAOo8B,IAhsCW,uCAmsCpB,WACE,IAAMp8B,EAAOjH,KAAKy2B,YAClBz2B,KAAKg5B,IAAIv4B,EAAQ6C,YACjB,IAAMhH,EAAO0D,KAAKsjC,qCAGlB,IAFAr8B,EAAK4N,MAAQ,CAACvY,GAEP0D,KAAKg5B,IAAIv4B,EAAQ6C,aACtB2D,EAAK4N,MAAM1V,KAAKa,KAAKsjC,sCAGvB,OAA6B,IAAtBr8B,EAAK4N,MAAMrd,OAAe8E,EAAO0D,KAAK42B,WAAW3vB,EAAM,gCA7sC5C,gCAgtCpB,WACE,IAAMA,EAAOjH,KAAKy2B,YAClBz2B,KAAKg5B,IAAIv4B,EAAQ2C,WACjB,IAAM9G,EAAO0D,KAAKujC,4BAGlB,IAFAt8B,EAAK4N,MAAQ,CAACvY,GAEP0D,KAAKg5B,IAAIv4B,EAAQ2C,YACtB6D,EAAK4N,MAAM1V,KAAKa,KAAKujC,6BAGvB,OAA6B,IAAtBt8B,EAAK4N,MAAMrd,OAAe8E,EAAO0D,KAAK42B,WAAW3vB,EAAM,yBA1tC5C,2BA6tCpB,WACE,IAAMo0B,EAAYr7B,KAAK6H,MAAM+kB,OAC7B5sB,KAAK6H,MAAM+kB,QAAS,EACpB,IAAMtwB,EAAO0D,KAAKwjC,qBAElB,OADAxjC,KAAK6H,MAAM+kB,OAASyO,EACb/+B,IAluCW,kDAquCpB,WACE,GAAI0D,KAAK6H,MAAMvL,OAASmE,EAAQjC,MAA6B,MAArBwB,KAAK6H,MAAMtR,MAAe,CAChE,IAAM0gC,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBrM,EAAOjH,KAAK47B,kBAClB,OAAO57B,KAAKsiC,qBAAqBrL,EAAU3jB,EAAUrM,GAErD,OAAOjH,KAAKs7B,kBA5uCI,qCAgvCpB,WACE,IAAMr0B,EAAOjH,KAAKy2B,YAElB,OADAxvB,EAAKo1B,eAAiBr8B,KAAKw/B,2BACpBx/B,KAAK42B,WAAW3vB,EAAM,oBAnvCX,gDAsvCpB,SAAmCw8B,GACjC,IAAM1D,EAAQ0D,EAAyBzjC,KAAK47B,kBAAoB57B,KAAKw+B,gCAOrE,OALIx+B,KAAK3C,MAAMoD,EAAQqB,SACrBi+B,EAAM1D,eAAiBr8B,KAAKo+B,0BAC5Bp+B,KAAKs8B,iBAAiByD,IAGjBA,IA9vCW,iCAiwCpB,SAAoB94B,GAGlB,OAFAA,EAAKxQ,WAAW4lC,eAAiBp1B,EAAKo1B,eACtCr8B,KAAKs8B,iBAAiBr1B,EAAKxQ,WAAYwQ,EAAKo1B,eAAex1B,IAAKI,EAAKo1B,eAAez0B,IAAIf,KACjFI,EAAKxQ,aApwCM,+BAuwCpB,WACE,IAAIopC,EAAW,KAef,OAbI7/B,KAAK3C,MAAMoD,EAAQiD,WACrBm8B,EAAW7/B,KAAKy2B,YAES,MAArBz2B,KAAK6H,MAAMtR,MACbspC,EAASnJ,KAAO,OAEhBmJ,EAASnJ,KAAO,QAGlB12B,KAAKwY,OACLxY,KAAK42B,WAAWiJ,EAAU,aAGrBA,IAvxCW,+BA0xCpB,SAAkB54B,EAAMy8B,GAAuC,WAAlBrN,EAAkB,wDAC7D,OAAIqN,EACK1jC,KAAK2jC,iCAAiC18B,GAAM,iEAA8BA,GAAM,EAAMovB,MAG/F,qDAA+BpvB,GAAM,EAAOovB,KA/xC1B,wCAkyCpB,SAA2BpvB,EAAM3K,GAAwB,IAAlB+5B,EAAkB,wDACvD,GAAIr2B,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAM+5B,EAAW77B,KAAKy2B,YADO,EAEez2B,KAAKm8B,uCAFpB,SAE5BN,EAASQ,eAFmB,KAEHp1B,EAAKw0B,UAFF,KAG7Bx0B,EAAKm1B,WAAaP,EAASQ,eAAiBr8B,KAAK42B,WAAWiF,EAAU,kBAAoB,KAG5F,8DAAiC50B,EAAM3K,EAAM+5B,KAzyC3B,4BA4yCpB,SAAethB,EAAS6uB,GACtB,GAAI5jC,KAAK6H,MAAMwkB,QAAUrsB,KAAK3C,MAAMoD,EAAQjC,OAA8B,cAArBwB,KAAK6H,MAAMtR,MAAuB,CACrF,IAAMkqC,EAAYzgC,KAAKygC,YAEvB,GAAIA,EAAUnkC,OAASmE,EAAQjC,MAAQjC,GAAUkkC,EAAUlqC,OAAQ,CACjE,IAAM0Q,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK6jC,mBAAmB58B,SAE5B,GAAIjH,KAAK8jC,oBAAsB9jC,KAAKg9B,aAAa,QAAS,CAC/D,IAAM/1B,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK+jC,yBAAyB98B,GAGvC,IAAMtP,EAAO,EAAH,gDAAwBod,EAAS6uB,GAM3C,YAJwBpkC,IAApBQ,KAAKk7B,YAA6Bl7B,KAAKgkC,iBAAiBrsC,KAC1DqI,KAAKk7B,WAAa,MAGbvjC,IAj0CW,sCAo0CpB,SAAyBsP,EAAMg9B,GAC7B,GAAkB,eAAdA,EAAK3nC,KACP,GAAkB,YAAd2nC,EAAKzlC,MACP,GAAIwB,KAAK3C,MAAMoD,EAAQ4E,SAAWrF,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK3C,MAAMoD,EAAQ+D,YAAcxE,KAAK3C,MAAMoD,EAAQqE,OAAS9E,KAAK3C,MAAMoD,EAAQ8E,SAC5I,OAAOvF,KAAK09B,iBAAiBz2B,QAE1B,GAAIjH,KAAK3C,MAAMoD,EAAQjC,MAAO,CACnC,GAAkB,cAAdylC,EAAKzlC,KACP,OAAOwB,KAAK6jC,mBAAmB58B,GAC1B,GAAkB,SAAdg9B,EAAKzlC,KACd,OAAOwB,KAAKq+B,mBAAmBp3B,GAC1B,GAAkB,WAAdg9B,EAAKzlC,KACd,OAAOwB,KAAKs+B,oBAAoBr3B,GAAM,GAK5C,mEAAsCA,EAAMg9B,KAr1C1B,0CAw1CpB,WACE,OAAOjkC,KAAKg9B,aAAa,SAAWh9B,KAAKg9B,aAAa,cAAgBh9B,KAAKg9B,aAAa,WAAah9B,KAAK8jC,oBAAsB9jC,KAAKg9B,aAAa,SAA3I,gDAAAh9B,MAAA,KAAAA,QAz1CW,sCA41CpB,WACE,QAAIA,KAAK3C,MAAMoD,EAAQjC,SAA+B,SAArBwB,KAAK6H,MAAMtR,OAAyC,cAArByJ,KAAK6H,MAAMtR,OAA8C,WAArByJ,KAAK6H,MAAMtR,OAAsByJ,KAAK8jC,oBAA2C,SAArB9jC,KAAK6H,MAAMtR,SAI3K,+DAj2CkB,0CAo2CpB,WACE,GAAIyJ,KAAK8jC,oBAAsB9jC,KAAKg9B,aAAa,QAAS,CACxD,IAAM/1B,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK+jC,yBAAyB98B,GAGvC,0EA32CkB,8BA82CpB,SAAiBg9B,EAAMhN,EAAU3jB,EAAU4jB,GAAqB,WAC9D,IAAKl3B,KAAK3C,MAAMoD,EAAQwB,UAAW,OAAOgiC,EAE1C,GAAIjkC,KAAK6H,MAAM6kB,uBAAwB,CACrC,IAAM9uB,EAASoC,KAAKkkC,UAAS,gEAA6BD,EAAMhN,EAAU3jB,MAE1E,OAAK1V,EAAOqJ,MAQRrJ,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WAC/BvmC,EAAOqJ,OARRrJ,EAAOvE,OACT,8DAAiC69B,EAAqBt5B,EAAOvE,OAGxD4qC,GAOXjkC,KAAKs5B,OAAO74B,EAAQwB,UACpB,IAAM4F,EAAQ7H,KAAK6H,MAAMu8B,QACnBC,EAAoBrkC,KAAK6H,MAAM2kB,UAC/BvlB,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GACxC,EAGItT,KAAKskC,gCAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,OAEF,EAAuBxkC,KAAKykC,wBAAwBF,GAApD,SAAKG,EAAL,KAAYhpC,EAAZ,KAEA,GAAI8oC,GAAU9oC,EAAQlE,OAAS,EAAG,CAChC,IAAMg1B,EAAY,EAAI6X,GAEtB,GAAI3oC,EAAQlE,OAAS,EAAG,CACtBwI,KAAK6H,MAAQA,EACb7H,KAAK6H,MAAM2kB,UAAYA,EAEvB,IAAK,IAAI3tB,EAAI,EAAGA,EAAInD,EAAQlE,OAAQqH,IAClC2tB,EAAUrtB,KAAKzD,EAAQmD,GAAGnH,OALN,MAWlBsI,KAAKskC,gCAFPC,EAToB,EASpBA,WACAC,EAVoB,EAUpBA,OAVoB,MAYHxkC,KAAKykC,wBAAwBF,GAZ1B,SAYrBG,EAZqB,KAYdhpC,EAZc,KAmBxB,GAJI8oC,GAAUE,EAAMltC,OAAS,GAC3BwI,KAAKuX,MAAM1P,EAAMnQ,MAAOqhB,GAAWC,2BAGjCwrB,GAA2B,IAAjBE,EAAMltC,OAAc,CAChCwI,KAAK6H,MAAQA,EACb7H,KAAK6H,MAAM2kB,UAAYA,EAAUxuB,OAAO0mC,EAAM,GAAGhtC,OAFjB,MAM5BsI,KAAKskC,gCAFPC,EAJ8B,EAI9BA,WACAC,EAL8B,EAK9BA,QAWN,OANAxkC,KAAKykC,wBAAwBF,GAAY,GACzCvkC,KAAK6H,MAAM2kB,UAAY6X,EACvBrkC,KAAKs5B,OAAO74B,EAAQqB,OACpBmF,EAAKvK,KAAOunC,EACZh9B,EAAKs9B,WAAaA,EAClBt9B,EAAK09B,UAAY3kC,KAAK2jC,iCAAiC18B,GAAM,kBAAM,EAAK29B,sBAAiBplC,OAAWA,MAC7FQ,KAAK42B,WAAW3vB,EAAM,2BAh7CX,2CAm7CpB,WACEjH,KAAK6H,MAAM4kB,0BAA0BttB,KAAKa,KAAK6H,MAAMnQ,OACrD,IAAM6sC,EAAavkC,KAAKy5B,0BAClB+K,GAAUxkC,KAAK3C,MAAMoD,EAAQqB,OAEnC,OADA9B,KAAK6H,MAAM4kB,0BAA0BzX,MAC9B,CACLuvB,aACAC,YA17CgB,qCA87CpB,SAAwBv9B,EAAM49B,GAI5B,IAJ6C,WACvCvrC,EAAQ,CAAC2N,GACT69B,EAAS,GAES,IAAjBxrC,EAAM9B,QAAc,CACzB,IAAMyP,EAAO3N,EAAM0b,MAED,4BAAd/N,EAAK3K,MACH2K,EAAKivB,iBAAmBjvB,EAAKm1B,WAC/Bp8B,KAAK+kC,sBAAsB99B,GAE3B69B,EAAO3lC,KAAK8H,GAGd3N,EAAM6F,KAAK8H,EAAK3P,OACO,0BAAd2P,EAAK3K,OACdhD,EAAM6F,KAAK8H,EAAKs9B,YAChBjrC,EAAM6F,KAAK8H,EAAK09B,YAIpB,OAAIE,GACFC,EAAOnmC,SAAQ,SAAAsI,GAAI,OAAI,EAAK89B,sBAAsB99B,MAC3C,CAAC69B,EAAQ,KAj+CtB,SAAmBE,EAAMtoC,GAIvB,IAHA,IAAMuoC,EAAQ,GACRC,EAAQ,GAELrmC,EAAI,EAAGA,EAAImmC,EAAKxtC,OAAQqH,KAC9BnC,EAAKsoC,EAAKnmC,GAAIA,EAAGmmC,GAAQC,EAAQC,GAAO/lC,KAAK6lC,EAAKnmC,IAGrD,MAAO,CAAComC,EAAOC,GA49CNC,CAAUL,GAAQ,SAAA79B,GAAI,OAAIA,EAAK6B,OAAOs8B,OAAM,SAAA/B,GAAK,OAAI,EAAKgC,aAAahC,GAAO,WAx9CnE,mCA29CpB,SAAsBp8B,GACpB,IAAIq+B,EAEJtlC,KAAKulC,iBAAiBt+B,EAAK6B,OAAsC,OAA7Bw8B,EAAcr+B,EAAK+tB,YAAiB,EAASsQ,EAAYE,eAAe,GAC5GxlC,KAAKgY,MAAMulB,MAAMkI,GACjB,+CAAkBx+B,GAAM,GAAO,GAC/BjH,KAAKgY,MAAM2lB,SAj+CO,8CAo+CpB,SAAiC12B,EAAMy+B,GACrC,IAAI9nC,EAUJ,OARkE,IAA9DoC,KAAK6H,MAAM4kB,0BAA0BkZ,QAAQ1+B,EAAKvP,QACpDsI,KAAK6H,MAAM4kB,0BAA0BttB,KAAKa,KAAK6H,MAAMnQ,OACrDkG,EAAS8nC,IACT1lC,KAAK6H,MAAM4kB,0BAA0BzX,OAErCpX,EAAS8nC,IAGJ9nC,IA/+CW,4BAk/CpB,SAAeqJ,EAAMgwB,EAAU3jB,GAQ7B,GAPArM,EAAO,EAAH,gDAAwBA,EAAMgwB,EAAU3jB,GAExCtT,KAAKg5B,IAAIv4B,EAAQwB,YACnBgF,EAAKowB,UAAW,EAChBr3B,KAAKs8B,iBAAiBr1B,IAGpBjH,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAM8jC,EAAe5lC,KAAK+0B,YAAYkC,EAAU3jB,GAGhD,OAFAsyB,EAAanvC,WAAawQ,EAC1B2+B,EAAavJ,eAAiBr8B,KAAKo+B,0BAC5Bp+B,KAAK42B,WAAWgP,EAAc,sBAGvC,OAAO3+B,IAjgDW,qCAogDpB,SAAwBA,GACJ,sBAAdA,EAAK3K,OAAqD,SAApB2K,EAAK+U,YAA6C,WAApB/U,EAAK+U,aAA0C,2BAAd/U,EAAK3K,MAAyD,SAApB2K,EAAKk3B,YAAuC,yBAAdl3B,EAAK3K,MAAuD,SAApB2K,EAAKk3B,YAI9N,2DAA8Bl3B,KAzgDZ,yBA4gDpB,SAAYA,GACV,IAAM4+B,EAAO,EAAH,6CAAqB5+B,GAM/B,MAJkB,2BAAd4+B,EAAKvpC,MAAmD,yBAAdupC,EAAKvpC,OACjDupC,EAAK1H,WAAa0H,EAAK1H,YAAc,SAGhC0H,IAnhDW,oCAshDpB,SAAuB5+B,GACrB,GAAIjH,KAAKg9B,aAAa,QAAS,CAC7B/1B,EAAKk3B,WAAa,OAClB,IAAM2H,EAAkB9lC,KAAKy2B,YAG7B,OAFAz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQY,SACrB4F,EAAK8B,WAAa/I,KAAK+lC,wBACvB/lC,KAAKgmC,gBAAgB/+B,GACd,MAEAjH,KAAKq+B,mBAAmByH,GAE5B,GAAI9lC,KAAKg9B,aAAa,UAAW,CACtC/1B,EAAKk3B,WAAa,OAClB,IAAM2H,EAAkB9lC,KAAKy2B,YAE7B,OADAz2B,KAAKwY,OACExY,KAAKs+B,oBAAoBwH,GAAiB,GAC5C,GAAI9lC,KAAKg9B,aAAa,aAAc,CACzC/1B,EAAKk3B,WAAa,OAClB,IAAM2H,EAAkB9lC,KAAKy2B,YAE7B,OADAz2B,KAAKwY,OACExY,KAAK6jC,mBAAmBiC,GAC1B,GAAI9lC,KAAK8jC,oBAAsB9jC,KAAKg9B,aAAa,QAAS,CAC/D/1B,EAAKk3B,WAAa,QAClB,IAAM2H,EAAkB9lC,KAAKy2B,YAE7B,OADAz2B,KAAKwY,OACExY,KAAK+jC,yBAAyB+B,GAErC,iEAAoC7+B,KAnjDpB,2BAujDpB,SAAcA,GACZ,0DAA2B4B,eAEvB7I,KAAKg9B,aAAa,SAAWh9B,KAAKygC,YAAYnkC,OAASmE,EAAQmD,QACjEqD,EAAKk3B,WAAa,OAClBn+B,KAAKwY,OACLxY,KAAKwY,QACE,KA9jDS,gDAokDpB,SAAmCvR,GACjC,IAAMoM,EAAMrT,KAAK6H,MAAMnQ,MACjBuuC,EAAe,EAAH,oEAA4Ch/B,GAM9D,OAJIg/B,GAAoC,SAApBh/B,EAAKk3B,YACvBn+B,KAAK84B,WAAWzlB,GAGX4yB,IA5kDW,0BA+kDpB,SAAah/B,EAAMi/B,EAAaC,GAC9B,gDAAmBl/B,EAAMi/B,EAAaC,GAElCnmC,KAAKy6B,aAAa,OACpBxzB,EAAKivB,eAAiBl2B,KAAK+7B,uCAnlDX,8BAulDpB,SAAiBjG,EAAWsQ,EAAQv+B,GAClC,IAAMwL,EAAMrT,KAAK6H,MAAMnQ,MAEvB,GAAIsI,KAAKg9B,aAAa,WAAY,CAChC,GAAIh9B,KAAKqmC,6BAA6BvQ,EAAWsQ,GAC/C,OAGFA,EAAO3G,SAAU,EAGnB,oDAAuB3J,EAAWsQ,EAAQv+B,GAEtCu+B,EAAO3G,UACW,kBAAhB2G,EAAO9pC,MAA4C,yBAAhB8pC,EAAO9pC,MAAmD,uBAAhB8pC,EAAO9pC,KACpF0D,KAAKuX,MAAMlE,EAAK0F,GAAWI,qBAClBitB,EAAO7vC,OAClByJ,KAAKuX,MAAM6uB,EAAO7vC,MAAMmB,MAAOqhB,GAAWK,iCAxmD5B,wBA6mDpB,SAAWnD,GACT,MAAgB,aAATA,GAAgC,kBAATA,IA9mDZ,0BAinDpB,WACE,IAAMA,EAAO,EAAH,4CACJqwB,EAAW,KAAOrwB,EAEnBjW,KAAKumC,WAAWtwB,IAAUjW,KAAK6H,MAAM+kB,QACxC5sB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcsD,kBAAmBu5B,GAG9DtmC,KAAKq4B,YAAY53B,EAAQjC,KAAM8nC,KAznDb,8BA4nDpB,SAAiBrvC,GACf,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEpD,OAAa,MAATpc,GAAyB,MAATuhB,EACXxY,KAAKwmC,SAAS/lC,EAAQa,UAAW,IAC/BtB,KAAK6H,MAAM+kB,QAAoB,KAAT31B,GAAwB,KAATA,EAErC+I,KAAK6H,MAAM+kB,QAAmB,KAAT31B,EACjB,KAATuhB,EACKxY,KAAKwmC,SAAS/lC,EAAQyB,YAAa,GAGrClC,KAAKwmC,SAAS/lC,EAAQwB,SAAU,GA3+D7C,SAAyBwkC,EAASjuB,GAChC,OAAmB,KAAZiuB,GAA2B,KAATjuB,EA2+DZkuB,CAAgBzvC,EAAMuhB,IAC/BxY,KAAK6H,MAAMwL,KAAO,EACXrT,KAAK2mC,gBAEZ,oDAA8B1vC,GAXvB+I,KAAKwmC,SAAS/lC,EAAQ+C,WAAY,KAloDzB,0BAipDpB,SAAayD,EAAM2/B,GAAW,WAC5B,OAAQ3/B,EAAK3K,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,OAAO,EAET,IAAK,mBAED,IAAMuqC,EAAO5/B,EAAK2B,WAAWpR,OAAS,EACtC,OAAOyP,EAAK2B,WAAWw8B,OAAM,SAACpb,EAAMnrB,GAClC,MAAqB,iBAAdmrB,EAAK1tB,OAA4BuC,IAAMgoC,GAAsB,kBAAd7c,EAAK1tB,OAA6B,EAAK+oC,aAAarb,MAIhH,IAAK,iBACH,OAAOhqB,KAAKqlC,aAAap+B,EAAK1Q,OAEhC,IAAK,gBACH,OAAOyJ,KAAKqlC,aAAap+B,EAAKuyB,UAEhC,IAAK,kBACH,OAAOvyB,EAAKO,SAAS49B,OAAM,SAAA0B,GAAO,OAAI,EAAKzB,aAAayB,MAE1D,IAAK,uBACH,MAAyB,MAAlB7/B,EAAK8/B,SAEd,IAAK,0BACL,IAAK,qBACH,OAAO/mC,KAAKqlC,aAAap+B,EAAKxQ,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQmwC,EAEV,QACE,OAAO,KAtrDO,0BA0rDpB,SAAa3/B,GAAqB,IAAfkwB,EAAe,wDAChC,MAAkB,uBAAdlwB,EAAK3K,KACP,gDAA0B0D,KAAKgnC,oBAAoB//B,GAAOkwB,GAE1D,gDAA0BlwB,EAAMkwB,KA9rDhB,8BAksDpB,SAAiB8P,EAAUC,EAAkB/P,GAC3C,IAAK,IAAIt4B,EAAI,EAAGA,EAAIooC,EAASzvC,OAAQqH,IAAK,CACxC,IAAMolC,EAAOgD,EAASpoC,GAEsB,wBAA/B,MAARolC,OAAe,EAASA,EAAK3nC,QAChC2qC,EAASpoC,GAAKmB,KAAKgnC,oBAAoB/C,IAI3C,2DAA8BgD,EAAUC,EAAkB/P,KA3sDxC,8BA8sDpB,SAAiB8P,EAAUE,GACzB,IAAK,IAAItoC,EAAI,EAAGA,EAAIooC,EAASzvC,OAAQqH,IAAK,CACxC,IAAIuoC,EAEEnD,EAAOgD,EAASpoC,IAElBolC,GAAsB,uBAAdA,EAAK3nC,MAAiE,OAA7B8qC,EAAcnD,EAAKjP,QAAkBoS,EAAY5R,iBAAmByR,EAASzvC,OAAS,IAAM2vC,GAC/InnC,KAAKuX,MAAM0sB,EAAK5H,eAAe3kC,MAAOqhB,GAAWoC,mBAIrD,OAAO8rB,IAztDW,4BA4tDpB,SAAeI,EAAOC,EAAcC,EAASrQ,GAC3C,IAAMjwB,EAAO,EAAH,gDAAwBogC,EAAOC,EAAcC,EAASrQ,GAMhE,OAJIoQ,IAAiBtnC,KAAK6H,MAAM6kB,wBAC9B1sB,KAAKwnC,iBAAiBvgC,EAAKO,UAGtBP,IAnuDW,uBAsuDpB,SAAUg9B,GACR,GAAkB,uBAAdA,EAAK3nC,KAA+B,8BADvB9D,EACuB,iCADvBA,EACuB,kBACtC,gEAAuByrC,GAAvB,OAAgCzrC,OAxuDhB,gCA4uDpB,SAAmByO,GAKjB,OAJIjH,KAAK3C,MAAMoD,EAAQqB,SACrBmF,EAAKo1B,eAAiBr8B,KAAKo+B,2BAG7B,sDAAgCn3B,KAjvDd,uCAovDpB,SAA0BA,GAKxB,OAJIjH,KAAK3C,MAAMoD,EAAQqB,SACrBmF,EAAKo1B,eAAiBr8B,KAAKo+B,2BAG7B,6DAAuCn3B,KAzvDrB,2BA4vDpB,WACE,OAAOjH,KAAKy6B,aAAa,MAAlB,iCAAAz6B,MAAA,KAAAA,QA7vDW,6BAgwDpB,WACE,OAAOA,KAAK3C,MAAMoD,EAAQqB,QAAnB,mCAAA9B,MAAA,KAAAA,QAjwDW,oCAowDpB,SAAuBs1B,GACrB,OAAQt1B,KAAK3C,MAAMoD,EAAQqB,QAApB,0DAA2DwzB,KArwDhD,6BAwwDpB,SAAgBQ,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,GAatE,GAZIV,EAAOuK,UACT7/B,KAAK84B,WAAWxD,EAAOuK,SAASnoC,cAG3B49B,EAAOuK,SAEV7/B,KAAKy6B,aAAa,OACpBnF,EAAOY,eAAiBl2B,KAAK+7B,qCAG/B,mDAAsBjG,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,GAE1EV,EAAOxsB,QAAUitB,EAAe,CAClC,IAAMjtB,EAASwsB,EAAOxsB,OAElBA,EAAOtR,OAAS,GAAKwI,KAAKynC,YAAY3+B,EAAO,KAC/C9I,KAAKuX,MAAM+d,EAAO59B,MAAOqhB,GAAW+B,mCAEjC,GAAoB,qBAAhBwa,EAAOh5B,MAA+By5B,GAAiBT,EAAO/+B,MAAMuS,OAAQ,CACrF,IAAMA,EAASwsB,EAAO/+B,MAAMuS,OAExBA,EAAOtR,OAAS,GAAKwI,KAAKynC,YAAY3+B,EAAO,KAC/C9I,KAAKuX,MAAM+d,EAAO59B,MAAOqhB,GAAW+B,iCA/xDtB,oCAoyDpB,SAAuBgb,EAAWR,EAAQhF,EAAaD,GACjDiF,EAAOuK,UACT7/B,KAAK84B,WAAWxD,EAAOuK,SAASnoC,cAG3B49B,EAAOuK,SAEV7/B,KAAKy6B,aAAa,OACpBnF,EAAOY,eAAiBl2B,KAAK+7B,qCAG/B,0DAA6BjG,EAAWR,EAAQhF,EAAaD,KA/yD3C,6BAkzDpB,SAAgBppB,GAOd,GANA,mDAAsBA,GAElBA,EAAKotB,YAAcr0B,KAAKy6B,aAAa,OACvCxzB,EAAKygC,oBAAsB1nC,KAAKo/B,uCAG9Bp/B,KAAKg9B,aAAa,cAAe,CACnCh9B,KAAKwY,OACL,IAAMmvB,EAAc1gC,EAAKy3B,WAAa,GAEtC,EAAG,CACD,IAAMz3B,EAAOjH,KAAKy2B,YAClBxvB,EAAKwR,GAAKzY,KAAKw+B,+BAA8B,GAEzCx+B,KAAKy6B,aAAa,KACpBxzB,EAAKivB,eAAiBl2B,KAAKo/B,sCAE3Bn4B,EAAKivB,eAAiB,KAGxByR,EAAYxoC,KAAKa,KAAK42B,WAAW3vB,EAAM,0BAChCjH,KAAKg5B,IAAIv4B,EAAQmB,WAx0DV,qCA40DpB,SAAwB0zB,GACtB,2DAA8BA,GAC9B,IAAMxsB,EAAS9I,KAAK4nC,6BAA6BtS,GAEjD,GAAIxsB,EAAOtR,OAAS,EAAG,CACrB,IAAM6rC,EAAQv6B,EAAO,GAEjB9I,KAAKynC,YAAYpE,IAA0B,QAAhB/N,EAAOoB,KACpC12B,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAWkB,2BAC1Bja,KAAKynC,YAAYpE,IAC1BrjC,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAW4B,8BAt1DrB,+BA21DpB,SAAkB1T,EAAM4gC,GACtB,IAAMhI,EAAW7/B,KAAK8/B,oBAChB/gC,EAAM,EAAH,mDAA2BkI,EAAM4gC,GAE1C,OADA5gC,EAAK44B,SAAWA,EACT9gC,IA/1DW,+BAk2DpB,SAAkBirB,EAAMiN,EAAU3jB,EAAUgd,EAAaD,EAASyG,EAAWC,EAAYG,GAMvF,IAAIhB,EALAlM,EAAK6V,UACP7/B,KAAK84B,WAAW9O,EAAK6V,SAASnoC,cAGzBsyB,EAAK6V,SAGR7/B,KAAKy6B,aAAa,OAAS1D,IAC7Bb,EAAiBl2B,KAAK+7B,oCACjB/7B,KAAK3C,MAAMoD,EAAQiB,SAAS1B,KAAK84B,cAGxC,qDAAwB9O,EAAMiN,EAAU3jB,EAAUgd,EAAaD,EAASyG,EAAWC,EAAYG,GAE3FhB,KACDlM,EAAKzzB,OAASyzB,GAAMkM,eAAiBA,KAl3DtB,0CAs3DpB,SAA6BmN,GAwB3B,OAvBIrjC,KAAKg5B,IAAIv4B,EAAQwB,YACA,eAAfohC,EAAM/mC,MACR0D,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAW2B,wBAGjC1a,KAAKynC,YAAYpE,IACnBrjC,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAWgC,2BAGrCsoB,EAAMhM,UAAW,GAGfr3B,KAAK3C,MAAMoD,EAAQqB,OACrBuhC,EAAMhH,eAAiBr8B,KAAKo+B,0BACnBp+B,KAAKynC,YAAYpE,IAC1BrjC,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAW8B,6BAGjC7a,KAAK3C,MAAMoD,EAAQkC,KAAO3C,KAAKynC,YAAYpE,IAC7CrjC,KAAKuX,MAAM8rB,EAAM3rC,MAAOqhB,GAAWkC,oBAGrCjb,KAAKs8B,iBAAiB+G,GACfA,IA94DW,+BAi5DpB,SAAkBpM,EAAU3jB,EAAUw0B,GACpC,IAAM7gC,EAAO,EAAH,mDAA2BgwB,EAAU3jB,EAAUw0B,GAMzD,MAJkB,sBAAd7gC,EAAK3K,MAAgC2K,EAAKo1B,gBAAkBp1B,EAAKs4B,MAAM7nC,MAAQuP,EAAKo1B,eAAe3kC,OACrGsI,KAAKuX,MAAMtQ,EAAKo1B,eAAe3kC,MAAOqhB,GAAWmC,uBAG5CjU,IAx5DW,sCA25DpB,SAAyBA,GACvB,OAAK8U,GAAkB9U,GAIhBgV,GAAqBjc,KAAK6H,OAH/B,4DAAsCZ,KA75DtB,uCAm6DpB,SAA0BA,EAAM8gC,EAAWzrC,EAAM0rC,GAC/CD,EAAUE,MAAQlsB,GAAkB9U,GAAQjH,KAAKw+B,+BAA8B,GAAM,GAAQx+B,KAAK47B,kBAClG57B,KAAKkoC,UAAUH,EAAUE,MAAOD,EAzuEf1K,GA0uEjBr2B,EAAK8B,WAAW5J,KAAKa,KAAK42B,WAAWmR,EAAWzrC,MAt6D9B,8CAy6DpB,SAAiC2K,GAC/BA,EAAK+U,WAAa,QAClB,IAAI0a,EAAO,KAQX,GANI12B,KAAK3C,MAAMoD,EAAQqF,SACrB4wB,EAAO,SACE12B,KAAKg9B,aAAa,UAC3BtG,EAAO,QAGLA,EAAM,CACR,IAAMyL,EAAKniC,KAAKygC,YAEH,SAAT/J,GAAmByL,EAAG7lC,OAASmE,EAAQmD,MACzC5D,KAAK84B,WAAWqJ,EAAGzqC,QAGjBukB,GAAqBkmB,IAAOA,EAAG7lC,OAASmE,EAAQY,QAAU8gC,EAAG7lC,OAASmE,EAAQmD,QAChF5D,KAAKwY,OACLvR,EAAK+U,WAAa0a,GAItB,2EAA8CzvB,KAh8D5B,kCAm8DpB,SAAqBA,GACnB,IAAM8gC,EAAY/nC,KAAKy2B,YACjB0R,EAAqBnoC,KAAK3C,MAAMoD,EAAQpF,QACxC+sC,EAAapoC,KAAKqoC,wBACpBC,EAAoB,KAEA,eAApBF,EAAW9rC,OACW,SAApB8rC,EAAW5pC,KACb8pC,EAAoB,OACS,WAApBF,EAAW5pC,OACpB8pC,EAAoB,WAIxB,IAAI1B,GAAY,EAEhB,GAAI5mC,KAAKg9B,aAAa,QAAUh9B,KAAKuoC,sBAAsB,MAAO,CAChE,IAAMC,EAAWxoC,KAAK47B,iBAAgB,GAEZ,OAAtB0M,GAA+BtoC,KAAK3C,MAAMoD,EAAQjC,OAAUwB,KAAK6H,MAAMvL,KAAKzB,SAK9EktC,EAAUU,SAAWL,EACrBL,EAAU/rB,WAAa,KACvB+rB,EAAUE,MAAQjoC,KAAK47B,oBANvBmM,EAAUU,SAAWD,EACrBT,EAAU/rB,WAAassB,EACvBP,EAAUE,MAAQO,EAASE,gBAMxB,GAA0B,OAAtBJ,IAA+BtoC,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK6H,MAAMvL,KAAKzB,SACpFktC,EAAUU,SAAWzoC,KAAK47B,iBAAgB,GAC1CmM,EAAU/rB,WAAassB,EAEnBtoC,KAAK68B,cAAc,MACrBkL,EAAUE,MAAQjoC,KAAK47B,mBAEvBgL,GAAY,EACZmB,EAAUE,MAAQF,EAAUU,SAASC,eAElC,CACL,GAAIP,EACF,MAAMnoC,KAAKuX,MAAMwwB,EAAUrwC,MAAO+R,EAAc0C,sBAAuBi8B,EAAW7xC,OAGpFqwC,GAAY,EACZmB,EAAUU,SAAWL,EACrBL,EAAU/rB,WAAa,KACvB+rB,EAAUE,MAAQF,EAAUU,SAASC,UAGvC,IAAMC,EAAmB5sB,GAAkB9U,GACrC2hC,EAAwB7sB,GAAkBgsB,GAE5CY,GAAoBC,GACtB5oC,KAAKuX,MAAMwwB,EAAUrwC,MAAOqhB,GAAWmB,sCAGrCyuB,GAAoBC,IACtB5oC,KAAKs/B,kBAAkByI,EAAUE,MAAMzpC,KAAMupC,EAAUE,MAAMvwC,OAAO,IAGlEkvC,GAAc+B,GAAqBC,GACrC5oC,KAAK6oC,kBAAkBd,EAAUE,MAAMzpC,KAAMupC,EAAUrwC,OAAO,GAAM,GAGtEsI,KAAKkoC,UAAUH,EAAUE,MAAO,mBAv0Ef3K,GAw0EjBr2B,EAAK8B,WAAW5J,KAAKa,KAAK42B,WAAWmR,EAAW,sBApgE9B,8BAugEpB,WACE,OAAQ/nC,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQ0E,MACX,OAAOnF,KAAK47B,iBAAgB,GAE9B,QACE,+DA7gEc,iCAihEpB,SAAoB30B,EAAM6hC,GACxB,IAAMpS,EAAOzvB,EAAKyvB,KAEL,QAATA,GAA2B,QAATA,GAAkB12B,KAAKy6B,aAAa,OACxDxzB,EAAKivB,eAAiBl2B,KAAK+7B,qCAG7B,uDAA0B90B,EAAM6hC,KAxhEd,wBA2hEpB,SAAWjD,EAAMnP,GACf,8CAAiBmP,EAAMnP,GAEnB12B,KAAK3C,MAAMoD,EAAQqB,SACrB+jC,EAAKptB,GAAG4jB,eAAiBr8B,KAAKo+B,0BAC9Bp+B,KAAKs8B,iBAAiBuJ,EAAKptB,OAhiEX,+CAoiEpB,SAAkCxR,EAAM/H,GACtC,GAAIc,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAMu+B,EAAwBrgC,KAAK6H,MAAMglB,mBACzC7sB,KAAK6H,MAAMglB,oBAAqB,EAChC5lB,EAAKm1B,WAAap8B,KAAKo+B,0BACvBp+B,KAAK6H,MAAMglB,mBAAqBwT,EAGlC,4EAA+Cp5B,EAAM/H,KA5iEnC,mCA+iEpB,WACE,OAAOc,KAAK3C,MAAMoD,EAAQqB,QAAnB,yCAAA9B,MAAA,KAAAA,QAhjEW,8BAmjEpB,SAAiBk3B,EAAqB6R,GAAgB,IAChDC,EAGA/Q,EAJgD,OAGhDpwB,EAAQ,KAGZ,GAAI7H,KAAKoJ,UAAU,SAAWpJ,KAAK3C,MAAMoD,EAAQ8uB,cAAgBvvB,KAAKy6B,aAAa,MAAO,CAGxF,GAFA5yB,EAAQ7H,KAAK6H,MAAMu8B,UACnBnM,EAAMj4B,KAAKkkC,UAAS,gEAA6BhN,EAAqB6R,KAAiBlhC,IAC9ExO,MAAO,OAAO4+B,EAAIhxB,KAC3B,IACE8N,EACE/U,KAAK6H,MADPkN,QAEI6lB,EAAa7lB,EAAQA,EAAQvd,OAAS,GAExCojC,IAAe/lB,EAAMqa,OACvBna,EAAQvd,QAAU,EACTojC,IAAe/lB,EAAMua,SAC9Bra,EAAQvd,QAAU,GAItB,GAAoB,OAAfwxC,EAAO/Q,IAAgB+Q,EAAK3vC,OAAS2G,KAAKy6B,aAAa,KAAM,CAChE,IAAIwO,EAAOC,EAGPhT,EADJruB,EAAQA,GAAS7H,KAAK6H,MAAMu8B,QAE5B,IAAMjiC,EAAQnC,KAAKkkC,UAAS,SAAAiF,GAC1B,IAAIC,EAEJlT,EAAiB,EAAK6F,oCACtB,IAAMsN,EAAkB,EAAK1F,iCAAiCzN,GAAgB,WAC5E,IAAMt4B,EAAS,EAAH,4CAA0Bs5B,EAAqB6R,GAE3D,OADA,EAAKO,2BAA2B1rC,EAAQs4B,GACjCt4B,KAGoB,4BAAzByrC,EAAgB/sC,MAAyF,OAAlD8sC,EAAwBC,EAAgBrU,QAAkBoU,EAAsB5T,eACzI2T,IAGF,IAAMlF,EAAO,EAAKsF,8BAA8BF,GAGhD,OAFApF,EAAK/N,eAAiBA,EACtB,EAAKoT,2BAA2BrF,EAAM/N,GAC/BmT,IACNxhC,GACCwhC,EAAkB,KAEtB,GAAIlnC,EAAM8E,MAAgE,4BAAxDjH,KAAKupC,8BAA8BpnC,EAAM8E,MAAM3K,KAAoC,CACnG,IAAK6F,EAAM9I,QAAU8I,EAAMqnC,QAKzB,OAJIrnC,EAAM8E,KAAKwiC,OACbzpC,KAAKuX,MAAM2e,EAAex+B,MAAOqhB,GAAW4C,iDAGvCxZ,EAAM8E,KAGfoiC,EAAkBlnC,EAAM8E,KAG1B,GAAqB,OAAhBgiC,EAAQhR,IAAgBgR,EAAMhiC,KAEjC,OADAjH,KAAK6H,MAAQowB,EAAIkM,UACVlM,EAAIhxB,KAGb,GAAIoiC,EAEF,OADArpC,KAAK6H,MAAQ1F,EAAMgiC,UACZkF,EAGT,GAAqB,OAAhBH,EAAQjR,IAAgBiR,EAAMQ,OAAQ,MAAMzR,EAAI5+B,MACrD,GAAI8I,EAAMunC,OAAQ,MAAMvnC,EAAM9I,MAC9B,MAAM2G,KAAKuX,MAAM2e,EAAex+B,MAAOqhB,GAAW2C,mCAGpD,2DAA8Bwb,EAAqB6R,KA9nEjC,wBAioEpB,SAAW9hC,GAAM,WACf,GAAIjH,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAMlE,EAASoC,KAAKkkC,UAAS,WAC3B,IAAM7D,EAAwB,EAAKx4B,MAAMglB,mBACzC,EAAKhlB,MAAMglB,oBAAqB,EAChC,IAAMgP,EAAW,EAAKpF,YAHW,EAIW,EAAK0F,uCAJhB,SAQjC,OAJCN,EAASQ,eAJuB,KAIPp1B,EAAKw0B,UAJE,KAKjC,EAAK5zB,MAAMglB,mBAAqBwT,EAC5B,EAAK0C,sBAAsB,EAAKjK,aAC/B,EAAKz7B,MAAMoD,EAAQ0B,QAAQ,EAAK22B,aAC9B+C,KAET,GAAIj+B,EAAO8rC,OAAQ,OAAO,KACtB9rC,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WACtCl9B,EAAKm1B,WAAax+B,EAAOqJ,KAAKo1B,eAAiBr8B,KAAK42B,WAAWh5B,EAAOqJ,KAAM,kBAAoB,KAGlG,qDAAwBA,KAlpEN,8BAqpEpB,WACE,OAAOjH,KAAK3C,MAAMoD,EAAQqB,QAAnB,oCAAA9B,MAAA,KAAAA,QAtpEW,wCAypEpB,SAA2BiH,EAAM6B,IACmC,IAA9D9I,KAAK6H,MAAM4kB,0BAA0BkZ,QAAQ1+B,EAAKvP,OACpDuP,EAAK6B,OAASA,EAEd,8DAAiC7B,EAAM6B,KA7pEvB,yBAiqEpB,SAAY7B,EAAM0iC,EAAiBC,GACjC,IAAIA,IAAiF,IAA9D5pC,KAAK6H,MAAM4kB,0BAA0BkZ,QAAQ1+B,EAAKvP,OAAzE,CAIA,IAAK,IAAImH,EAAI,EAAGA,EAAIoI,EAAK6B,OAAOtR,OAAQqH,IAClCmB,KAAKynC,YAAYxgC,EAAK6B,OAAOjK,KAAOA,EAAI,GAC1CmB,KAAKuX,MAAMtQ,EAAK6B,OAAOjK,GAAGnH,MAAOqhB,GAAWiC,sBAIhD,uDAA4BnS,cA5qEV,gDA+qEpB,SAAmCghC,GACjC,6EAAgDA,IAAkE,IAApD7pC,KAAK6H,MAAM2kB,UAAUmZ,QAAQ3lC,KAAK6H,MAAMnQ,UAhrEpF,6BAmrEpB,SAAgBggC,EAAMT,EAAU3jB,EAAUqkB,GAAS,WACjD,GAAkB,eAAdD,EAAKp7B,MAAuC,UAAdo7B,EAAKl5B,OAAgE,IAA5CwB,KAAK6H,MAAM2kB,UAAUmZ,QAAQ1O,GAAkB,CACxGj3B,KAAKwY,OACL,IAAMvR,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GACxCrM,EAAKqwB,OAASI,EACdzwB,EAAK4B,UAAY7I,KAAK8pC,6BAA6BrpC,EAAQkB,QAAQ,GACnE+1B,EAAO13B,KAAK42B,WAAW3vB,EAAM,uBACxB,GAAkB,eAAdywB,EAAKp7B,MAAuC,UAAdo7B,EAAKl5B,MAAoBwB,KAAKy6B,aAAa,KAAM,CACxF,IAAM5yB,EAAQ7H,KAAK6H,MAAMu8B,QACnBjiC,EAAQnC,KAAKkkC,UAAS,SAAAiF,GAAK,OAAI,EAAKY,kCAAkC9S,EAAU3jB,IAAa61B,MAASthC,GAC5G,IAAK1F,EAAM9I,QAAU8I,EAAMqnC,QAAS,OAAOrnC,EAAM8E,KACjD,IAAMrJ,EAASoC,KAAKkkC,UAAS,+DAA4BxM,EAAMT,EAAU3jB,EAAUqkB,KAAU9vB,GAC7F,GAAIjK,EAAOqJ,OAASrJ,EAAOvE,MAAO,OAAOuE,EAAOqJ,KAEhD,GAAI9E,EAAM8E,KAER,OADAjH,KAAK6H,MAAQ1F,EAAMgiC,UACZhiC,EAAM8E,KAGf,GAAIrJ,EAAOqJ,KAET,OADAjH,KAAK6H,MAAQjK,EAAOumC,UACbvmC,EAAOqJ,KAGhB,MAAM9E,EAAM9I,OAASuE,EAAOvE,MAG9B,0DAA6Bq+B,EAAMT,EAAU3jB,EAAUqkB,KA9sErC,4BAitEpB,SAAeD,EAAMT,EAAU3jB,EAAUqkB,EAASqS,GAAgB,WAChE,GAAIhqC,KAAK3C,MAAMoD,EAAQyB,cAAgBlC,KAAKiqC,sBAAuB,CAGjE,GAFAD,EAAepS,qBAAsB,EAEjCD,EAEF,OADAqS,EAAelS,MAAO,EACfJ,EAGT13B,KAAKwY,OACL,IAAMvR,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAMxC,OALArM,EAAKqwB,OAASI,EACdzwB,EAAKijC,cAAgBlqC,KAAKo/B,sCAC1Bp/B,KAAKs5B,OAAO74B,EAAQiB,QACpBuF,EAAK4B,UAAY7I,KAAK8pC,6BAA6BrpC,EAAQkB,QAAQ,GACnEsF,EAAKowB,UAAW,EACTr3B,KAAKmqC,qBAAqBljC,GAAM,GAClC,IAAK0wB,GAAW33B,KAAKoqC,oBAAsBpqC,KAAKy6B,aAAa,KAAM,CACxE,IAAMxzB,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GACxCrM,EAAKqwB,OAASI,EACd,IAAM95B,EAASoC,KAAKkkC,UAAS,WAK3B,OAJAj9B,EAAKijC,cAAgB,EAAKG,+CAC1B,EAAK/Q,OAAO74B,EAAQiB,QACpBuF,EAAK4B,UAAY,EAAKihC,6BAA6BrpC,EAAQkB,QAAQ,GAC/DqoC,EAAepS,sBAAqB3wB,EAAKowB,UAAW,GACjD,EAAK8S,qBAAqBljC,EAAM+iC,EAAepS,wBAGxD,GAAIh6B,EAAOqJ,KAET,OADIrJ,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WAC/BvmC,EAAOqJ,KAIlB,yDAA4BywB,EAAMT,EAAU3jB,EAAUqkB,EAASqS,KAnvE7C,+BAsvEpB,SAAkB/iC,GAAM,WAClBqjC,EAAQ,KAERtqC,KAAKoqC,oBAAsBpqC,KAAKy6B,aAAa,OAC/C6P,EAAQtqC,KAAKkkC,UAAS,kBAAM,EAAKmG,kDAAgDpjC,MAGnFA,EAAKijC,cAAgBI,EACrB,qDAAwBrjC,KA9vEN,+CAiwEpB,SAAkCgwB,EAAU3jB,GAC1C,IAAMrM,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAExC,GADAtT,KAAKuqC,oBAAoBtjC,GACpBjH,KAAKwqC,WAAWvjC,GACrB,OAAOjH,KAAKyqC,qBAAqBxjC,OAAMzH,GAAW,KArwEhC,mCAwwEpB,SAAsBvI,GACpB,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEpD,GAAa,KAATpc,GAAwB,KAATuhB,GAAexY,KAAK6H,MAAMklB,eAI3C,OAHA/sB,KAAK6H,MAAMklB,gBAAiB,EAC5B/sB,KAAK6H,MAAMwL,KAAO,OAClBrT,KAAK0qC,YAIP,yDAA4BzzC,KAlxEV,gCAqxEpB,SAAmBA,GACjB,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEvC,MAATpc,GAAyB,MAATuhB,EAKpB,sDAAyBvhB,GAJvB+I,KAAKwmC,SAAS/lC,EAAQgB,UAAW,KAzxEjB,2BAgyEpB,SAAckpC,EAAMn0C,GAClB,IAAMo0C,EAAW,EAAH,+CAAuBD,EAAMn0C,GAM3C,OAJIwJ,KAAK6H,MAAMklB,gBACb/sB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK0F,GAAW+C,yBAGjC8uB,IAvyEW,8BA0yEpB,WACE,GAAI5qC,KAAKoJ,UAAU,iBAAmBpJ,KAAK6qC,kBAQzC,OAPI7qC,KAAK6H,MAAMklB,gBACb/sB,KAAK84B,WAAW,KAAM/f,GAAW0B,mBAGnCza,KAAK8qC,2BACL9qC,KAAK6H,MAAMwL,KAAOrT,KAAK6qC,uBACvB7qC,KAAK6H,MAAMklB,gBAAiB,GAI9B,IAAI/sB,KAAK6H,MAAMklB,eAWf,4DAVE,IAAMlmB,EAAM7G,KAAK0I,MAAMi9B,QAAQ,MAAO3lC,KAAK6H,MAAMwL,KAAO,GAExD,IAAa,IAATxM,EACF,MAAM7G,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAM,EAAG5J,EAAc6I,qBAGrDtS,KAAK6H,MAAMwL,IAAMxM,EAAM,IA7zEP,6BAo0EpB,WAME,IALA,IACEwM,EACErT,KAAK6H,MADPwL,IAEE03B,EAA4B,EAEzB,CAAC,GAAI,GAAGC,SAAShrC,KAAK0I,MAAMC,WAAW0K,EAAM03B,KAClDA,IAGF,IAAME,EAAMjrC,KAAK0I,MAAMC,WAAWoiC,EAA4B13B,GACxD63B,EAAMlrC,KAAK0I,MAAMC,WAAWoiC,EAA4B13B,EAAM,GAEpE,OAAY,KAAR43B,GAAsB,KAARC,EACTH,EAA4B,EAG2D,iBAA5F/qC,KAAK0I,MAAMnR,MAAMwzC,EAA4B13B,EAAK03B,EAA4B13B,EAAM,IAC/E03B,EAA4B,GAGzB,KAARE,GAAsB,KAARC,GACTH,IA11ES,sCAg2EpB,WAGE,IAAa,IAFD/qC,KAAK0I,MAAMi9B,QAAQ,KAAM3lC,KAAK6H,MAAMwL,KAG9C,MAAMrT,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAc6I,uBAp2E/B,sDAw2EpB,SAAyCe,EAAzC,GAGG,IAFD83B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAprC,KAAKuX,MAAMlE,EAAK0F,GAAWO,gCAAiC8xB,EAAYD,KA52EtD,4CA+2EpB,SAA+B93B,EAA/B,GAGG,IAFD83B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEMnN,EAAamN,EAAW,GAAGC,cAAgBD,EAAW7zC,MAAM,GAClEyI,KAAKuX,MAAMlE,EAAK0F,GAAWe,sBAAuBsxB,EAAYnN,EAAYkN,KAp3ExD,8CAu3EpB,SAAiC93B,EAAjC,GAGG,IAFD83B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAprC,KAAKuX,MAAMlE,EAAK0F,GAAWQ,wBAAyB6xB,EAAYD,KA33E9C,mDA83EpB,SAAsC93B,EAAtC,GAEG,IADD83B,EACC,EADDA,SAEAnrC,KAAKuX,MAAMlE,EAAK0F,GAAWS,6BAA8B2xB,KAj4EvC,8CAo4EpB,SAAiC93B,EAAjC,GAGG,IAFD83B,EAEC,EAFDA,SACAG,EACC,EADDA,aAEA,OAAOtrC,KAAKuX,MAAMlE,EAAsB,OAAjBi4B,EAAwBvyB,GAAWW,uCAAyCX,GAAWU,wBAAyB0xB,EAAUG,KAx4E/H,mDA24EpB,SAAsCj4B,EAAtC,GAIG,IAHD83B,EAGC,EAHDA,SACAI,EAEC,EAFDA,aACAH,EACC,EADDA,WAEIn3B,EAAU,KAEd,OAAQs3B,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHt3B,EAAU8E,GAAWY,wCACrB,MAEF,IAAK,SACH1F,EAAU8E,GAAWa,uCACrB,MAEF,QACE3F,EAAU8E,GAAWc,wCAGzB,OAAO7Z,KAAKuX,MAAMlE,EAAKY,EAASk3B,EAAUC,EAAYG,KAj6EpC,qDAo6EpB,SAAwCl4B,EAAxC,GAGG,IAFD83B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAprC,KAAKuX,MAAMlE,EAAK0F,GAAWgB,+BAAgCoxB,EAAUC,KAx6EnD,gEA26EpB,SAAmD/3B,EAAnD,GAEG,IADD83B,EACC,EADDA,SAEAnrC,KAAKuX,MAAMlE,EAAK0F,GAAWiB,0CAA2CmxB,KA96EpD,gCAi7EpB,WAAqB,WACblU,EAAWj3B,KAAK6H,MAAMnQ,MAEtB8zC,EAAY,kBAAM,EAAKnuC,MAAMoD,EAAQmB,QAAU,EAAKvE,MAAMoD,EAAQe,SAExE,OAAQxB,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQC,IAET,IAAM+qC,EAAUzrC,KAAK0rC,oBAAoB1rC,KAAK6H,MAAMtR,OAEpD,OAAIi1C,IACK,CACLlvC,KAAM,SACN+W,IAAKo4B,EAAQ/zC,MACbnB,MAAOk1C,GAIJ,CACLnvC,KAAM,UACN+W,IAAK4jB,GAIX,KAAKx2B,EAAQpF,OAET,IAAMowC,EAAUzrC,KAAK2rC,mBAAmB3rC,KAAK6H,MAAMtR,OAEnD,OAAIi1C,IACK,CACLlvC,KAAM,SACN+W,IAAKo4B,EAAQ/zC,MACbnB,MAAOk1C,GAIJ,CACLnvC,KAAM,UACN+W,IAAK4jB,GAIX,KAAKx2B,EAAQiF,MACb,KAAKjF,EAAQkF,OAET,IAAM8lC,EAAUzrC,KAAK4rC,oBAAoB5rC,KAAK3C,MAAMoD,EAAQiF,QAE5D,OAAI8lC,IACK,CACLlvC,KAAM,UACN+W,IAAKo4B,EAAQ/zC,MACbnB,MAAOk1C,GAIJ,CACLnvC,KAAM,UACN+W,IAAK4jB,GAIX,QACE,MAAO,CACL36B,KAAM,UACN+W,IAAK4jB,MAj/EO,+BAs/EpB,WACE,IAAM5jB,EAAMrT,KAAK6H,MAAMnQ,MAMvB,MAAO,CACL+gB,GANSzY,KAAK47B,iBAAgB,GAO9BiQ,KANW7rC,KAAKg5B,IAAIv4B,EAAQkC,IAAM3C,KAAK8rC,qBAAuB,CAC9DxvC,KAAM,OACN+W,UA3/EgB,+CAmgFpB,SAAkCA,EAAK0B,EAASg3B,GAC9C,IACER,EACEx2B,EADFw2B,aAGmB,OAAjBA,GAIAA,IAAiBQ,GACnB/rC,KAAKgsC,sCAAsC34B,EAAK0B,KA7gFhC,6BAihFpB,YAaE,IAVC,IAFDo2B,EAEC,EAFDA,SACAI,EACC,EADDA,aAEMU,EAAY,IAAIrxC,IAChBsxC,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEhBC,GAAoB,GAEhBvsC,KAAK3C,MAAMoD,EAAQe,SAAS,CAClC,GAAIxB,KAAKg5B,IAAIv4B,EAAQ4B,UAAW,CAC9BkqC,GAAoB,EACpB,MAGF,IAAMC,EAAaxsC,KAAKy2B,YACxB,EAGIz2B,KAAKysC,oBAFPh0B,EADF,EACEA,GACAozB,EAFF,EAEEA,KAEIT,EAAa3yB,EAAGja,KAEtB,GAAmB,KAAf4sC,EAAJ,CAII,SAAS1uC,KAAK0uC,IAChBprC,KAAK0sC,+BAA+Bj0B,EAAG/gB,MAAO,CAC5CyzC,WACAC,eAIAa,EAAUxvC,IAAI2uC,IAChBprC,KAAK2sC,iCAAiCl0B,EAAG/gB,MAAO,CAC9CyzC,WACAC,eAIJa,EAAU9zB,IAAIizB,GACd,IAAMr2B,EAAU,CACdo2B,WACAI,eACAH,cAIF,OAFAoB,EAAW/zB,GAAKA,EAERozB,EAAKvvC,MACX,IAAK,UAED0D,KAAK4sC,kCAAkCf,EAAKx4B,IAAK0B,EAAS,WAC1Dy3B,EAAWX,KAAOA,EAAKt1C,MACvB21C,EAAQC,eAAehtC,KAAKa,KAAK42B,WAAW4V,EAAY,sBACxD,MAGJ,IAAK,SAEDxsC,KAAK4sC,kCAAkCf,EAAKx4B,IAAK0B,EAAS,UAC1Dy3B,EAAWX,KAAOA,EAAKt1C,MACvB21C,EAAQE,cAAcjtC,KAAKa,KAAK42B,WAAW4V,EAAY,qBACvD,MAGJ,IAAK,SAEDxsC,KAAK4sC,kCAAkCf,EAAKx4B,IAAK0B,EAAS,UAC1Dy3B,EAAWX,KAAOA,EAAKt1C,MACvB21C,EAAQG,cAAcltC,KAAKa,KAAK42B,WAAW4V,EAAY,qBACvD,MAGJ,IAAK,UAED,MAAMxsC,KAAKgsC,sCAAsCH,EAAKx4B,IAAK0B,GAG/D,IAAK,OAED,OAAQw2B,GACN,IAAK,UACHvrC,KAAK6sC,yCAAyChB,EAAKx4B,IAAK0B,GACxD,MAEF,IAAK,SACH/U,KAAK8sC,wCAAwCjB,EAAKx4B,IAAK0B,GACvD,MAEF,QACEm3B,EAAQI,iBAAiBntC,KAAKa,KAAK42B,WAAW4V,EAAY,yBAK/DxsC,KAAK3C,MAAMoD,EAAQe,SACtBxB,KAAKs5B,OAAO74B,EAAQmB,QAIxB,MAAO,CACLsqC,UACAK,uBA3nFgB,mCA+nFpB,SAAsBQ,EAAoBT,EAA1C,GAEG,IADDnB,EACC,EADDA,SAEA,GAAkC,IAA9B4B,EAAmBv1C,OACrB,OAAO80C,EACF,GAAgC,IAA5BA,EAAiB90C,OAC1B,OAAOu1C,EACF,GAAIT,EAAiB90C,OAASu1C,EAAmBv1C,OAAQ,WACzCu1C,GADyC,IAC9D,2BAAyC,KAA9B3G,EAA8B,QACvCpmC,KAAKgtC,mDAAmD5G,EAAO1uC,MAAO,CACpEyzC,cAH0D,8BAO9D,OAAOmB,EACF,UACgBA,GADhB,IACL,2BAAuC,KAA5BlG,EAA4B,QACrCpmC,KAAKgtC,mDAAmD5G,EAAO1uC,MAAO,CACpEyzC,cAHC,8BAOL,OAAO4B,IArpFS,uCAypFpB,YAEG,IADD5B,EACC,EADDA,SAEA,GAAInrC,KAAK68B,cAAc,MAAO,CAC5B,IAAK78B,KAAK3C,MAAMoD,EAAQjC,MACtB,MAAMwB,KAAKitC,iCAAiCjtC,KAAK6H,MAAMnQ,MAAO,CAC5DyzC,WACAG,aAAc,OAIlB,IACE/0C,EACEyJ,KAAK6H,MADPtR,MAWF,OATAyJ,KAAKwY,OAES,YAAVjiB,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrEyJ,KAAKitC,iCAAiCjtC,KAAK6H,MAAMnQ,MAAO,CACtDyzC,WACAG,aAAc/0C,IAIXA,EAGT,OAAO,OAnrFW,0BAsrFpB,SAAa0Q,EAAb,GAGG,WAFDkkC,EAEC,EAFDA,SACA+B,EACC,EADDA,QAEM3B,EAAevrC,KAAKmtC,0BAA0B,CAClDhC,aAEFnrC,KAAKs5B,OAAO74B,EAAQY,QACpB,MAGIrB,KAAKotC,gBAAgB,CACvBjC,WACAI,iBAJAW,EADF,EACEA,QACAK,EAFF,EAEEA,kBAOF,OAFAtlC,EAAKslC,kBAAoBA,EAEjBhB,GACN,IAAK,UAIH,OAHAtkC,EAAKskC,cAAe,EACpBtkC,EAAKilC,QAAUA,EAAQC,eACvBnsC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,mBAE/B,IAAK,SAIH,OAHAA,EAAKskC,cAAe,EACpBtkC,EAAKilC,QAAUA,EAAQE,cACvBpsC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAE/B,IAAK,SAMH,OALAA,EAAKskC,cAAe,EACpBtkC,EAAKilC,QAAUlsC,KAAKqtC,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFnB,aAEFnrC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAE/B,IAAK,SAGH,OAFAA,EAAKilC,QAAUA,EAAQI,iBACvBtsC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAE/B,QAEI,IAAMqiB,EAAQ,WAGZ,OAFAriB,EAAKilC,QAAU,GACf,EAAK5S,OAAO74B,EAAQe,QACb,EAAKo1B,WAAW3vB,EAAM,mBAG/BA,EAAKskC,cAAe,EACpB,IAAM+B,EAAWpB,EAAQC,eAAe30C,OAClC+1C,EAAUrB,EAAQE,cAAc50C,OAChCg2C,EAAUtB,EAAQG,cAAc70C,OAChCi2C,EAAevB,EAAQI,iBAAiB90C,OAE9C,GAAK81C,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApClG,EAAoC,QAC7CpmC,KAAK6sC,yCAAyCzG,EAAO1uC,MAAO,CAC1DyzC,WACAC,WAAYhF,EAAO3tB,GAAGja,QAJiC,8BAU3D,OAFAyI,EAAKilC,QAAUA,EAAQC,eACvBnsC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,mBACxB,IAAKqmC,IAAaE,GAAWD,GAAWE,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApClG,EAAoC,QAC7CpmC,KAAK8sC,wCAAwC1G,EAAO1uC,MAAO,CACzDyzC,WACAC,WAAYhF,EAAO3tB,GAAGja,QAJiC,8BAU3D,OAFAyI,EAAKilC,QAAUA,EAAQE,cACvBpsC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAK7B,OAHAjH,KAAK0tC,sCAAsCR,EAAS,CAClD/B,aAEK7hB,IA3BP,OAJAriB,EAAKilC,QAAUlsC,KAAKqtC,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFnB,aAEFnrC,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAN7B,OAAOqiB,OAhvFG,sCAuxFpB,SAAyBriB,GACvB,IAAMwR,EAAKzY,KAAK47B,kBAMhB,OALA30B,EAAKwR,GAAKA,EACVxR,EAAK3P,KAAO0I,KAAK2tC,aAAa3tC,KAAKy2B,YAAa,CAC9C0U,SAAU1yB,EAAGja,KACb0uC,QAASz0B,EAAG/gB,QAEPsI,KAAK42B,WAAW3vB,EAAM,qBA9xFX,iCAiyFpB,WACE,IAAMuR,EAAOxY,KAAK4tC,iBAElB,GAAoC,KAAhC5tC,KAAK0I,MAAMC,WAAW6P,GAAc,CACtC,IAAMq1B,EAAY7tC,KAAK0I,MAAMC,WAAW6P,EAAO,GAC/C,OAAqB,KAAdq1B,GAAkC,KAAdA,EAG7B,OAAO,IAzyFW,2CA4yFpB,SAA8B5mC,GAC5B,MAAqB,uBAAdA,EAAK3K,KAAgC2K,EAAKxQ,WAAawQ,MA7yF5C,GAAkBotB,IAmiNtCyZ,WA7sFgB,SAAAzZ,GAAU,oIAC1B,WACE,OAAOvE,KAFiB,4BAK1B,WACE,OAAO9vB,KAAK3C,MAAMoD,EAAQjC,QANF,sCAS1B,WACE,OAAQwB,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAK3C,MAAMoD,EAAQY,SAAWrB,KAAK3C,MAAMoD,EAAQmD,OAAS5D,KAAK3C,MAAMoD,EAAQ4B,WAAarC,KAAK3C,MAAMoD,EAAQK,cAAgBd,KAAK+tC,2BAA6B/tC,KAAKguC,0BAVpL,0CAa1B,WAEE,OADAhuC,KAAKwY,OACExY,KAAKiuC,6BAfY,6BAkB1B,SAAgBC,GACd,GAAKluC,KAAK3C,MAAMoD,EAAQjC,MAAxB,CAIA,IAAMm1B,EAAW3zB,KAAK6H,MAAMtR,MAE5B,OAA4C,IAAxC23C,EAAiBvI,QAAQhS,IAAoB3zB,KAAKmuC,WAAWnuC,KAAKouC,6BAA6B7uC,KAAKS,OAC/F2zB,OADT,KAzBwB,8BAgC1B,SAAiB0a,EAAUH,EAAkBI,EAAqB95B,GAahE,IAb+E,WACzE+5B,EAAe,SAACl7B,EAAKsgB,EAAU6a,EAAQC,GACvC9a,IAAa6a,GAAUH,EAASI,IAClC,EAAKl3B,MAAMlE,EAAKqd,GAASwB,sBAAuBsc,EAAQC,IAItDC,EAAe,SAACr7B,EAAKsgB,EAAUgb,EAAMC,IACrCP,EAASM,IAAShb,IAAaib,GAAQP,EAASO,IAASjb,IAAagb,IACxE,EAAKp3B,MAAMlE,EAAKqd,GAASiB,sBAAuBgd,EAAMC,MAIjD,CACP,IAAM3X,EAAWj3B,KAAK6H,MAAMnQ,MACtBi8B,EAAW3zB,KAAK6uC,gBAAgBX,EAAiBlwC,OAA8B,MAAvBswC,EAA8BA,EAAsB,KAClH,IAAK3a,EAAU,MAEXD,GAAmBC,GACjB0a,EAASS,cACX9uC,KAAKuX,MAAM0f,EAAUvG,GAASU,iCAE9Bmd,EAAatX,EAAUtD,EAAUA,EAAU,YAC3C4a,EAAatX,EAAUtD,EAAUA,EAAU,UAC3C4a,EAAatX,EAAUtD,EAAUA,EAAU,YAC3C0a,EAASS,cAAgBnb,IAGvBv9B,OAAO6I,eAAeC,KAAKmvC,EAAU1a,GACvC3zB,KAAKuX,MAAM0f,EAAUvG,GAASW,kBAAmBsC,IAEjD4a,EAAatX,EAAUtD,EAAU,SAAU,YAC3C4a,EAAatX,EAAUtD,EAAU,SAAU,YAC3C4a,EAAatX,EAAUtD,EAAU,WAAY,YAC7C4a,EAAatX,EAAUtD,EAAU,WAAY,YAC7C+a,EAAazX,EAAUtD,EAAU,UAAW,YAC5C+a,EAAazX,EAAUtD,EAAU,SAAU,aAG7C0a,EAAS1a,IAAY,GAGI,MAAvB2a,GAA+BA,EAAoBtD,SAASrX,IAC9D3zB,KAAKuX,MAAM0f,EAAUziB,EAAemf,MA3EhB,gCAgF1B,SAAmB+C,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAO12B,KAAK3C,MAAMoD,EAAQe,QAE5B,IAAK,wBACH,OAAOxB,KAAK3C,MAAMoD,EAAQY,QAE5B,IAAK,oBACH,OAAOrB,KAAK3C,MAAMoD,EAAQU,UAE5B,IAAK,4BACH,OAAOnB,KAAKy6B,aAAa,KAG7B,MAAM,IAAIhjC,MAAM,iBAhGQ,yBAmG1B,SAAYi/B,EAAMqY,GAGhB,IAFA,IAAMnxC,EAAS,IAEPoC,KAAKgvC,mBAAmBtY,IAC9B94B,EAAOuB,KAAK4vC,KAGd,OAAOnxC,IA1GiB,kCA6G1B,SAAqB84B,EAAMqY,GACzB,OAAOxe,GAAQvwB,KAAKivC,2BAA2BvY,EAAMqY,GAAc,MA9G3C,wCAiH1B,SAA2BrY,EAAMqY,EAAcG,GAG7C,IAFA,IAAMtxC,EAAS,IAGToC,KAAKgvC,mBAAmBtY,IADrB,CAKP,IAAMoQ,EAAUiI,IAEhB,GAAe,MAAXjI,EACF,OAKF,GAFAlpC,EAAOuB,KAAK2nC,IAER9mC,KAAKg5B,IAAIv4B,EAAQmB,OAArB,CAIA,GAAI5B,KAAKgvC,mBAAmBtY,GAC1B,MAOF,YAJIwY,GACFlvC,KAAKs5B,OAAO74B,EAAQmB,SAMxB,OAAOhE,IAhJiB,kCAmJ1B,SAAqB84B,EAAMqY,EAAcI,EAASC,GAC3CA,IACCD,EACFnvC,KAAKs5B,OAAO74B,EAAQO,UAEpBhB,KAAKogC,iBAAiB,MAI1B,IAAMxiC,EAASoC,KAAKqvC,qBAAqB3Y,EAAMqY,GAQ/C,OANII,EACFnvC,KAAKs5B,OAAO74B,EAAQU,UAEpBnB,KAAKogC,iBAAiB,KAGjBxiC,IApKiB,+BAuK1B,WACE,IAAMqJ,EAAOjH,KAAKy2B,YAmBlB,OAlBAz2B,KAAKs5B,OAAO74B,EAAQ+E,SACpBxF,KAAKs5B,OAAO74B,EAAQiB,QAEf1B,KAAK3C,MAAMoD,EAAQpF,SACtB2E,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOg5B,GAAS6C,+BAGxCtsB,EAAKuyB,SAAWx5B,KAAKo5B,gBACrBp5B,KAAKs5B,OAAO74B,EAAQkB,QAEhB3B,KAAKg5B,IAAIv4B,EAAQuB,OACnBiF,EAAKqoC,UAAYtvC,KAAKuvC,mBAAkB,IAGtCvvC,KAAKy6B,aAAa,OACpBxzB,EAAKivB,eAAiBl2B,KAAKwvC,wBAGtBxvC,KAAK42B,WAAW3vB,EAAM,kBA3LL,+BA8L1B,SAAkBwoC,GAGhB,IAFA,IAAI/W,EAAS14B,KAAK47B,kBAEX57B,KAAKg5B,IAAIv4B,EAAQuB,MAAM,CAC5B,IAAMiF,EAAOjH,KAAKg4B,gBAAgBU,GAClCzxB,EAAK6gC,KAAOpP,EACZzxB,EAAKs4B,MAAQv/B,KAAK47B,gBAAgB6T,GAClC/W,EAAS14B,KAAK42B,WAAW3vB,EAAM,mBAGjC,OAAOyxB,IAxMiB,kCA2M1B,WACE,IAAMzxB,EAAOjH,KAAKy2B,YAOlB,OANAxvB,EAAKyoC,SAAW1vC,KAAKuvC,mBAAkB,IAElCvvC,KAAKguC,yBAA2BhuC,KAAKy6B,aAAa,OACrDxzB,EAAKivB,eAAiBl2B,KAAKwvC,wBAGtBxvC,KAAK42B,WAAW3vB,EAAM,qBAnNL,sCAsN1B,SAAyB0oC,GACvB3vC,KAAKwY,OACL,IAAMvR,EAAOjH,KAAKg4B,gBAAgB2X,GAIlC,OAHA1oC,EAAK2oC,cAAgBD,EACrB1oC,EAAKo1B,eAAiBr8B,KAAK6vC,uBAAsB,GACjD5oC,EAAK6oC,SAAU,EACR9vC,KAAK42B,WAAW3vB,EAAM,qBA5NL,iCA+N1B,WACE,IAAMA,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,gBAlOL,8BAqO1B,WACE,IAAMA,EAAOjH,KAAKy2B,YASlB,OARAz2B,KAAKs5B,OAAO74B,EAAQqF,SAEhB9F,KAAK3C,MAAMoD,EAAQ+E,SACrByB,EAAK8oC,SAAW/vC,KAAKgwC,oBAErB/oC,EAAK8oC,SAAW/vC,KAAKuvC,mBAAkB,GAGlCvvC,KAAK42B,WAAW3vB,EAAM,iBA/OL,kCAkP1B,WACE,IAAMA,EAAOjH,KAAKy2B,YAIlB,OAHAxvB,EAAKzI,KAAOwB,KAAKiwC,2BACjBhpC,EAAKipC,WAAalwC,KAAKmwC,mBAAmB1vC,EAAQ6E,UAClD2B,EAAKpP,QAAUmI,KAAKmwC,mBAAmB1vC,EAAQkC,IACxC3C,KAAK42B,WAAW3vB,EAAM,qBAvPL,sCA0P1B,WACE,GAAIjH,KAAKy6B,aAAa,KACpB,OAAOz6B,KAAKowC,0BA5PU,mCAgQ1B,WACE,IAAMnpC,EAAOjH,KAAKy2B,YAclB,OAZIz2B,KAAKy6B,aAAa,MAAQz6B,KAAK3C,MAAMoD,EAAQ8uB,aAC/CvvB,KAAKwY,OAELxY,KAAK84B,aAGP7xB,EAAK6B,OAAS9I,KAAKqwC,qBAAqB,4BAA6BrwC,KAAKswC,qBAAqB/wC,KAAKS,OAAO,GAAO,GAEvF,IAAvBiH,EAAK6B,OAAOtR,QACdwI,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASc,qBAG3BxxB,KAAK42B,WAAW3vB,EAAM,gCA/QL,2CAkR1B,WACE,OAAIjH,KAAKygC,YAAYnkC,OAASmE,EAAQsE,QACpC/E,KAAKwY,OACExY,KAAKuwC,wBAGP,OAxRiB,6BA2R1B,SAAgBC,EAAaC,GAC3B,IAAMC,EAAsBF,IAAgB/vC,EAAQ0B,MACpDsuC,EAAUva,eAAiBl2B,KAAK2wC,2BAChC3wC,KAAKs5B,OAAO74B,EAAQiB,QACpB+uC,EAAUG,WAAa5wC,KAAK6wC,kCAExBH,GAEO1wC,KAAK3C,MAAMmzC,MADpBC,EAAUpU,eAAiBr8B,KAAK8wC,qCAAqCN,MAlS/C,4CAwS1B,WAAiC,WAC/B,OAAOxwC,KAAK+wC,iBAAiBtwC,EAAQkB,OAAQ,IAAI5E,KAAI,SAAAu3B,GAKnD,MAJqB,eAAjBA,EAAQh4B,MAA0C,gBAAjBg4B,EAAQh4B,MAA2C,kBAAjBg4B,EAAQh4B,MAA6C,iBAAjBg4B,EAAQh4B,MACjH,EAAKib,MAAM+c,EAAQ58B,MAAOg5B,GAAS+C,kCAAmCa,EAAQh4B,MAGzEg4B,OA9Se,wCAkT1B,WACOt0B,KAAKg5B,IAAIv4B,EAAQmB,QAAW5B,KAAKgxC,oBACpChxC,KAAKs5B,OAAO74B,EAAQoB,QApTE,oCAwT1B,SAAuB60B,EAAMzvB,GAG3B,OAFAjH,KAAKixC,gBAAgBxwC,EAAQqB,MAAOmF,GACpCjH,KAAKkxC,6BACElxC,KAAK42B,WAAW3vB,EAAMyvB,KA3TL,6CA8T1B,WAEE,OADA12B,KAAKwY,OACExY,KAAKg5B,IAAIv4B,EAAQjC,OAASwB,KAAK3C,MAAMoD,EAAQqB,SAhU5B,sCAmU1B,SAAyBmF,GACvB,GAAMjH,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAKmxC,YAAYnxC,KAAKoxC,gCAAgC7xC,KAAKS,OAAjG,CAIAA,KAAKs5B,OAAO74B,EAAQO,UACpB,IAAMyX,EAAKzY,KAAK47B,kBAChBnjB,EAAG4jB,eAAiBr8B,KAAK6vC,wBACzB7vC,KAAKs8B,iBAAiB7jB,GACtBzY,KAAKs5B,OAAO74B,EAAQU,UACpB8F,EAAK2pC,WAAa,CAACn4B,GACnB,IAAMnc,EAAO0D,KAAKqxC,2BAGlB,OAFI/0C,IAAM2K,EAAKo1B,eAAiB//B,GAChC0D,KAAKkxC,6BACElxC,KAAK42B,WAAW3vB,EAAM,uBAjVL,8CAoV1B,SAAiCA,EAAMqqC,GACjCtxC,KAAKg5B,IAAIv4B,EAAQwB,YAAWgF,EAAKowB,UAAW,GAChD,IAAMka,EAAUtqC,EAEhB,GAAIjH,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAKy6B,aAAa,KAAM,CACpD6W,GACFtxC,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASkC,4BAGlC,IAAM0C,EAASic,EASf,GAPIjc,EAAOoB,MAAQ12B,KAAKy6B,aAAa,MACnCz6B,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAKqd,GAASG,iCAGtC7wB,KAAKixC,gBAAgBxwC,EAAQqB,MAAOwzB,GACpCt1B,KAAKkxC,6BAEe,QAAhB5b,EAAOoB,KACLpB,EAAOsb,WAAWp5C,OAAS,IAC7BwI,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcU,gBAErCnK,KAAKynC,YAAYnS,EAAOsb,WAAW,KACrC5wC,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAKqd,GAASE,yCAGnC,GAAoB,QAAhB0E,EAAOoB,KAAgB,CAChC,GAAiC,IAA7BpB,EAAOsb,WAAWp5C,OACpBwI,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcW,oBACpC,CACL,IAAMonC,EAAiBlc,EAAOsb,WAAW,GAErC5wC,KAAKynC,YAAY+J,IACnBxxC,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAKqd,GAASE,mCAGV,eAAxB4gB,EAAel1C,MAAyBk1C,EAAena,UACzDr3B,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAKqd,GAASmC,uCAGV,gBAAxB2e,EAAel1C,MACjB0D,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAKqd,GAASoC,mCAIpCwC,EAAO+G,gBACTr8B,KAAKuX,MAAM+d,EAAO+G,eAAe3kC,MAAOg5B,GAASqC,qCAGnDuC,EAAOoB,KAAO,SAGhB,OAAO12B,KAAK42B,WAAWtB,EAAQ,qBAE/B,IAAMrG,EAAWsiB,EACbD,IAAUriB,EAASqiB,UAAW,GAClC,IAAMh1C,EAAO0D,KAAKqxC,2BAGlB,OAFI/0C,IAAM2yB,EAASoN,eAAiB//B,GACpC0D,KAAKkxC,6BACElxC,KAAK42B,WAAW3H,EAAU,yBA/YX,+BAmZ1B,WACE,IAAMhoB,EAAOjH,KAAKy2B,YAElB,GAAIz2B,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAKy6B,aAAa,KAClD,OAAOz6B,KAAKyxC,uBAAuB,6BAA8BxqC,GAGnE,GAAIjH,KAAK3C,MAAMoD,EAAQyE,MAAO,CAC5B,IAAMuT,EAAKzY,KAAKy2B,YAGhB,OAFAz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAKy6B,aAAa,KAC3Cz6B,KAAKyxC,uBAAuB,kCAAmCxqC,IAEtEA,EAAKlI,IAAMiB,KAAK0xC,iBAAiBj5B,EAAI,OAC9BzY,KAAK2xC,iCAAiC1qC,GAAM,IAIvDjH,KAAK4xC,iBAAiB3qC,EAAM,CAAC,YAAa,CAAC,UAAW,WAAY,UAAW,YAAa,SAAU,SAAU,YAAaypB,GAASuB,6BACpI,IAAM4f,EAAM7xC,KAAK8xC,yBAAyB7qC,GAE1C,OAAI4qC,IAIJ7xC,KAAK+xC,kBAAkB9qC,GAAM,GAExBA,EAAK0vB,UAA8B,eAAlB1vB,EAAKlI,IAAIzC,MAA4C,QAAlB2K,EAAKlI,IAAIP,MAAoC,QAAlByI,EAAKlI,IAAIP,OAAmBwB,KAAKiuC,6BACnHhnC,EAAKyvB,KAAOzvB,EAAKlI,IAAIP,KACrBwB,KAAK+xC,kBAAkB9qC,GAAM,IAGxBjH,KAAK2xC,iCAAiC1qC,IAAQA,EAAKqqC,aApblC,gCAub1B,WACE,IAAMrqC,EAAOjH,KAAKy2B,YAElB,OADAxvB,EAAKilC,QAAUlsC,KAAKgyC,2BACbhyC,KAAK42B,WAAW3vB,EAAM,mBA1bL,sCA6b1B,WACEjH,KAAKs5B,OAAO74B,EAAQY,QACpB,IAAM6qC,EAAUlsC,KAAKiyC,YAAY,cAAejyC,KAAKkyC,kBAAkB3yC,KAAKS,OAE5E,OADAA,KAAKs5B,OAAO74B,EAAQe,QACb0qC,IAjciB,mCAoc1B,WAGE,OAFAlsC,KAAKwY,OAEDxY,KAAKg5B,IAAIv4B,EAAQiD,SACZ1D,KAAKg9B,aAAa,aAGvBh9B,KAAKg9B,aAAa,aACpBh9B,KAAKwY,SAGFxY,KAAK3C,MAAMoD,EAAQO,YAIxBhB,KAAKwY,SAEAxY,KAAKmyC,mBAIVnyC,KAAKwY,OACExY,KAAK3C,MAAMoD,EAAQmF,UA1dF,wCA6d1B,WACE,IAAMqB,EAAOjH,KAAKy2B,YAGlB,OAFAxvB,EAAKzI,KAAOwB,KAAKiwC,2BACjBhpC,EAAKipC,WAAalwC,KAAKoyC,sBAAsB3xC,EAAQmF,KAC9C5F,KAAK42B,WAAW3vB,EAAM,qBAjeL,+BAoe1B,WACE,IAAMA,EAAOjH,KAAKy2B,YA2BlB,OA1BAz2B,KAAKs5B,OAAO74B,EAAQY,QAEhBrB,KAAK3C,MAAMoD,EAAQiD,UACrBuD,EAAKqqC,SAAWtxC,KAAK6H,MAAMtR,MAC3ByJ,KAAKwY,OACLxY,KAAKw7B,iBAAiB,aACbx7B,KAAK68B,cAAc,cAC5B51B,EAAKqqC,UAAW,GAGlBtxC,KAAKs5B,OAAO74B,EAAQO,UACpBiG,EAAKi5B,cAAgBlgC,KAAKqyC,6BAC1BprC,EAAKqrC,SAAWtyC,KAAK68B,cAAc,MAAQ78B,KAAKuyC,cAAgB,KAChEvyC,KAAKs5B,OAAO74B,EAAQU,UAEhBnB,KAAK3C,MAAMoD,EAAQiD,UACrBuD,EAAKowB,SAAWr3B,KAAK6H,MAAMtR,MAC3ByJ,KAAKwY,OACLxY,KAAKs5B,OAAO74B,EAAQwB,WACXjC,KAAKg5B,IAAIv4B,EAAQwB,YAC1BgF,EAAKowB,UAAW,GAGlBpwB,EAAKo1B,eAAiBr8B,KAAKwyC,iBAC3BxyC,KAAKu8B,YACLv8B,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,kBAhgBL,8BAmgB1B,WAAmB,WACXA,EAAOjH,KAAKy2B,YAClBxvB,EAAKwrC,aAAezyC,KAAKqwC,qBAAqB,oBAAqBrwC,KAAK0yC,wBAAwBnzC,KAAKS,OAAO,GAAM,GAClH,IAAI2yC,GAAsB,EACtBC,EAAkB,KA0BtB,OAzBA3rC,EAAKwrC,aAAa9zC,SAAQ,SAAAk0C,GACxB,IAAIC,EAGFx2C,EACEu2C,EADFv2C,MAGEq2C,GAAgC,eAATr2C,GAAkC,mBAATA,GAAwC,uBAATA,GAAiCu2C,EAAYxb,UAC9H,EAAK9f,MAAMs7B,EAAYn7C,MAAOg5B,GAAS6B,4BAGzCogB,EAAsBA,GAAgC,uBAATr2C,GAAiCu2C,EAAYxb,UAAqB,mBAAT/6B,EAEzF,eAATA,IAEFA,GADAu2C,EAAcA,EAAYxW,gBACP//B,MAGrB,IAAMy2C,EAAqB,uBAATz2C,GAClBs2C,EAA0D,OAAvCE,EAAmBF,GAA2BE,EAAmBC,KAE5DA,GACtB,EAAKx7B,MAAMs7B,EAAYn7C,MAAOg5B,GAAS0B,qCAGpCpyB,KAAK42B,WAAW3vB,EAAM,iBAjiBL,qCAoiB1B,WACE,MAGIjH,KAAK6H,MAFAovB,EADT,EACEv/B,MACA4b,EAFF,EAEEA,SAEI4oB,EAAOl8B,KAAKg5B,IAAIv4B,EAAQ4B,UAC1B/F,EAAO0D,KAAKuyC,cACVlb,EAAWr3B,KAAKg5B,IAAIv4B,EAAQwB,UAGlC,GAFgBjC,KAAKg5B,IAAIv4B,EAAQqB,OAEpB,CACX,IAAMkxC,EAAchzC,KAAKg4B,gBAAgB17B,GACzC02C,EAAY3b,SAAWA,EAEL,oBAAd/6B,EAAKA,MAA+BA,EAAK45B,gBAAyC,eAAvB55B,EAAKozC,SAASpzC,MAG3E0D,KAAKuX,MAAMjb,EAAK5E,MAAOg5B,GAASyB,yBAChC6gB,EAAYlzC,MAAQxD,GAHpB02C,EAAYlzC,MAAQxD,EAAKozC,SAM3BsD,EAAYhQ,YAAchjC,KAAKuyC,cAC/Bj2C,EAAO0D,KAAK42B,WAAWoc,EAAa,2BAC/B,GAAI3b,EAAU,CACnB,IAAM4b,EAAmBjzC,KAAKg4B,gBAAgB17B,GAC9C22C,EAAiB5W,eAAiB//B,EAClCA,EAAO0D,KAAK42B,WAAWqc,EAAkB,kBAG3C,GAAI/W,EAAM,CACR,IAAMgX,EAAWlzC,KAAK+0B,YAAYkC,EAAU3jB,GAC5C4/B,EAAS7W,eAAiB//B,EAC1BA,EAAO0D,KAAK42B,WAAWsc,EAAU,cAGnC,OAAO52C,IAvkBiB,sCA0kB1B,WACE,IAAM2K,EAAOjH,KAAKy2B,YAIlB,OAHAz2B,KAAKs5B,OAAO74B,EAAQiB,QACpBuF,EAAKo1B,eAAiBr8B,KAAKuyC,cAC3BvyC,KAAKs5B,OAAO74B,EAAQkB,QACb3B,KAAK42B,WAAW3vB,EAAM,yBA/kBL,8CAklB1B,SAAiC3K,EAAM62C,GACrC,IAAMlsC,EAAOjH,KAAKy2B,YASlB,MAPa,sBAATn6B,IACF2K,EAAKksC,WAAaA,EACdA,GAAUnzC,KAAKwY,OACnBxY,KAAKwY,QAGPxY,KAAKixC,gBAAgBxwC,EAAQ0B,MAAO8E,GAC7BjH,KAAK42B,WAAW3vB,EAAM3K,KA5lBL,oCA+lB1B,WAAyB,WACjB2K,EAAOjH,KAAKy2B,YAgBlB,OAdAxvB,EAAKwkC,QAAW,WACd,OAAQ,EAAK5jC,MAAMvL,MACjB,KAAKmE,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQpF,OACb,KAAKoF,EAAQiF,MACb,KAAKjF,EAAQkF,OACX,OAAO,EAAKyzB,gBAEd,QACE,MAAM,EAAKN,cAVD,GAcT94B,KAAK42B,WAAW3vB,EAAM,mBAhnBL,wCAmnB1B,WACE,IAAMA,EAAOjH,KAAKy2B,YAElB,OADAxvB,EAAKwkC,QAAUzrC,KAAKozC,eAAc,GAC3BpzC,KAAK42B,WAAW3vB,EAAM,mBAtnBL,uCAynB1B,WACE,OAAIjH,KAAK6H,MAAM+kB,OAAe5sB,KAAKuyC,cACnC,gEA3nBwB,gDA8nB1B,WACE,IAAMc,EAAcrzC,KAAKszC,sBAEzB,OAAItzC,KAAKg9B,aAAa,QAAUh9B,KAAKguC,wBAC5BhuC,KAAKuzC,yBAAyBF,GAE9BA,IApoBe,iCAwoB1B,WACE,OAAQrzC,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQjC,KACb,KAAKiC,EAAQsF,MACb,KAAKtF,EAAQgF,MAET,IAAMnJ,EAAO0D,KAAK3C,MAAMoD,EAAQsF,OAAS,gBAAkB/F,KAAK3C,MAAMoD,EAAQgF,OAAS,gBAvrBjG,SAA6BlP,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eAET,IAAK,UACH,MAAO,mBAET,IAAK,SACH,MAAO,kBAET,IAAK,QACH,MAAO,iBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,YACH,MAAO,qBAET,IAAK,UACH,MAAO,mBAET,QACE,QAspB6Gi9C,CAAoBxzC,KAAK6H,MAAMtR,OAExI,QAAaiJ,IAATlD,GAAmD,KAA7B0D,KAAKyzC,oBAA4B,CACzD,IAAMxsC,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM3K,GAG/B,OAAO0D,KAAKuwC,uBAGhB,KAAK9vC,EAAQpF,OACb,KAAKoF,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQiF,MACb,KAAKjF,EAAQkF,OACX,OAAO3F,KAAK0zC,yBAEd,KAAKjzC,EAAQiD,QACX,GAAyB,MAArB1D,KAAK6H,MAAMtR,MAAe,CAC5B,IAAM0Q,EAAOjH,KAAKy2B,YACZiU,EAAY1qC,KAAKygC,YAEvB,GAAIiK,EAAUpuC,OAASmE,EAAQC,KAAOgqC,EAAUpuC,OAASmE,EAAQE,OAC/D,MAAMX,KAAK84B,aAIb,OADA7xB,EAAKwkC,QAAUzrC,KAAK2zC,kBACb3zC,KAAK42B,WAAW3vB,EAAM,iBAG/B,MAEF,KAAKxG,EAAQ0E,MACX,OAAOnF,KAAK4zC,qCAEd,KAAKnzC,EAAQqF,QACX,OAAO9F,KAAK6zC,mBAEd,KAAKpzC,EAAQ+E,QACX,OAAOxF,KAAKgwC,oBAEd,KAAKvvC,EAAQY,OACX,OAAOrB,KAAKmxC,YAAYnxC,KAAK8zC,sBAAsBv0C,KAAKS,OAASA,KAAK+zC,oBAAsB/zC,KAAKg0C,qBAEnG,KAAKvzC,EAAQO,SACX,OAAOhB,KAAKi0C,mBAEd,KAAKxzC,EAAQiB,OACX,OAAO1B,KAAKk0C,2BAEd,KAAKzzC,EAAQ6B,UACX,OAAOtC,KAAKm0C,6BAGhB,MAAMn0C,KAAK84B,eArsBa,sCAwsB1B,WAGE,IAFA,IAAIx8B,EAAO0D,KAAKo0C,uBAERp0C,KAAKguC,yBAA2BhuC,KAAKg5B,IAAIv4B,EAAQO,WACvD,GAAIhB,KAAK3C,MAAMoD,EAAQU,UAAW,CAChC,IAAM8F,EAAOjH,KAAKg4B,gBAAgB17B,GAClC2K,EAAK+7B,YAAc1mC,EACnB0D,KAAKs5B,OAAO74B,EAAQU,UACpB7E,EAAO0D,KAAK42B,WAAW3vB,EAAM,mBACxB,CACL,IAAMA,EAAOjH,KAAKg4B,gBAAgB17B,GAClC2K,EAAKg8B,WAAa3mC,EAClB2K,EAAKi8B,UAAYljC,KAAKuyC,cACtBvyC,KAAKs5B,OAAO74B,EAAQU,UACpB7E,EAAO0D,KAAK42B,WAAW3vB,EAAM,uBAIjC,OAAO3K,IA1tBiB,iCA6tB1B,SAAoByqC,GAClB,IAAM9/B,EAAOjH,KAAKy2B,YASlB,OARAz2B,KAAKw7B,iBAAiBuL,GACtB9/B,EAAK8/B,SAAWA,EAChB9/B,EAAKo1B,eAAiBr8B,KAAKq0C,8BAEV,aAAbtN,GACF/mC,KAAKs0C,iCAAiCrtC,GAGjCjH,KAAK42B,WAAW3vB,EAAM,oBAvuBL,8CA0uB1B,SAAiCA,GAC/B,OAAQA,EAAKo1B,eAAe//B,MAC1B,IAAK,cACL,IAAK,cACH,OAEF,QACE0D,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAAS0C,uBAjvBZ,8BAqvB1B,WACE,IAAMnsB,EAAOjH,KAAKy2B,YAClBz2B,KAAKw7B,iBAAiB,SACtB,IAAM0E,EAAgBlgC,KAAKy2B,YAG3B,OAFAyJ,EAAc1hC,KAAOwB,KAAKiwC,2BAC1BhpC,EAAKi5B,cAAgBlgC,KAAK42B,WAAWsJ,EAAe,mBAC7ClgC,KAAK42B,WAAW3vB,EAAM,iBA3vBL,yCA8vB1B,WAA8B,WACtB8/B,EAAW,CAAC,QAAS,SAAU,YAAY/S,MAAK,SAAAugB,GAAE,OAAI,EAAKvX,aAAauX,MAC9E,OAAOxN,EAAW/mC,KAAKw0C,oBAAoBzN,GAAY/mC,KAAKg9B,aAAa,SAAWh9B,KAAKy0C,mBAAqBz0C,KAAK00C,6BAhwB3F,4CAmwB1B,SAA+Bhe,EAAMie,EAAsB5N,GACzD,IAAM9/B,EAAOjH,KAAKy2B,YACZme,EAAqB50C,KAAKg5B,IAAI+N,GAC9BlyB,EAAQ,GAEd,GACEA,EAAM1V,KAAKw1C,WACJ30C,KAAKg5B,IAAI+N,IAElB,OAAqB,IAAjBlyB,EAAMrd,QAAiBo9C,GAI3B3tC,EAAK4N,MAAQA,EACN7U,KAAK42B,WAAW3vB,EAAMyvB,IAJpB7hB,EAAM,KA7wBS,6CAoxB1B,WACE,OAAO7U,KAAK60C,+BAA+B,qBAAsB70C,KAAKq0C,4BAA4B90C,KAAKS,MAAOS,EAAQ6C,cArxB9F,sCAwxB1B,WACE,OAAOtD,KAAK60C,+BAA+B,cAAe70C,KAAK80C,gCAAgCv1C,KAAKS,MAAOS,EAAQ2C,aAzxB3F,qCA4xB1B,WACE,QAAIpD,KAAKy6B,aAAa,MAIfz6B,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAKmxC,YAAYnxC,KAAK+0C,qCAAqCx1C,KAAKS,SAjyB7E,kCAoyB1B,WACE,GAAIA,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK3C,MAAMoD,EAAQ0E,OAEjD,OADAnF,KAAKwY,QACE,EAGT,GAAIxY,KAAK3C,MAAMoD,EAAQY,QAAS,CAC9B,IAAI2zC,EAAoB,EAGxB,IAFAh1C,KAAKwY,OAEEw8B,EAAoB,GACrBh1C,KAAK3C,MAAMoD,EAAQY,UACnB2zC,EACOh1C,KAAK3C,MAAMoD,EAAQe,WAC1BwzC,EAGJh1C,KAAKwY,OAGP,OAAO,EAGT,GAAIxY,KAAK3C,MAAMoD,EAAQO,UAAW,CAChC,IAAIg0C,EAAoB,EAGxB,IAFAh1C,KAAKwY,OAEEw8B,EAAoB,GACrBh1C,KAAK3C,MAAMoD,EAAQO,YACnBg0C,EACOh1C,KAAK3C,MAAMoD,EAAQU,aAC1B6zC,EAGJh1C,KAAKwY,OAGP,OAAO,EAGT,OAAO,IA50BiB,kDA+0B1B,WAGE,GAFAxY,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQkB,SAAW3B,KAAK3C,MAAMoD,EAAQ4B,UACnD,OAAO,EAGT,GAAIrC,KAAKi1C,uBAAwB,CAC/B,GAAIj1C,KAAK3C,MAAMoD,EAAQqB,QAAU9B,KAAK3C,MAAMoD,EAAQmB,QAAU5B,KAAK3C,MAAMoD,EAAQwB,WAAajC,KAAK3C,MAAMoD,EAAQkC,IAC/G,OAAO,EAGT,GAAI3C,KAAK3C,MAAMoD,EAAQkB,UACrB3B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQ0B,QACrB,OAAO,EAKb,OAAO,IAp2BiB,kDAu2B1B,SAAqCquC,GAAa,WAChD,OAAOxwC,KAAKk1C,UAAS,WACnB,IAAMr+C,EAAI,EAAK4/B,YACf,EAAK6C,OAAOkX,GACZ,IAAMvpC,EAAO,EAAKwvB,YACZqZ,IAAY,EAAK3B,WAAW,EAAKgH,4BAA4B51C,KAAK,IAExE,GAAIuwC,GAAW,EAAKzyC,MAAMoD,EAAQ0E,OAAQ,CACxC,IAAIiwC,EAAoB,EAAKxB,qCAa7B,MAX+B,eAA3BwB,EAAkB94C,MACpB2K,EAAK2oC,cAAgBwF,EACrBnuC,EAAK6oC,SAAU,EACf7oC,EAAKo1B,eAAiB,KACtB+Y,EAAoB,EAAKxe,WAAW3vB,EAAM,qBAE1C,EAAKqiC,2BAA2B8L,EAAmBnuC,GACnDmuC,EAAkBtF,SAAU,GAG9Bj5C,EAAEwlC,eAAiB+Y,EACZ,EAAKxe,WAAW//B,EAAG,oBAG5B,IAAMw+C,EAAwB,EAAKlD,kBAAoB,EAAKhE,WAAW,EAAKmH,2BAA2B/1C,KAAK,IAE5G,IAAK81C,EACH,OAAKvF,GAIL7oC,EAAK2oC,cAAgB,EAAKhU,kBAC1B30B,EAAK6oC,QAAUA,EACf7oC,EAAKo1B,eAAiB,KACtBxlC,EAAEwlC,eAAiB,EAAKzF,WAAW3vB,EAAM,mBAClC,EAAK2vB,WAAW//B,EAAG,qBAPjB,EAAKg5C,uBAAsB,EAAOh5C,GAU7C,IAAMyF,EAAO,EAAKuzC,uBAAsB,GAKxC,OAJA5oC,EAAK2oC,cAAgByF,EACrBpuC,EAAKo1B,eAAiB//B,EACtB2K,EAAK6oC,QAAUA,EACfj5C,EAAEwlC,eAAiB,EAAKzF,WAAW3vB,EAAM,mBAClC,EAAK2vB,WAAW//B,EAAG,yBAl5BJ,qDAs5B1B,WACE,OAAOmJ,KAAK3C,MAAMoD,EAAQqB,OAAS9B,KAAK8wC,qCAAqCrwC,EAAQqB,YAAStC,IAv5BtE,sCA05B1B,WACE,OAAOQ,KAAK3C,MAAMoD,EAAQqB,OAAS9B,KAAK6vC,6BAA0BrwC,IA35B1C,4BA85B1B,WACE,OAAOQ,KAAKmwC,mBAAmB1vC,EAAQqB,SA/5Bf,wCAk6B1B,WACE,IAAM2W,EAAKzY,KAAK47B,kBAEhB,GAAI57B,KAAKg9B,aAAa,QAAUh9B,KAAKguC,wBAEnC,OADAhuC,KAAKwY,OACEC,IAv6Be,yCA26B1B,WACE,IAAKzY,KAAK3C,MAAMoD,EAAQjC,OAA8B,YAArBwB,KAAK6H,MAAMtR,OAAuByJ,KAAKguC,wBACtE,OAAO,EAGT,IAAMtgB,EAAc1tB,KAAK6H,MAAM6lB,YAG/B,OAFA1tB,KAAKwY,UAEAxY,KAAK3C,MAAMoD,EAAQjC,QAAUwB,KAAK3C,MAAMoD,EAAQ0E,UAIjDuoB,GACF1tB,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAc9J,EAAcqD,2BAA4B,YAGzE,KA37BiB,mCA87B1B,WAA6D,WAAvCyoC,IAAuC,yDAAtB1+C,EAAsB,uDAAlBmJ,KAAKy2B,YAK9C,OAJAz2B,KAAKk1C,UAAS,WACRK,GAAU,EAAKjc,OAAO74B,EAAQqB,OAClCjL,EAAEwlC,eAAiB,EAAKkW,iBAEnBvyC,KAAK42B,WAAW//B,EAAG,sBAn8BF,yBAs8B1B,WACE45B,GAAOzwB,KAAK6H,MAAM+kB,QAClB,IAAMtwB,EAAO0D,KAAKw1C,4BAElB,GAAIx1C,KAAKguC,0BAA4BhuC,KAAKg5B,IAAIv4B,EAAQ6E,UACpD,OAAOhJ,EAGT,IAAM2K,EAAOjH,KAAKg4B,gBAAgB17B,GAOlC,OANA2K,EAAKwuC,UAAYn5C,EACjB2K,EAAKyuC,YAAc11C,KAAKw1C,4BACxBx1C,KAAKs5B,OAAO74B,EAAQwB,UACpBgF,EAAK0uC,SAAW31C,KAAKuyC,cACrBvyC,KAAKs5B,OAAO74B,EAAQqB,OACpBmF,EAAK2uC,UAAY51C,KAAKuyC,cACfvyC,KAAK42B,WAAW3vB,EAAM,uBAr9BL,4CAw9B1B,WACE,OAAOjH,KAAKg9B,aAAa,aAAeh9B,KAAKygC,YAAYnkC,OAASmE,EAAQyE,OAz9BlD,uCA49B1B,WACE,OAAIlF,KAAK61C,0BACA71C,KAAK81C,iCAAiC,kBAG3C91C,KAAK3C,MAAMoD,EAAQyE,MACdlF,KAAK81C,iCAAiC,qBACpC91C,KAAK+1C,iCACP/1C,KAAK81C,iCAAiC,qBAAqB,GAG7D91C,KAAKg2C,6BAv+BY,kCA0+B1B,WACE,IAAM/uC,EAAOjH,KAAKy2B,YAEZ1xB,EAAS/E,KAAKi2C,gCAKpB,OAHAhvC,EAAKo1B,eAAiBt3B,GAAU/E,KAAKk2C,sBACrCl2C,KAAKogC,iBAAiB,KACtBn5B,EAAKxQ,WAAauJ,KAAK2zC,kBAChB3zC,KAAK42B,WAAW3vB,EAAM,qBAl/BL,mCAq/B1B,SAAsBkvC,GACpB,IAAMC,EAAgBp2C,KAAK6H,MAAMnQ,MAC3B2+C,EAAgBr2C,KAAKqvC,qBAAqB,wBAAyBrvC,KAAKs2C,mCAAmC/2C,KAAKS,OAMtH,OAJKq2C,EAAc7+C,QACjBwI,KAAKuX,MAAM6+B,EAAe1lB,GAASY,wBAAyB6kB,GAGvDE,IA7/BiB,gDAggC1B,WACE,IAAMpvC,EAAOjH,KAAKy2B,YAOlB,OANAxvB,EAAKxQ,WAAauJ,KAAKuvC,mBAAkB,GAErCvvC,KAAKy6B,aAAa,OACpBxzB,EAAKivB,eAAiBl2B,KAAKwvC,wBAGtBxvC,KAAK42B,WAAW3vB,EAAM,mCAxgCL,yCA2gC1B,SAA4BA,GAC1BA,EAAKwR,GAAKzY,KAAK47B,kBACf57B,KAAKkoC,UAAUjhC,EAAKwR,GAAI,mCApqKF,KAqqKtBxR,EAAKivB,eAAiBl2B,KAAK2wC,2BAEvB3wC,KAAKg5B,IAAIv4B,EAAQ6E,YACnB2B,EAAKw3B,QAAUz+B,KAAKu2C,sBAAsB,YAG5C,IAAMj/C,EAAO0I,KAAKy2B,YAGlB,OAFAn/B,EAAKA,KAAO0I,KAAKk1C,SAASl1C,KAAKgyC,yBAAyBzyC,KAAKS,OAC7DiH,EAAK3P,KAAO0I,KAAK42B,WAAWt/B,EAAM,mBAC3B0I,KAAK42B,WAAW3vB,EAAM,4BAvhCL,yCA0hC1B,SAA4BA,GAAM,WAgBhC,OAfAA,EAAKwR,GAAKzY,KAAK47B,kBACf57B,KAAKkoC,UAAUjhC,EAAKwR,GAAI,wBAlrKP,GAmrKjBxR,EAAKivB,eAAiBl2B,KAAK2wC,2BAC3B1pC,EAAKo1B,eAAiBr8B,KAAKk1C,UAAS,WAGlC,GAFA,EAAK5b,OAAO74B,EAAQkC,IAEhB,EAAKq6B,aAAa,cAAgB,EAAKyD,YAAYnkC,OAASmE,EAAQuB,IAAK,CAC3E,IAAMiF,EAAO,EAAKwvB,YAElB,OADA,EAAKje,OACE,EAAKoe,WAAW3vB,EAAM,sBAG/B,OAAO,EAAKsrC,iBAEdvyC,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,4BA1iCL,2BA6iC1B,SAAcuvC,GACZ,IAAMC,EAAaz2C,KAAK6H,MAAMkN,QAC9B/U,KAAK6H,MAAMkN,QAAU,CAAC0hC,EAAW,IAEjC,IACE,OAAOD,IADT,QAGEx2C,KAAK6H,MAAMkN,QAAU0hC,KApjCC,sBAwjC1B,SAASD,GACP,IAAMnb,EAAYr7B,KAAK6H,MAAM+kB,OAC7B5sB,KAAK6H,MAAM+kB,QAAS,EAEpB,IACE,OAAO4pB,IADT,QAGEx2C,KAAK6H,MAAM+kB,OAASyO,KA/jCE,gCAmkC1B,SAAmBl/B,GACjB,OAAQ6D,KAAK3C,MAAMlB,GAAqB6D,KAAKk2C,2BAAjB12C,IApkCJ,mCAukC1B,SAAsBrD,GAAO,WAC3B,OAAO6D,KAAK02C,mBAAkB,kBAAM,EAAKpd,OAAOn9B,QAxkCxB,iCA2kC1B,WAAsB,WACpB,OAAO6D,KAAK02C,mBAAkB,kBAAM,EAAKl+B,YA5kCjB,+BA+kC1B,SAAkBg+B,GAAI,WACpB,OAAOx2C,KAAKk1C,UAAS,WAEnB,OADAsB,IACO,EAAKjE,mBAllCU,+BAslC1B,WACE,IAAMtrC,EAAOjH,KAAKy2B,YAOlB,OANAxvB,EAAKwR,GAAKzY,KAAK3C,MAAMoD,EAAQpF,QAAU2E,KAAKo5B,gBAAkBp5B,KAAK47B,iBAAgB,GAE/E57B,KAAKg5B,IAAIv4B,EAAQkC,MACnBsE,EAAK0vC,YAAc32C,KAAKy5B,2BAGnBz5B,KAAK42B,WAAW3vB,EAAM,kBA9lCL,oCAimC1B,SAAuBA,EAAM8oB,GAO3B,OANIA,IAAS9oB,EAAKkV,OAAQ,GAC1BlV,EAAKwR,GAAKzY,KAAK47B,kBACf57B,KAAKkoC,UAAUjhC,EAAKwR,GAAI,8BAA+BsX,EArvKhC6mB,IAJNtZ,KA0vKjBt9B,KAAKs5B,OAAO74B,EAAQY,QACpB4F,EAAKilC,QAAUlsC,KAAKqvC,qBAAqB,cAAervC,KAAK62C,kBAAkBt3C,KAAKS,OACpFA,KAAKs5B,OAAO74B,EAAQe,QACbxB,KAAK42B,WAAW3vB,EAAM,uBAxmCL,gCA2mC1B,WACE,IAAMA,EAAOjH,KAAKy2B,YAKlB,OAJAz2B,KAAKgY,MAAMulB,MA9xKK,GA+xKhBv9B,KAAKs5B,OAAO74B,EAAQY,QACpBrB,KAAK82C,4BAA4B7vC,EAAK3P,KAAO,QAAIkI,GAAW,EAAMiB,EAAQe,QAC1ExB,KAAKgY,MAAM2lB,OACJ39B,KAAK42B,WAAW3vB,EAAM,mBAjnCL,iDAonC1B,SAAoCA,GAAsB,IAAhB8vC,EAAgB,wDAOxD,GANA9vC,EAAKwR,GAAKzY,KAAK47B,kBAEVmb,GACH/2C,KAAKkoC,UAAUjhC,EAAKwR,GAAI,kCAxwKJ,MA2wKlBzY,KAAKg5B,IAAIv4B,EAAQuB,KAAM,CACzB,IAAMg1C,EAAQh3C,KAAKy2B,YACnBz2B,KAAKi3C,oCAAoCD,GAAO,GAChD/vC,EAAK3P,KAAO0/C,OAEZh3C,KAAKgY,MAAMulB,MAAMhnB,IACjBvW,KAAKk3C,UAAU3Z,MArxCP,GAsxCRt2B,EAAK3P,KAAO0I,KAAKm3C,qBACjBn3C,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,OAGb,OAAO39B,KAAK42B,WAAW3vB,EAAM,yBAvoCL,qDA0oC1B,SAAwCA,GAoBtC,OAnBIjH,KAAKg9B,aAAa,WACpB/1B,EAAKmwC,QAAS,EACdnwC,EAAKwR,GAAKzY,KAAK47B,mBACN57B,KAAK3C,MAAMoD,EAAQpF,QAC5B4L,EAAKwR,GAAKzY,KAAKo5B,gBAEfp5B,KAAK84B,aAGH94B,KAAK3C,MAAMoD,EAAQY,SACrBrB,KAAKgY,MAAMulB,MAAMhnB,IACjBvW,KAAKk3C,UAAU3Z,MA1yCP,GA2yCRt2B,EAAK3P,KAAO0I,KAAKm3C,qBACjBn3C,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,QAEX39B,KAAKu8B,YAGAv8B,KAAK42B,WAAW3vB,EAAM,yBA9pCL,4CAiqC1B,SAA+BA,EAAMowC,GACnCpwC,EAAKowC,SAAWA,IAAY,EAC5BpwC,EAAKwR,GAAKzY,KAAK47B,kBACf57B,KAAKkoC,UAAUjhC,EAAKwR,GAAI,4BA9zKP6kB,GA+zKjBt9B,KAAKs5B,OAAO74B,EAAQkC,IACpB,IAAM20C,EAAkBt3C,KAAKu3C,yBAQ7B,MANwB,SAApBtwC,EAAK+U,YAAkD,8BAAzBs7B,EAAgBh7C,MAChD0D,KAAKuX,MAAM+/B,EAAgB5/C,MAAOg5B,GAASgB,0BAG7CzqB,EAAKqwC,gBAAkBA,EACvBt3C,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,+BA9qCL,yCAirC1B,WACE,OAAOjH,KAAKg9B,aAAa,YAA2C,KAA7Bh9B,KAAKyzC,sBAlrCpB,oCAqrC1B,WACE,OAAOzzC,KAAKw3C,8BAAgCx3C,KAAKy3C,iCAAmCz3C,KAAKuvC,mBAAkB,KAtrCnF,4CAyrC1B,WACE,IAAMtoC,EAAOjH,KAAKy2B,YAIlB,GAHAz2B,KAAKw7B,iBAAiB,WACtBx7B,KAAKs5B,OAAO74B,EAAQiB,SAEf1B,KAAK3C,MAAMoD,EAAQpF,QACtB,MAAM2E,KAAK84B,aAKb,OAFA7xB,EAAKxQ,WAAauJ,KAAKo5B,gBACvBp5B,KAAKs5B,OAAO74B,EAAQkB,QACb3B,KAAK42B,WAAW3vB,EAAM,+BApsCL,yBAusC1B,SAAYywC,GACV,IAAM7vC,EAAQ7H,KAAK6H,MAAMu8B,QACnBuT,EAAMD,IAEZ,OADA13C,KAAK6H,MAAQA,EACN8vC,IA3sCiB,gCA8sC1B,SAAmBD,GACjB,IAAM95C,EAASoC,KAAKkkC,UAAS,SAAAiF,GAAK,OAAIuO,KAAOvO,OAC7C,IAAIvrC,EAAO4rC,SAAY5rC,EAAOqJ,KAE9B,OADIrJ,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WAC/BvmC,EAAOqJ,OAltCU,wBAqtC1B,SAAWywC,GACT,IAAM7vC,EAAQ7H,KAAK6H,MAAMu8B,QACnBxmC,EAAS85C,IAEf,YAAel4C,IAAX5B,IAAmC,IAAXA,EACnBA,OAEPoC,KAAK6H,MAAQA,KA5tCS,+BAiuC1B,SAAkB+vC,GAAM,WACtB,IAAI53C,KAAKgxC,mBAAT,CAIA,IACIta,EADAmhB,EAAY73C,KAAK6H,MAAMvL,KAQ3B,OALI0D,KAAKg9B,aAAa,SACpB6a,EAAYp3C,EAAQqE,KACpB4xB,EAAO,OAGF12B,KAAK83C,oBAAmB,WAC7B,OAAQD,GACN,KAAKp3C,EAAQ+D,UAEX,OADAozC,EAAKnY,SAAU,EACR,EAAKsY,uBAAuBH,GAAM,GAAO,GAElD,KAAKn3C,EAAQ4E,OAEX,OADAuyC,EAAKnY,SAAU,EACR,EAAKuY,WAAWJ,GAAM,GAAM,GAErC,KAAKn3C,EAAQsE,OACX,GAAI,EAAK1H,MAAMoD,EAAQsE,SAAW,EAAKwjC,sBAAsB,QAG3D,OAFA,EAAKjP,OAAO74B,EAAQsE,QACpB,EAAKy2B,iBAAiB,QACf,EAAKyc,uBAAuBL,GAAM,GAG7C,KAAKn3C,EAAQqE,KAEX,OADA4xB,EAAOA,GAAQ,EAAK7uB,MAAMtR,MACnB,EAAK2hD,kBAAkBN,EAAMlhB,GAEtC,KAAKj2B,EAAQjC,KAET,IAAMjI,EAAQ,EAAKsR,MAAMtR,MAEzB,MAAc,WAAVA,EACK,EAAK4hD,wCAAwCP,GAE7C,EAAKQ,mBAAmBR,EAAMrhD,GAAO,UA1wC9B,yCAixC1B,WACE,OAAOyJ,KAAKo4C,mBAAmBp4C,KAAKy2B,YAAaz2B,KAAK6H,MAAMtR,OAAO,KAlxC3C,wCAqxC1B,SAA2B0Q,EAAMg9B,GAC/B,OAAQA,EAAKzlC,MACX,IAAK,UAED,IAAMs/B,EAAc99B,KAAKq4C,kBAAkBpxC,GAE3C,GAAI62B,EAEF,OADAA,EAAY2B,SAAU,EACf3B,EAGT,MAGJ,IAAK,SACH,GAAI99B,KAAK3C,MAAMoD,EAAQY,QAAS,CAC9BrB,KAAKgY,MAAMulB,MAAMhnB,IACjBvW,KAAKk3C,UAAU3Z,MA17CX,GA27CJ,IAAM+a,EAAMrxC,EAMZ,OALAqxC,EAAIlB,QAAS,EACbkB,EAAI7/B,GAAKwrB,EACTqU,EAAIhhD,KAAO0I,KAAKm3C,qBAChBn3C,KAAKgY,MAAM2lB,OACX39B,KAAKk3C,UAAUvZ,OACR39B,KAAK42B,WAAW0hB,EAAK,uBAG9B,MAEF,QACE,OAAOt4C,KAAKo4C,mBAAmBnxC,EAAMg9B,EAAKzlC,MAAM,MAnzC5B,gCAuzC1B,SAAmByI,EAAM1Q,EAAOiiB,GAC9B,OAAQjiB,GACN,IAAK,WACH,GAAIyJ,KAAKu4C,sBAAsB//B,KAAUxY,KAAK3C,MAAMoD,EAAQ4E,SAAWrF,KAAK3C,MAAMoD,EAAQjC,OACxF,OAAOwB,KAAKw4C,2BAA2BvxC,GAGzC,MAEF,IAAK,OACH,GAAIuR,GAAQxY,KAAK3C,MAAMoD,EAAQjC,MAE7B,OADIga,GAAMxY,KAAKwY,OACRxY,KAAKi4C,uBAAuBhxC,GAAM,GAG3C,MAEF,IAAK,YACH,GAAIjH,KAAKu4C,sBAAsB//B,IAASxY,KAAK3C,MAAMoD,EAAQjC,MACzD,OAAOwB,KAAKy4C,4BAA4BxxC,GAG1C,MAEF,IAAK,SACH,GAAIjH,KAAKu4C,sBAAsB//B,GAAO,CACpC,GAAIxY,KAAK3C,MAAMoD,EAAQpF,QACrB,OAAO2E,KAAKm4C,wCAAwClxC,GAC/C,GAAIjH,KAAK3C,MAAMoD,EAAQjC,MAC5B,OAAOwB,KAAKi3C,oCAAoChwC,GAIpD,MAEF,IAAK,YACH,GAAIjH,KAAKu4C,sBAAsB//B,IAASxY,KAAK3C,MAAMoD,EAAQjC,MACzD,OAAOwB,KAAKi3C,oCAAoChwC,GAGlD,MAEF,IAAK,OACH,GAAIjH,KAAKu4C,sBAAsB//B,IAASxY,KAAK3C,MAAMoD,EAAQjC,MACzD,OAAOwB,KAAK04C,4BAA4BzxC,MAn2CtB,mCA02C1B,SAAsBuR,GACpB,OAAIA,GACExY,KAAK24C,0BACT34C,KAAKwY,QACE,IAGDxY,KAAKgxC,qBAj3CW,iDAo3C1B,SAAoC/Z,EAAU3jB,GAAU,WACtD,GAAKtT,KAAKy6B,aAAa,KAAvB,CAIA,IAAMme,EAA4B54C,KAAK6H,MAAM6kB,uBAC7C1sB,KAAK6H,MAAM6kB,wBAAyB,EACpC,IAAMirB,EAAM33C,KAAK64C,oBAAmB,WAClC,IAAM5xC,EAAO,EAAK8tB,YAAYkC,EAAU3jB,GAKxC,OAJArM,EAAKivB,eAAiB,EAAKka,wBAC3B,iDAA0BnpC,GAC1BA,EAAKm1B,WAAa,EAAK0c,0CACvB,EAAKxf,OAAO74B,EAAQ0B,OACb8E,KAIT,GAFAjH,KAAK6H,MAAM6kB,uBAAyBksB,EAE/BjB,EAIL,OAAO33C,KAAKyqC,qBAAqBkN,EAAK,MAAM,MAz4CpB,kCA44C1B,WAAuB,WACf1wC,EAAOjH,KAAKy2B,YAWlB,OAVAxvB,EAAK6B,OAAS9I,KAAKk1C,UAAS,kBAAM,EAAK6D,eAAc,WAEnD,OADA,EAAK3Y,iBAAiB,KACf,EAAKiP,qBAAqB,4BAA6B,EAAKkD,YAAYhzC,KAAK,UAG3D,IAAvB0H,EAAK6B,OAAOtR,QACdwI,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASa,oBAGlCvxB,KAAKogC,iBAAiB,KACfpgC,KAAK42B,WAAW3vB,EAAM,kCAx5CL,kCA25C1B,WACE,GAAIjH,KAAK3C,MAAMoD,EAAQjC,MACrB,OAAQwB,KAAK6H,MAAMtR,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,IAz6CiB,sCA46C1B,WACE,OAAIyJ,KAAKg5C,wBACT,+DA96CwB,qCAi7C1B,SAAwBlQ,EAAgBmQ,GACtC,IAEInK,EAFE7X,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAExBg+B,GAAW,EACX4H,GAAW,EAEf,QAAuB15C,IAAnBspC,EAA8B,CAChC,IAAMuF,EAAW,GACjBruC,KAAK4xC,iBAAiBvD,EAAU,CAAC,SAAU,UAAW,YAAa,WAAY,aAC/ES,EAAgBT,EAASS,cACzBoK,EAAW7K,EAAS6K,SACpB5H,EAAWjD,EAASiD,UAEG,IAAnBxI,IAA6BgG,GAAiBwC,GAAY4H,IAC5Dl5C,KAAKuX,MAAM0f,EAAUvG,GAASyC,6BAIlC,IAAM2U,EAAO9nC,KAAKm5C,oBAClBn5C,KAAKo5C,6BAA6BtR,GAClC,IAAMuR,EAAMr5C,KAAKm5C,kBAAkBrR,EAAKpwC,MAAOowC,EAAKlgC,IAAIlQ,MAAOowC,GAE/D,GAAIgH,GAAiBwC,GAAY4H,EAAU,CACzC,IAAMI,EAAKt5C,KAAK+0B,YAAYkC,EAAU3jB,GAetC,OAbI2lC,EAAWzhD,SACb8hD,EAAGL,WAAaA,GAGdnK,IAAewK,EAAGxK,cAAgBA,GAClCwC,IAAUgI,EAAGhI,SAAWA,GACxB4H,IAAUI,EAAGJ,SAAWA,GAEX,eAAbG,EAAI/8C,MAAsC,sBAAb+8C,EAAI/8C,MACnC0D,KAAKuX,MAAM+hC,EAAG5hD,MAAOg5B,GAAS8C,kCAGhC8lB,EAAGC,UAAYF,EACRr5C,KAAK42B,WAAW0iB,EAAI,uBAO7B,OAJIL,EAAWzhD,SACbswC,EAAKmR,WAAaA,GAGbI,IA/9CiB,wCAk+C1B,SAA2BpyC,EAAM3K,GAAwB,IAAlB+5B,EAAkB,wDACnDr2B,KAAK3C,MAAMoD,EAAQqB,SACrBmF,EAAKm1B,WAAap8B,KAAK8wC,qCAAqCrwC,EAAQqB,QAGtE,IAAM03C,EAAwB,wBAATl9C,EAAiC,oBAA+B,gBAATA,EAAyB,uBAAoBkD,EAErHg6C,IAAiBx5C,KAAK3C,MAAMoD,EAAQY,SAAWrB,KAAKgxC,mBACtDhxC,KAAK42B,WAAW3vB,EAAMuyC,GAIH,sBAAjBA,GAAwCx5C,KAAK6H,MAAMmlB,mBACrDhtB,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASS,kCAE5BlqB,EAAKw4B,SACP,8DAAiCx4B,EAAMuyC,EAAcnjB,GAKzD,8DAAiCpvB,EAAM3K,EAAM+5B,KAv/CrB,yCA0/C1B,SAA4BpvB,IACrBA,EAAK3P,MAAQ2P,EAAKwR,GACrBzY,KAAKkoC,UAAUjhC,EAAKwR,GAAI,gBAAiB1B,IAEzC,gEAAqClO,aA9/Cf,wCAkgD1B,SAA2B4wC,GAAO,WAChCA,EAAM96C,SAAQ,SAAAsI,GACgC,0BAA/B,MAARA,OAAe,EAASA,EAAK3K,OAChC,EAAKib,MAAMtQ,EAAKo1B,eAAe3kC,MAAOg5B,GAAS2C,+BArgD3B,8BA0gD1B,SAAiB4T,EAAUyS,GAEzB,OADA15C,KAAK25C,2BAA2B1S,GACzBA,IA5gDiB,4BA+gD1B,WAAwB,6BAANzuC,EAAM,yBAANA,EAAM,gBACtB,IAAMyO,GAAI,sEAA2BzO,IAMrC,MAJkB,oBAAdyO,EAAK3K,MACP0D,KAAK25C,2BAA2B1yC,EAAKO,UAGhCP,IAthDiB,4BAyhD1B,SAAeywB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAAO,WACvD,IAAK7H,KAAKguC,yBAA2BhuC,KAAK3C,MAAMoD,EAAQqC,MAAO,CAC7D9C,KAAK6H,MAAM4lB,aAAc,EACzBztB,KAAKwY,OACL,IAAMohC,EAAoB55C,KAAK+0B,YAAYkC,EAAU3jB,GAErD,OADAsmC,EAAkBnjD,WAAaihC,EACxB13B,KAAK42B,WAAWgjB,EAAmB,uBAG5C,GAAI55C,KAAKy6B,aAAa,KAAM,CAC1B,IAAM78B,EAASoC,KAAK64C,oBAAmB,WACrC,IAAKlhB,GAAW,EAAKkiB,qBAAqBniB,GAAO,CAC/C,IAAMoiB,EAAe,EAAKC,oCAAoC9iB,EAAU3jB,GAExE,GAAIwmC,EACF,OAAOA,EAIX,IAAM7yC,EAAO,EAAK8tB,YAAYkC,EAAU3jB,GACxCrM,EAAKqwB,OAASI,EACd,IAAMwS,EAAgB,EAAKsF,uBAE3B,GAAItF,EAAe,CACjB,IAAKvS,GAAW,EAAKqB,IAAIv4B,EAAQiB,QAS/B,OARAuF,EAAK4B,UAAY,EAAKihC,6BAA6BrpC,EAAQkB,QAAQ,GACnE,EAAKg4C,2BAA2B1yC,EAAK4B,WACrC5B,EAAKivB,eAAiBgU,EAElBriC,EAAM+vB,sBACR3wB,EAAKowB,UAAW,GAGX,EAAK8S,qBAAqBljC,EAAMY,EAAM+vB,qBACxC,GAAI,EAAKv6B,MAAMoD,EAAQ6B,WAAY,CACxC,IAAM1E,EAAS,EAAKo8C,8BAA8BtiB,EAAMT,EAAU3jB,EAAUzL,GAE5E,OADAjK,EAAOs4B,eAAiBgU,EACjBtsC,GAIX,EAAKk7B,gBAEP,GAAIl7B,EAAQ,OAAOA,EAGrB,yDAA4B85B,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,KAvkDvC,+BA0kD1B,SAAkBZ,GAAM,WACtB,GAAIjH,KAAKy6B,aAAa,KAAM,CAC1B,IAAMvE,EAAiBl2B,KAAK64C,oBAAmB,WAC7C,IAAMrgD,EAAO,EAAKg3C,uBAElB,OADK,EAAKnyC,MAAMoD,EAAQiB,SAAS,EAAKo3B,aAC/BtgC,KAGL09B,IACFjvB,EAAKivB,eAAiBA,GAI1B,qDAAwBjvB,KAvlDA,yBA0lD1B,SAAY6gC,EAAMmS,EAAcC,EAAcC,GAC5C,GAAI5pB,GAAQ9vB,EAAQmF,IAAIzF,OAASg6C,IAAYn6C,KAAKguC,yBAA2BhuC,KAAKg9B,aAAa,MAAO,CACpG,IAAM/1B,EAAOjH,KAAK+0B,YAAYklB,EAAcC,GAC5CjzC,EAAKxQ,WAAaqxC,EAElB,IAAM/iC,EAAS/E,KAAKi2C,gCAUpB,OAPEhvC,EAAKo1B,eADHt3B,GAGoB/E,KAAKk2C,sBAG7Bl2C,KAAK42B,WAAW3vB,EAAM,kBACtBjH,KAAKo6C,eACEp6C,KAAKq6C,YAAYpzC,EAAMgzC,EAAcC,EAAcC,GAG5D,sDAAyBrS,EAAMmS,EAAcC,EAAcC,KA5mDnC,+BA+mD1B,SAAkBlkC,EAAM3C,EAAUgnC,EAAe1T,MA/mDvB,mCAinD1B,cAjnD0B,yBAmnD1B,SAAY3/B,GAGV,GAFAA,EAAK+U,WAAa,QAEdhc,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK3C,MAAMoD,EAAQmD,OAAS5D,KAAK3C,MAAMoD,EAAQY,QAAS,CACtF,IAAIk5C,EAAQv6C,KAAKygC,YAQjB,IANIzgC,KAAKg9B,aAAa,SAAWud,EAAMj+C,OAASmE,EAAQmB,OAAW24C,EAAMj+C,OAASmE,EAAQjC,MAAwB,SAAhB+7C,EAAMhkD,OAAqBgkD,EAAMj+C,OAASmE,EAAQkC,KAClJsE,EAAK+U,WAAa,OAClBhc,KAAKwY,OACL+hC,EAAQv6C,KAAKygC,aAGXzgC,KAAK3C,MAAMoD,EAAQjC,OAAS+7C,EAAMj+C,OAASmE,EAAQkC,GACrD,OAAO3C,KAAKw6C,+BAA+BvzC,GAI/C,IAAMwzC,EAAa,EAAH,6CAAqBxzC,GAMrC,MAJ8B,SAA1BwzC,EAAWz+B,YAAyBy+B,EAAW1xC,WAAWvR,OAAS,GAAuC,2BAAlCijD,EAAW1xC,WAAW,GAAGzM,MACnG0D,KAAKuX,MAAMkjC,EAAW/iD,MAAOg5B,GAASwC,wCAGjCunB,IA1oDiB,yBA6oD1B,SAAYxzC,GACV,GAAIjH,KAAK3C,MAAMoD,EAAQ+E,SAUrB,OATAxF,KAAKwY,OAEDxY,KAAKg9B,aAAa,SAAwC,KAA7Bh9B,KAAKyzC,qBACpCxsC,EAAK+U,WAAa,OAClBhc,KAAKwY,QAELvR,EAAK+U,WAAa,QAGbhc,KAAKw6C,+BAA+BvzC,GAAM,GAC5C,GAAIjH,KAAKg5B,IAAIv4B,EAAQkC,IAAK,CAC/B,IAAMrK,EAAS2O,EAGf,OAFA3O,EAAO7B,WAAauJ,KAAKq5B,kBACzBr5B,KAAKu8B,YACEv8B,KAAK42B,WAAWt+B,EAAQ,sBAC1B,GAAI0H,KAAK68B,cAAc,MAAO,CACnC,IAAMgJ,EAAO5+B,EAIb,OAHAjH,KAAKw7B,iBAAiB,aACtBqK,EAAKptB,GAAKzY,KAAK47B,kBACf57B,KAAKu8B,YACEv8B,KAAK42B,WAAWiP,EAAM,gCAS7B,OAPI7lC,KAAKg9B,aAAa,SAAWh9B,KAAKygC,YAAYnkC,OAASmE,EAAQY,QACjErB,KAAKwY,OACLvR,EAAKk3B,WAAa,QAElBl3B,EAAKk3B,WAAa,QAGpB,+CAAyBl3B,KA5qDH,6BAgrD1B,WACE,OAAOjH,KAAKg9B,aAAa,aAAeh9B,KAAKygC,YAAYnkC,OAASmE,EAAQ4E,SAjrDlD,0CAorD1B,WACE,GAAIrF,KAAK06C,kBAAmB,CAC1B,IAAMC,EAAM36C,KAAKy2B,YAIjB,OAHAz2B,KAAKwY,OACLmiC,EAAIxH,UAAW,EACfnzC,KAAKg4C,WAAW2C,GAAK,GAAM,GACpBA,EAGT,GAAyB,cAArB36C,KAAK6H,MAAMtR,MAAuB,CACpC,IAAMqH,EAASoC,KAAKo4C,mBAAmBp4C,KAAKy2B,YAAaz2B,KAAK6H,MAAMtR,OAAO,GAC3E,GAAIqH,EAAQ,OAAOA,EAGrB,0EAlsDwB,mCAqsD1B,SAAsBmX,EAAS6uB,GAC7B,GAAI5jC,KAAK6H,MAAMvL,OAASmE,EAAQsE,OAAQ,CACtC,IAAMw1C,EAAQv6C,KAAKygC,YAEnB,GAAI8Z,EAAMj+C,OAASmE,EAAQjC,MAAwB,SAAhB+7C,EAAMhkD,MAAkB,CACzD,IAAM0Q,EAAOjH,KAAKy2B,YAGlB,OAFAz2B,KAAKs5B,OAAO74B,EAAQsE,QACpB/E,KAAKw7B,iBAAiB,QACfx7B,KAAKi4C,uBAAuBhxC,GAAM,IAI7C,gEAAmC8N,EAAS6uB,KAjtDpB,iCAotD1B,WACE,OAAO5jC,KAAK6uC,gBAAgB,CAAC,SAAU,YAAa,cArtD5B,gCAwtD1B,SAAmBzI,EAAQwU,GACzB,OAAOA,EAAUv8C,MAAK,SAAAs1B,GACpB,OAAID,GAAmBC,GACdyS,EAAO0I,gBAAkBnb,IAGzByS,EAAOzS,QA9tDM,8BAkuD1B,SAAiBmC,EAAWsQ,EAAQv+B,GAAO,WACnCgzC,EAAiC,CAAC,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,YAC7G76C,KAAK4xC,iBAAiBxL,EAAQyU,EAA+B78C,OAAO,CAAC,YAErE,IAAM88C,EAAmC,WACvC,IAAMva,IAAa6F,EAAO5F,OAEtBD,GAAY,EAAKvH,IAAIv4B,EAAQY,SAC3B,EAAK05C,mBAAmB3U,EAAQyU,IAClC,EAAKtjC,MAAM,EAAK1P,MAAMwL,IAAKqd,GAASsC,+BAGtC,EAAKgoB,sBAAsBllB,EAAWsQ,IAEtC,EAAK6U,6BAA6BnlB,EAAWsQ,EAAQv+B,EAAO04B,IAI5D6F,EAAO3G,QACTz/B,KAAK83C,mBAAmBgD,GAExBA,MAvvDsB,0CA2vD1B,SAA6BhlB,EAAWsQ,EAAQv+B,EAAO04B,GACrD,IAAMsR,EAAM7xC,KAAK8xC,yBAAyB1L,GAE1C,GAAIyL,EAmBF,OAlBA/b,EAAUx+B,KAAK6H,KAAK0yC,GAEhBzL,EAAO+M,UACTnzC,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAASkB,2BAGhCwU,EAAO0I,eACT9uC,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAASmB,+BAAgCuU,EAAO0I,eAGvE1I,EAAO3G,SACTz/B,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAASoB,+BAGhCsU,EAAO8S,UACTl5C,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAASqB,6BAMjC/xB,KAAK6H,MAAMolB,iBAAmBmZ,EAAO+M,UACxCnzC,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAAS2B,mCAGhC+T,EAAO8S,WACJrxC,EAAMqzC,eACTl7C,KAAKuX,MAAM6uB,EAAO1uC,MAAOg5B,GAAS8B,wBAItC,gEAAmCsD,EAAWsQ,EAAQv+B,EAAO04B,KA9xDrC,0CAiyD1B,SAA6B4a,GACVn7C,KAAKg5B,IAAIv4B,EAAQwB,YACpBk5C,EAAa9jB,UAAW,GAElC8jB,EAAa7J,UAAYtxC,KAAK3C,MAAMoD,EAAQiB,SAC9C1B,KAAKuX,MAAM4jC,EAAazjD,MAAOg5B,GAASK,wBAGtCoqB,EAAa1b,SAAWz/B,KAAK3C,MAAMoD,EAAQiB,SAC7C1B,KAAKuX,MAAM4jC,EAAazjD,MAAOg5B,GAASI,yBA1yDlB,sCA8yD1B,SAAyB7pB,EAAMg9B,GAE7B,OAD2B,eAAdA,EAAK3nC,KAAwB0D,KAAKo7C,2BAA2Bn0C,EAAMg9B,QAAQzkC,IACzE,EAAJ,0DAAmCyH,EAAMg9B,KAhzD5B,0CAmzD1B,WACE,QAAIjkC,KAAKg5C,wBACT,mEArzDwB,8BAwzD1B,SAAiB/U,EAAMhN,EAAU3jB,EAAU4jB,GAAqB,WAC9D,IAAKl3B,KAAK6H,MAAM6kB,yBAA2B1sB,KAAK3C,MAAMoD,EAAQwB,UAC5D,2DAA8BgiC,EAAMhN,EAAU3jB,EAAU4jB,GAG1D,IAAMt5B,EAASoC,KAAKkkC,UAAS,gEAA6BD,EAAMhN,EAAU3jB,MAE1E,OAAK1V,EAAOqJ,MAQRrJ,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WAC/BvmC,EAAOqJ,OARRrJ,EAAOvE,OACT,8DAAiC69B,EAAqBt5B,EAAOvE,OAGxD4qC,KAp0De,4BA20D1B,SAAeh9B,EAAMgwB,EAAU3jB,GAQ7B,GAPArM,EAAO,EAAH,gDAAwBA,EAAMgwB,EAAU3jB,GAExCtT,KAAKg5B,IAAIv4B,EAAQwB,YACnBgF,EAAKowB,UAAW,EAChBr3B,KAAKs8B,iBAAiBr1B,IAGpBjH,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAM8jC,EAAe5lC,KAAK+0B,YAAYkC,EAAU3jB,GAGhD,OAFAsyB,EAAanvC,WAAawQ,EAC1B2+B,EAAavJ,eAAiBr8B,KAAK6vC,wBAC5B7vC,KAAK42B,WAAWgP,EAAc,wBAGvC,OAAO3+B,IA11DiB,oCA61D1B,SAAuBA,GACrB,IAQI62B,EARE7G,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtB+nC,EAAYr7C,KAAK68B,cAAc,WAErC,GAAIwe,IAAcr7C,KAAKg9B,aAAa,aAAeh9B,KAAKs7C,gCACtD,MAAMt7C,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOg5B,GAASe,mCAsB9C,OAjBIzxB,KAAK3C,MAAMoD,EAAQjC,QACrBs/B,EAAc99B,KAAKu7C,+BAGhBzd,IACHA,EAAc,EAAH,wDAAgC72B,IAGzC62B,IAAqC,2BAArBA,EAAYxhC,MAA0D,2BAArBwhC,EAAYxhC,MAAqC++C,KACpHp0C,EAAKk3B,WAAa,QAGhBL,GAAeud,IACjBr7C,KAAKw7C,mBAAmB1d,EAAa7G,EAAU3jB,GAC/CwqB,EAAY2B,SAAU,GAGjB3B,IAz3DiB,0BA43D1B,SAAa72B,EAAMi/B,EAAaC,GAC9B,GAAMD,IAAeC,IAAenmC,KAAKg9B,aAAa,cAAtD,CAIA,gDAAmB/1B,EAAMi/B,EAAaC,EAAYl/B,EAAKw4B,QAAU1oB,GA5hMlDumB,KA6hMf,IAAMpH,EAAiBl2B,KAAK2wC,2BACxBza,IAAgBjvB,EAAKivB,eAAiBA,MAn4DlB,0CAs4D1B,SAA6BjvB,IACtBA,EAAKowB,UAAYr3B,KAAKg5B,IAAIv4B,EAAQqC,QACrCmE,EAAKw0C,UAAW,GAGlB,IAAMn/C,EAAO0D,KAAKqxC,2BACd/0C,IAAM2K,EAAKo1B,eAAiB//B,KA54DR,gCA+4D1B,SAAmB2K,GAOjB,OANAjH,KAAK07C,6BAA6Bz0C,GAE9BjH,KAAK6H,MAAMmlB,kBAAoBhtB,KAAK3C,MAAMoD,EAAQkC,KACpD3C,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAOg5B,GAASQ,iCAGxC,sDAAgCjqB,KAt5DR,uCAy5D1B,SAA0BA,GAUxB,OATIA,EAAKksC,UACPnzC,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASgC,2BAG9BzrB,EAAK6nC,eACP9uC,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAASiC,+BAAgC1rB,EAAK6nC,eAGvE9uC,KAAK07C,6BAA6Bz0C,GAClC,6DAAuCA,KAn6Df,6BAs6D1B,SAAgB6uB,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,GACtE,IAAME,EAAiBl2B,KAAK2wC,2BAExBza,GAAkBH,GACpB/1B,KAAKuX,MAAM2e,EAAex+B,MAAOg5B,GAASM,+BAGxCsE,EAAOmK,SAA4B,QAAhBnK,EAAOoB,MAAkC,QAAhBpB,EAAOoB,MACrD12B,KAAKuX,MAAM+d,EAAO59B,MAAOg5B,GAASO,gBAAiBqE,EAAOoB,MAGxDR,IAAgBZ,EAAOY,eAAiBA,GAC5C,mDAAsBJ,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,KAl7DtD,oCAq7D1B,SAAuBF,EAAWR,EAAQhF,EAAaD,GACrD,IAAM6F,EAAiBl2B,KAAK2wC,2BACxBza,IAAgBZ,EAAOY,eAAiBA,GAC5C,0DAA6BJ,EAAWR,EAAQhF,EAAaD,KAx7DrC,6BA27D1B,SAAgBppB,GACd,mDAAsBA,GAElBA,EAAKotB,YAAcr0B,KAAKy6B,aAAa,OACvCxzB,EAAKygC,oBAAsB1nC,KAAKwvC,wBAG9BxvC,KAAK68B,cAAc,gBACrB51B,EAAKy3B,WAAa1+B,KAAKu2C,sBAAsB,iBAn8DvB,+BAu8D1B,SAAkBvsB,GAAe,MACzBkM,EAAiBl2B,KAAK2wC,2BACxBza,IAAgBlM,EAAKkM,eAAiBA,GAFX,2BAAN19B,EAAM,iCAANA,EAAM,mBAG/B,iEAAwBwxB,GAAxB,OAAiCxxB,MA18DT,iCA68D1B,SAAoByO,EAAM6hC,GACxB,IAAM5S,EAAiBl2B,KAAK2wC,2BACxBza,IAAgBjvB,EAAKivB,eAAiBA,GAC1C,uDAA0BjvB,EAAM6hC,KAh9DR,wBAm9D1B,SAAWjD,EAAMnP,GACf,8CAAiBmP,EAAMnP,GAEF,eAAjBmP,EAAKptB,GAAGnc,MAAyB0D,KAAKg5B,IAAIv4B,EAAQqC,QACpD+iC,EAAK4V,UAAW,GAGlB,IAAMn/C,EAAO0D,KAAKqxC,2BAEd/0C,IACFupC,EAAKptB,GAAG4jB,eAAiB//B,EACzB0D,KAAKs8B,iBAAiBuJ,EAAKptB,OA99DL,+CAk+D1B,SAAkCxR,EAAM/H,GAKtC,OAJIc,KAAK3C,MAAMoD,EAAQqB,SACrBmF,EAAKm1B,WAAap8B,KAAK6vC,yBAGzB,qEAA+C5oC,EAAM/H,KAv+D7B,8BA0+D1B,WAA0B,QACpB8pC,EAAMC,EAAO0S,EAAWzS,EAAO0S,EAAYC,EAAOC,EAElDj0C,EACAowB,EACA8jB,EAiBkE,EAIlE7lB,EA1BoB,0BAAN19B,EAAM,yBAANA,EAAM,gBAOxB,GAAIwH,KAAKoJ,UAAU,SAAWpJ,KAAK3C,MAAMoD,EAAQ8uB,cAAgBvvB,KAAKy6B,aAAa,MAAO,CAGxF,GAFA5yB,EAAQ7H,KAAK6H,MAAMu8B,UACnBnM,EAAMj4B,KAAKkkC,UAAS,0FAAgC1rC,MAAOqP,IAClDxO,MAAO,OAAO4+B,EAAIhxB,KAC3B,IACE8N,EACE/U,KAAK6H,MADPkN,QAGEA,EAAQA,EAAQvd,OAAS,KAAOqd,EAAMqa,OACxCna,EAAQvd,QAAU,EACTud,EAAQA,EAAQvd,OAAS,KAAOqd,EAAMua,SAC/Cra,EAAQvd,QAAU,GAItB,IAAsB,OAAfwxC,EAAO/Q,KAAgB+Q,EAAK3vC,SAAW2G,KAAKy6B,aAAa,KAC9D,+EAAiCjiC,IAInCqP,EAAQA,GAAS7H,KAAK6H,MAAMu8B,QAC5B,IAAMjiC,EAAQnC,KAAKkkC,UAAS,SAAAiF,GAAS,MAC/B/B,EAAa4U,EAEjB9lB,EAAiB,EAAKka,wBACtB,IAAMnM,GAAI,kEAA6BzrC,IAWvC,OATkB,4BAAdyrC,EAAK3nC,MAAoE,OAA7B8qC,EAAcnD,EAAKjP,QAAkBoS,EAAY5R,gBAC/F2T,IAG4F,KAAnD,OAArC6S,EAAkB9lB,QAA0B,EAAS8lB,EAAgBlzC,OAAOtR,SAChF,EAAK8xC,2BAA2BrF,EAAM/N,GAGxC+N,EAAK/N,eAAiBA,EACf+N,IACNp8B,GACH,IAAK1F,EAAM9I,QAAU8I,EAAMqnC,QAAS,OAAOrnC,EAAM8E,KAEjD,IAAKgxB,IACHxH,IAAQzwB,KAAKoJ,UAAU,UACvB2yC,EAAW/7C,KAAKkkC,UAAS,0FAAgC1rC,MAAOqP,IAClDxO,OAAO,OAAO0iD,EAAS90C,KAGvC,GAAqB,OAAhBgiC,EAAQhR,IAAgBgR,EAAMhiC,KAEjC,OADAjH,KAAK6H,MAAQowB,EAAIkM,UACVlM,EAAIhxB,KAGb,GAAI9E,EAAM8E,KAER,OADAjH,KAAK6H,MAAQ1F,EAAMgiC,UACZhiC,EAAM8E,KAGf,GAA8B,OAAzB00C,EAAYI,IAAqBJ,EAAU10C,KAE9C,OADAjH,KAAK6H,MAAQk0C,EAAS5X,UACf4X,EAAS90C,KAGlB,GAAqB,OAAhBiiC,EAAQjR,IAAgBiR,EAAMQ,OAAQ,MAAMzR,EAAI5+B,MACrD,GAAI8I,EAAMunC,OAAQ,MAAMvnC,EAAM9I,MAC9B,GAA+B,OAA1BuiD,EAAaG,IAAqBH,EAAWlS,OAAQ,MAAMqS,EAAS1iD,MACzE,MAAwB,OAAhBwiD,EAAQ5jB,QAAe,EAAS4jB,EAAMxiD,QAAU8I,EAAM9I,QAAqC,OAA1ByiD,EAAaC,QAAoB,EAASD,EAAWziD,SAjjEtG,6BAojE1B,SAAgB69B,GACd,OAAKl3B,KAAKoJ,UAAU,QAAUpJ,KAAKy6B,aAAa,KACvCz6B,KAAKi8C,uBAEZ,mDAA6B/kB,KAxjEP,wBA4jE1B,SAAWjwB,GAAM,WACf,GAAIjH,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAMlE,EAASoC,KAAKkkC,UAAS,SAAAiF,GAC3B,IAAM/M,EAAa,EAAK0U,qCAAqCrwC,EAAQqB,OAErE,OADI,EAAKihC,sBAAyB,EAAK1lC,MAAMoD,EAAQ0B,QAAQgnC,IACtD/M,KAET,GAAIx+B,EAAO4rC,QAAS,OAEf5rC,EAAO8rC,SACN9rC,EAAOvE,QAAO2G,KAAK6H,MAAQjK,EAAOumC,WACtCl9B,EAAKm1B,WAAax+B,EAAOqJ,MAI7B,qDAAwBA,KA3kEA,0CA8kE1B,SAA6Bo8B,GACvBrjC,KAAKg5B,IAAIv4B,EAAQwB,YACA,eAAfohC,EAAM/mC,MAA0B0D,KAAK6H,MAAMmlB,kBAAqBhtB,KAAK6H,MAAM+kB,QAC7E5sB,KAAKuX,MAAM8rB,EAAM3rC,MAAOg5B,GAAS+B,mBAGnC4Q,EAAMhM,UAAW,GAGnB,IAAM/6B,EAAO0D,KAAKqxC,2BAGlB,OAFI/0C,IAAM+mC,EAAMhH,eAAiB//B,GACjC0D,KAAKs8B,iBAAiB+G,GACfA,IA1lEiB,0BA6lE1B,SAAap8B,GAAqB,IAAfkwB,EAAe,wDAChC,OAAQlwB,EAAK3K,MACX,IAAK,uBACH,uDAA0B0D,KAAKgnC,oBAAoB//B,GAAOkwB,GAE5D,IAAK,sBACH,uDAA0BlwB,EAAMkwB,GAElC,IAAK,0BACH,OAAOn3B,KAAKk8C,oCAAoCj1C,EAAMkwB,GAExD,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADAlwB,EAAKxQ,WAAauJ,KAAKo3B,aAAanwB,EAAKxQ,WAAY0gC,GAC9ClwB,EAET,QACE,uDAA0BA,EAAMkwB,MA/mEZ,iDAmnE1B,SAAoClwB,EAAMkwB,GACxC,OAAQlwB,EAAKxQ,WAAW6F,MACtB,IAAK,iBACL,IAAK,sBACL,IAAK,kBACL,IAAK,0BAEH,OADA2K,EAAKxQ,WAAauJ,KAAKo3B,aAAanwB,EAAKxQ,WAAY0gC,GAC9ClwB,EAET,QACE,uDAA0BA,EAAMkwB,MA7nEZ,uBAioE1B,SAAU8M,EAAM+D,GAA6B,UACvCmU,EADuC,mBAAN3jD,EAAM,iCAANA,EAAM,kBAG3C,OAAQyrC,EAAK3nC,MACX,IAAK,uBACH,OAEF,IAAK,sBAEH,YADA0D,KAAKkoC,UAAL,MAAAloC,KAAA,CAAeikC,EAAKsV,UAAW,sBAA/B,OAAwD/gD,IAG1D,IAAK,iBACL,IAAK,kBACH,IAAKA,EAAK,IAA6B,6BAAvBwvC,IAAsF,OAA9BmU,EAAelY,EAAKjP,SAAkBmnB,EAAa3mB,eAAgB,CACzIx1B,KAAKuX,MAAM0sB,EAAKvsC,MAAO+R,EAAcuD,WAAYg7B,GACjD,MAIF,YADAhoC,KAAKkoC,UAAL,MAAAloC,KAAA,CAAeikC,EAAKxtC,WAAY,4BAAhC,OAA+D+B,IAGjE,IAAK,sBAEH,YADAwH,KAAKkoC,UAAL,MAAAloC,KAAA,CAAeikC,EAAKxtC,WAAYuxC,GAAhC,OAAuDxvC,IAGzD,QAEE,YADA,yDAAgByrC,EAAM+D,GAAtB,OAA6CxvC,OA3pEzB,8BAgqE1B,WACE,OAAQwH,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQ0E,MACX,OAAOnF,KAAK47B,iBAAgB,GAE9B,QACE,+DAtqEoB,0CA0qE1B,SAA6BqI,GAC3B,GAAIjkC,KAAKy6B,aAAa,KAAM,CAC1B,IAAMyP,EAAgBlqC,KAAKwvC,uBAE3B,GAAIxvC,KAAK3C,MAAMoD,EAAQiB,QAAS,CAC9B,IAAMxC,EAAO,EAAH,8DAAsC+kC,GAEhD,OADA/kC,EAAKg3B,eAAiBgU,EACfhrC,EAGTc,KAAK84B,WAAW94B,KAAK6H,MAAMnQ,MAAO+I,EAAQiB,QAG5C,uEAA0CuiC,KAvrElB,iCA0rE1B,SAAoBoD,GACdrnC,KAAK6H,MAAMmlB,kBAAoBhtB,KAAK3C,MAAMoD,EAAQmB,QAAU5B,KAAKyzC,sBAAwBpM,EAC3FrnC,KAAKwY,OAEL,uDAA0B6uB,KA9rEJ,2BAksE1B,WACE,OAAOrnC,KAAKy6B,aAAa,MAAlB,iCAAAz6B,MAAA,KAAAA,QAnsEiB,6BAssE1B,WACE,OAAOA,KAAK3C,MAAMoD,EAAQqC,OAAS9C,KAAK3C,MAAMoD,EAAQqB,QAA/C,mCAAA9B,MAAA,KAAAA,QAvsEiB,+BA0sE1B,WAA2B,6BAANxH,EAAM,yBAANA,EAAM,gBACzB,IAAMyO,GAAI,yEAA8BzO,IAMxC,MAJkB,sBAAdyO,EAAK3K,MAAgC2K,EAAKo1B,gBAAkBp1B,EAAKs4B,MAAM7nC,MAAQuP,EAAKo1B,eAAe3kC,OACrGsI,KAAKuX,MAAMtQ,EAAKo1B,eAAe3kC,MAAOg5B,GAASuC,2BAG1ChsB,IAjtEiB,8BAotE1B,SAAiBhQ,GACf,OAAI+I,KAAK6H,MAAM+kB,QAAoB,KAAT31B,GAAwB,KAATA,EAGvC,oDAA8BA,GAFvB+I,KAAKwmC,SAAS/lC,EAAQ+C,WAAY,KAttEnB,0BA4tE1B,WACE,GAAIxD,KAAK3C,MAAMoD,EAAQ+C,YAAa,CAClC,IAAMvM,EAAO+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMnQ,OAEjC,KAATT,GAAwB,KAATA,IACjB+I,KAAK6H,MAAMwL,KAAO,EAClBrT,KAAKo8C,gBAAgBnlD,OAluED,8BAuuE1B,SAAiBgwC,GACf,IAAK,IAAIpoC,EAAI,EAAGA,EAAIooC,EAASzvC,OAAQqH,IAAK,CACxC,IAAMolC,EAAOgD,EAASpoC,GACtB,GAAKolC,EAEL,OAAQA,EAAK3nC,MACX,IAAK,uBACH2qC,EAASpoC,GAAKmB,KAAKgnC,oBAAoB/C,GACvC,MAEF,IAAK,iBACL,IAAK,kBACEjkC,KAAK6H,MAAM6kB,uBAGd1sB,KAAKuX,MAAM0sB,EAAKvsC,MAAOg5B,GAAS4C,+BAFhC2T,EAASpoC,GAAKmB,KAAKgnC,oBAAoB/C,IAS/C,4DAAiCp7B,aA7vET,iCAgwE1B,SAAoB5B,GAGlB,OAFAA,EAAKxQ,WAAW4lC,eAAiBp1B,EAAKo1B,eACtCr8B,KAAKs8B,iBAAiBr1B,EAAKxQ,WAAYwQ,EAAKo1B,eAAex1B,IAAKI,EAAKo1B,eAAez0B,IAAIf,KACjFI,EAAKxQ,aAnwEY,8BAswE1B,WACE,OAAOuJ,KAAK3C,MAAMoD,EAAQqB,QAAnB,oCAAA9B,MAAA,KAAAA,QAvwEiB,mCA0wE1B,WACE,OAAOA,KAAK3C,MAAMoD,EAAQqB,QAAnB,yCAAA9B,MAAA,KAAAA,QA3wEiB,qCA8wE1B,WACE,OAAO,6DAAmCA,KAAK06C,oBA/wEvB,6CAkxE1B,SAAgCzzC,GAAM,WACpC,GAAIjH,KAAKy6B,aAAa,KAAM,CAC1B,IAAMyP,EAAgBlqC,KAAK64C,oBAAmB,kBAAM,EAAKrJ,0BACrDtF,IAAejjC,EAAKivB,eAAiBgU,GAG3C,0EAA6CjjC,KAxxErB,+CA2xE1B,SAAkCquB,GAChC,IAAM+mB,EAAY,EAAH,mEAA2C/mB,GAEpDgnB,EADSt8C,KAAK4nC,6BAA6BtS,GACvB,GAE1B,OADwBgnB,GAAct8C,KAAKynC,YAAY6U,GAC9BD,EAAY,EAAIA,IAhyEjB,mCAmyE1B,WACE,IAAMhZ,EAAQ,EAAH,wDACL/mC,EAAO0D,KAAKqxC,2BAOlB,OALI/0C,IACF+mC,EAAMhH,eAAiB//B,EACvB0D,KAAKs8B,iBAAiB+G,IAGjBA,IA5yEiB,gCA+yE1B,SAAmBmT,GACjB,IAAM+F,EAAsBv8C,KAAK6H,MAAMmlB,iBACvChtB,KAAK6H,MAAMmlB,kBAAmB,EAE9B,IACE,OAAOwpB,IADT,QAGEx2C,KAAK6H,MAAMmlB,iBAAmBuvB,KAtzER,wBA0zE1B,SAAWt1C,GACT,IAAMu1C,EAAqBx8C,KAAK6H,MAAMolB,gBACtCjtB,KAAK6H,MAAMolB,kBAAoBhmB,EAAKksC,SAEpC,IAAI,6BAJc36C,EAId,iCAJcA,EAId,kBACF,iEAAwByO,GAAxB,OAAiCzO,IADnC,QAGEwH,KAAK6H,MAAMolB,gBAAkBuvB,KAj0EP,wCAq0E1B,SAA2Bv1C,GACzB,GAAIjH,KAAK3C,MAAMoD,EAAQ4E,QAErB,OADA4B,EAAKksC,UAAW,EACTnzC,KAAKg4C,WAAW/wC,GAAM,GAAM,GAC9B,GAAIjH,KAAKg9B,aAAa,cAC3B,IAAKh9B,KAAK24C,wBAIR,OAHA1xC,EAAKksC,UAAW,EAChBnzC,KAAKuX,MAAMtQ,EAAKvP,MAAOg5B,GAAS4B,0CAChCtyB,KAAKwY,OACExY,KAAKy4C,4BAA4BxxC,QAG1CjH,KAAK84B,WAAW,KAAMr4B,EAAQ4E,UAj1ER,yBAq1E1B,WAAqB,6BAAN7M,EAAM,yBAANA,EAAM,gBACnB,IAAM88B,GAAM,mEAAwB98B,IAEpC,GAAI88B,EAAO6d,SAAU,CACnB,IAAMsJ,EAAUz8C,KAAKoJ,UAAU,YAAcksB,EAAO/+B,MAAMe,OAASg+B,EAAOh+B,KAE1E,GAAImlD,EAAS,CACX,IACE19C,EACEu2B,EADFv2B,IAEFiB,KAAKuX,MAAM+d,EAAO59B,MAAOg5B,GAASC,gCAA8C,eAAb5xB,EAAIzC,KAAwByC,EAAIP,KAAhC,WAA2CwB,KAAK0I,MAAMnR,MAAMwH,EAAIrH,MAAOqH,EAAI8H,KAA3E,OAIvE,OAAOyuB,IAn2EiB,sCAs2E1B,WAEE,OADiBt1B,KAAK47B,kBACNp9B,OAx2EQ,yCA22E1B,WACE,QAASwB,KAAK8zB,gBAAgB,aAAc,SA52EpB,mBA+2E1B,WAKE,OAJI9zB,KAAK08C,gCACP18C,KAAK6H,MAAMmlB,kBAAmB,GAGhC,4CAp3EwB,2BAu3E1B,WAKE,OAJIhtB,KAAK08C,gCACP18C,KAAK6H,MAAMmlB,kBAAmB,GAGhC,sDA53EwB,GAAkBqH,IA8sF5CsoB,YA7GiB,SAAAtoB,GAAU,qIAC3B,WACE,GAAIr0B,KAAK3C,MAAMoD,EAAQkD,QAAS,CAC9B,IAAMi5C,EAAmB58C,KAAK6H,MAAMnQ,MAC9BuP,EAAOjH,KAAKy2B,YAGlB,GAFAz2B,KAAKg5B,IAAIv4B,EAAQkD,QAEb3D,KAAK3C,MAAMoD,EAAQjC,MAAO,CAC5B,IAAMA,EAAOwB,KAAK68C,oBAAoB78C,KAAK6H,MAAMnQ,OAC3ColD,EAAa98C,KAAK0xC,iBAAiBzqC,EAAMzI,GAG/C,GAFAs+C,EAAWxgD,KAAO,wBAEd0D,KAAK3C,MAAMoD,EAAQiB,QACrB,OAAOo7C,EAIX98C,KAAK84B,WAAW8jB,MAjBO,2BAqB3B,WACE,OAAO58C,KAAK+8C,oBAAL,iCAAA/8C,MAAA,MAAAA,KAAkD6I,eAtBhC,GAAkBwrB,IA8G7Cj2B,aAxUkB,SAAAi2B,GAAU,qIAC5B,SAAiB2oB,GACf,GAAIh9C,KAAK3C,MAAMoD,EAAQnC,aAAc,CACnC,IAAM2I,EAAOjH,KAAKy2B,YAMlB,OALAz2B,KAAKwY,OACLxY,KAAKi9C,cAAc,oCACnBh2C,EAAKzI,KAAL,oDAAkC,GAClCwB,KAAKi9C,cAAc,oCACnBj9C,KAAKs5B,OAAO74B,EAAQnC,aACb0B,KAAKk9C,kBAAkBj2C,EAAM+1C,MATZ,+BAa5B,SAAkB/1C,EAAM+1C,GACtB,IAAMG,KAAgBl2C,EAAK+1C,cAA8B,gBAAd/1C,EAAK3K,MAEhD,OADA2K,EAAK+1C,aAAeA,EACbG,EAAal2C,EAAOjH,KAAK42B,WAAW3vB,EAAM,iBAhBvB,8BAmB5B,SAAiBhQ,GACf,OAAa,KAATA,GAA6D,KAA9C+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GACjDrT,KAAKwmC,SAAS/lC,EAAQnC,YAAa,GAG5C,qDAAiCuK,aAxBP,2BA2B5B,WACE,OAAO7I,KAAKo9C,iBAAiB,eAAtB,iCAAAp9C,MAAA,MAAAA,KAA8D6I,aA5B3C,6BA+B5B,WACE,OAAO7I,KAAKo9C,iBAAiB,eAAtB,mCAAAp9C,MAAA,MAAAA,KAAgE6I,aAhC7C,+BAmC5B,SAAkBoN,QACHzW,IAATyW,GAAoB,sDAA2BpN,aApCzB,8BAuC5B,WACE,OAAO7I,KAAKo9C,iBAAiB,YAAtB,oCAAAp9C,MAAA,MAAAA,KAA8D6I,aAxC3C,uBA2C5B,SAAUo7B,GACU,gBAAdA,EAAK3nC,MAAwB,8CAAmBuM,aA5C1B,0BA+C5B,SAAa5B,GACX,OAAIA,GAAsB,gBAAdA,EAAK3K,MAAgD,eAAtB2K,EAAK+1C,cAC9C/1C,EAAK+1C,aAAe,UACb/1C,GAGT,iDAA6B4B,aArDH,mBAwD5B,SAAMkM,GACJ,iDAAgBA,MAIX/U,KAAKg9B,aAAa,UAInBjoB,GACc/U,KAAKygC,YAETnkC,OAASmE,EAAQnC,eApEL,iCA2E5B,SAAoB2I,GACdA,EAAKnH,OAA6B,gBAApBmH,EAAKnH,MAAMxD,MAC7B,wDAA6BuM,aA7EH,sCAgF5B,SAAyB5B,EAAMg9B,GAC7B,GAAkB,gBAAdA,EAAK3nC,MAA0B2nC,EAAKjP,OAASiP,EAAKjP,MAAMQ,cAC1D,oEAAyC3sB,WAG3C,GAAI7I,KAAK3C,MAAMoD,EAAQqB,OAAQ,CAC7B,IAAMnK,EAAOsP,EAIb,OAHAtP,EAAKmI,MAAQE,KAAKk9C,kBAAkBjZ,EAAM,cAC1CjkC,KAAKwY,OACL7gB,EAAKL,KAAO0I,KAAKq9C,eAAe,SACzBr9C,KAAK42B,WAAWj/B,EAAM,oBAK/B,OAFAqI,KAAKu8B,YACLt1B,EAAKzI,KAAOylC,EAAKzlC,KACVwB,KAAKk9C,kBAAkBj2C,EAAM,eA/FV,wBAkG5B,WACE,OAAOjH,KAAKo9C,iBAAiB,mBAAtB,8BAAAp9C,MAAA,MAAAA,KAA+D6I,aAnG5C,6BAsG5B,WACE,OAAO7I,KAAKo9C,iBAAiB,eAAtB,mCAAAp9C,MAAA,MAAAA,KAAgE6I,aAvG7C,wBA0G5B,SAAW5B,EAAMi/B,EAAaC,GAC5B,IAAM7pC,EAAO4pC,EAAc,mBAAqB,kBAChDlmC,KAAKwY,OACLxY,KAAKs9C,eAAer2C,GACpB,IAAMs2C,EAAYv9C,KAAK6H,MAAMwkB,OACvB/tB,EAAc0B,KAAKo9C,iBAAiB,cAE1C,GAAI9+C,EACF,GAAI0B,KAAK3C,MAAMoD,EAAQ6E,WAAatF,KAAK3C,MAAMoD,EAAQnC,cAAgB0B,KAAK3C,MAAMoD,EAAQY,QACxF4F,EAAKwR,GAAKna,MACL,IAAI6nC,IAAeD,EAGxB,OAFAj/B,EAAKwR,GAAK,KACVxR,EAAK3P,KAAO0I,KAAKk9C,kBAAkB5+C,EAAa,aACzC0B,KAAK42B,WAAW3vB,EAAM3K,GAE7B0D,KAAK84B,WAAW,KAAMlF,GAAkBC,0BAG1C7zB,KAAKw9C,aAAav2C,EAAMi/B,EAAaC,GAKvC,OAFAnmC,KAAKy9C,gBAAgBx2C,GACrBA,EAAK3P,KAAO0I,KAAKo9C,iBAAiB,cAAgBp9C,KAAK09C,iBAAiBz2C,EAAKotB,WAAYkpB,GAClFv9C,KAAK42B,WAAW3vB,EAAM3K,KAjIH,yBAoI5B,SAAY2K,GACV,IAAM3I,EAAc0B,KAAKo9C,iBAAiB,cAC1C,IAAK9+C,EAAa,OAAO,EAAP,8CAA4BuK,WAE9C,IAAK7I,KAAKg9B,aAAa,UAAYh9B,KAAK3C,MAAMoD,EAAQmB,OAIpD,OAHAqF,EAAK8B,WAAa,GAClB9B,EAAKb,OAAS,KACda,EAAK62B,YAAc99B,KAAKk9C,kBAAkB5+C,EAAa,eAChD0B,KAAK42B,WAAW3vB,EAAM,0BAG/BjH,KAAK29C,aAAa,qBAClB,IAAM5V,EAAY/nC,KAAKy2B,YAGvB,OAFAsR,EAAUtQ,SAAWn5B,EACrB2I,EAAK8B,WAAa,CAAC/I,KAAK42B,WAAWmR,EAAW,2BAC9C,+CAAyB9gC,KAnJC,sCAsJ5B,WACE,GAAIjH,KAAK3C,MAAMoD,EAAQnB,UAAW,CAChC,IAAMkZ,EAAOxY,KAAK4tC,iBAElB,GAAI5tC,KAAK49C,qBAAqBplC,EAAM,SAC9BxY,KAAK0I,MAAMm1C,WAAWp9C,EAAQnC,YAAYwB,MAAOE,KAAK89C,oBAAoBtlC,EAAO,IACnF,OAAO,EAKb,sEAjK0B,8CAoK5B,SAAiCvR,GAC/B,SAAIA,EAAK8B,YAAc9B,EAAK8B,WAAWvR,OAAS,IAIhD,qEAAiDqR,aAzKvB,yBA4K5B,SAAY5B,GACV,IACE8B,EACE9B,EADF8B,WAGgB,MAAdA,GAAsBA,EAAWvR,SACnCyP,EAAK8B,WAAaA,EAAWg1C,QAAO,SAAA92C,GAAI,MAA2B,gBAAvBA,EAAKwwB,SAASn7B,SAG5D,+CAAkB2K,GAClBA,EAAK8B,WAAaA,IAtLQ,yBAyL5B,SAAY9B,GACV,IAAM3I,EAAc0B,KAAKo9C,iBAAiB,cAC1C,IAAK9+C,EAAa,OAAO,EAAP,8CAA4BuK,WAG9C,GAFA5B,EAAK8B,WAAa,IAEb/I,KAAKg9B,aAAa,UAAYh9B,KAAK3C,MAAMoD,EAAQmB,OAGpD,OAFAqF,EAAKb,OAASpG,KAAKk9C,kBAAkB5+C,EAAa,iBAClD0B,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,qBAG/B,IAAM8gC,EAAY/nC,KAAKg4B,gBAAgB15B,GAKvC,GAJAypC,EAAUE,MAAQ3pC,EAClB0B,KAAK42B,WAAWmR,EAAW,0BAC3B9gC,EAAK8B,WAAW5J,KAAK4oC,GAEjB/nC,KAAKg5B,IAAIv4B,EAAQmB,OAAQ,CAC3B,IAAMo8C,EAAgBh+C,KAAKi+C,8BAA8Bh3C,GACpD+2C,GAAeh+C,KAAKk+C,2BAA2Bj3C,GAMtD,OAHAjH,KAAKw7B,iBAAiB,QACtBv0B,EAAKb,OAASpG,KAAKm+C,oBACnBn+C,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,uBAjNH,+BAoN5B,WACE,OAAOjH,KAAKo9C,iBAAiB,kBAAtB,qCAAAp9C,MAAA,MAAAA,KAAqE6I,eArNlD,GAAkBwrB,KA0U1C+pB,GAAmBhoD,OAAO0I,KAAKq1B,IAE/BkqB,GAAiB,CACrBvwB,WAAY,SACZwwB,oBAAgB9+C,EAChBuuB,UAAW,EACXwwB,2BAA2B,EAC3BC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,yBAAyB,EACzBC,wBAAwB,EACxBz1C,QAAS,GACT2kB,WAAY,KACZ+wB,QAAQ,EACRC,QAAQ,EACRC,gCAAgC,EAChC1qC,eAAe,GAYjB,IAAI2qC,GAAW,SAAiB9nD,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,IAEzB+nD,GAAoB,IAAIpkD,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC3DqkD,GAAoC,CACxCC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACzCC,IAAK,CAAC,GAAI,GAAI,GAAI,MAEdC,GAAkC,CACxCA,IAAsC,CAAC,GAAI,KAC3CA,GAAgCC,IAAhC,YAA0CD,GAAgCE,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,KACnGF,GAAgCG,IAAhC,YAA0CH,GAAgCC,KAA1E,CAA+E,GAAI,KACnFD,GAAgCD,IAAhC,YAA0CC,GAAgCG,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,M,IACvHC,GACJ,WAAY33C,GAAO,UACjB7H,KAAK1D,KAAOuL,EAAMvL,KAClB0D,KAAKzJ,MAAQsR,EAAMtR,MACnByJ,KAAKtI,MAAQmQ,EAAMnQ,MACnBsI,KAAK6G,IAAMgB,EAAMhB,IACjB7G,KAAK4H,IAAM,IAAIhB,EAAeiB,EAAMyL,SAAUzL,EAAM4L,SAIlDgsC,G,8BACJ,WAAYtlD,EAASuO,GAAO,wBAC1B,gBACKgM,iBAAc,EACnB,EAAKmqC,OAAS,GACd,EAAKh3C,MAAQ,IAAIukB,GACjB,EAAKvkB,MAAMgkC,KAAK1xC,GAChB,EAAKuO,MAAQA,EACb,EAAKlR,OAASkR,EAAMlR,OACpB,EAAKkd,aAAc,EARO,E,mCAW5B,SAAUvY,GACR6D,KAAK6+C,OAAOrnD,OAASwI,KAAK6H,MAAM+lB,aAChC5tB,KAAK6+C,OAAO1/C,KAAKhD,KACf6D,KAAK6H,MAAM+lB,e,kBAGf,WACE5tB,KAAK0/C,sBAED1/C,KAAK7F,QAAQ0kD,QACf7+C,KAAK2/C,UAAU,IAAIH,GAAMx/C,KAAK6H,QAGhC7H,KAAK6H,MAAM6L,WAAa1T,KAAK6H,MAAMhB,IACnC7G,KAAK6H,MAAM0L,aAAevT,KAAK6H,MAAMnQ,MACrCsI,KAAK6H,MAAM8L,cAAgB3T,KAAK6H,MAAM4L,OACtCzT,KAAK6H,MAAM2L,gBAAkBxT,KAAK6H,MAAMyL,SACxCtT,KAAK0qC,c,iBAGP,SAAIpuC,GACF,QAAI0D,KAAK3C,MAAMf,KACb0D,KAAKwY,QACE,K,mBAMX,SAAMlc,GACJ,OAAO0D,KAAK6H,MAAMvL,OAASA,I,kCAG7B,SAAqBuL,GACnB,MAAO,CACLwL,IAAKxL,EAAMwL,IACX9c,MAAO,KACP+F,KAAMuL,EAAMvL,KACZ5E,MAAOmQ,EAAMnQ,MACbmP,IAAKgB,EAAMhB,IACX6M,WAAY7L,EAAMhB,IAClBkO,QAAS,CAAC/U,KAAK46B,cACfhO,OAAQ/kB,EAAM+kB,U,uBAIlB,WACE,IAAMgzB,EAAM5/C,KAAK6H,MACjB7H,KAAK6H,MAAQ7H,KAAK6/C,qBAAqBD,GACvC5/C,KAAK0U,aAAc,EACnB1U,KAAK0qC,YACL1qC,KAAK0U,aAAc,EACnB,IAAMorC,EAAO9/C,KAAK6H,MAElB,OADA7H,KAAK6H,MAAQ+3C,EACNE,I,4BAGT,WACE,OAAO9/C,KAAK89C,oBAAoB99C,KAAK6H,MAAMwL,O,iCAG7C,SAAoBA,GAGlB,OAFA/M,EAAeuN,UAAYR,EAEpBA,EADM/M,EAAehJ,KAAK0C,KAAK0I,OACpB,GAAGlR,S,+BAGvB,WACE,OAAOwI,KAAK0I,MAAMC,WAAW3I,KAAK4tC,oB,4BAGpC,SAAev6B,GACb,IAAI0sC,EAAK//C,KAAK0I,MAAMC,WAAW0K,GAE/B,GAAsB,SAAZ,MAAL0sC,MAA6B1sC,EAAMrT,KAAK0I,MAAMlR,OAAQ,CACzD,IAAMwoD,EAAQhgD,KAAK0I,MAAMC,WAAW0K,GAEX,SAAZ,MAAR2sC,KACHD,EAAK,QAAiB,KAALA,IAAe,KAAe,KAARC,IAI3C,OAAOD,I,uBAGT,SAAU1zB,GAAQ,WAChBrsB,KAAK6H,MAAMwkB,OAASA,EAEhBA,IACFrsB,KAAK6H,MAAM8lB,aAAahvB,SAAQ,SAACsV,EAASZ,GAAV,OAAkB,EAAKkE,MAAMlE,EAAKY,MAClEjU,KAAK6H,MAAM8lB,aAAasyB,W,wBAI5B,WACE,OAAOjgD,KAAK6H,MAAMkN,QAAQ/U,KAAK6H,MAAMkN,QAAQvd,OAAS,K,uBAGxD,WACE,IAAMojC,EAAa56B,KAAK46B,aACnBA,EAAWhmB,eAAe5U,KAAKkgD,YACpClgD,KAAK6H,MAAMnQ,MAAQsI,KAAK6H,MAAMwL,IACzBrT,KAAK0U,cAAa1U,KAAK6H,MAAMyL,SAAWtT,KAAK6H,MAAMmmB,eAEpDhuB,KAAK6H,MAAMwL,KAAOrT,KAAKxI,OACzBwI,KAAKq4B,YAAY53B,EAAQM,KAIvB65B,IAAe/lB,EAAMzS,SACvBpC,KAAKmgD,gBAELngD,KAAKogD,iBAAiBpgD,KAAKqgD,eAAergD,KAAK6H,MAAMwL,Q,8BAIzD,WACE,IAAIC,EACCtT,KAAK0U,cAAapB,EAAWtT,KAAK6H,MAAMmmB,eAC7C,IAKI3wB,EALE3F,EAAQsI,KAAK6H,MAAMwL,IACnBxM,EAAM7G,KAAK0I,MAAMi9B,QAAQ,KAAM3lC,KAAK6H,MAAMwL,IAAM,GACtD,IAAa,IAATxM,EAAY,MAAM7G,KAAKuX,MAAM7f,EAAO+R,EAAc6I,qBAKtD,IAJAtS,KAAK6H,MAAMwL,IAAMxM,EAAM,EACvBX,EAAW2N,UAAYnc,GAGf2F,EAAQ6I,EAAW5I,KAAK0C,KAAK0I,SAAWrL,EAAMG,MAAQwC,KAAK6H,MAAMwL,OACrErT,KAAK6H,MAAMykB,QACbtsB,KAAK6H,MAAM+L,UAAYvW,EAAMG,MAAQH,EAAM,GAAG7F,OAGhD,IAAIwI,KAAK0U,YAAT,CACA,IACMlZ,EAAU,CACdc,KAAM,eACN/F,MAHYyJ,KAAK0I,MAAMnR,MAAMG,EAAQ,EAAGmP,GAIxCnP,MAAOA,EACPmP,IAAKA,EAAM,EACXe,IAAK,IAAIhB,EAAe0M,EAAUtT,KAAK6H,MAAMmmB,gBAG/C,OADIhuB,KAAK7F,QAAQ0kD,QAAQ7+C,KAAK2/C,UAAUnkD,GACjCA,K,6BAGT,SAAgB8kD,GACd,IACIhtC,EADE5b,EAAQsI,KAAK6H,MAAMwL,IAEpBrT,KAAK0U,cAAapB,EAAWtT,KAAK6H,MAAMmmB,eAC7C,IAAIoK,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAAOitC,GAEjD,GAAItgD,KAAK6H,MAAMwL,IAAMrT,KAAKxI,OACxB,MAAQ6O,EAAU+xB,MAASp4B,KAAK6H,MAAMwL,IAAMrT,KAAKxI,QAC/C4gC,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAI1C,IAAIrT,KAAK0U,YAAT,CACA,IAAM7N,EAAM7G,KAAK6H,MAAMwL,IAEjB7X,EAAU,CACdc,KAAM,cACN/F,MAHYyJ,KAAK0I,MAAMnR,MAAMG,EAAQ4oD,EAAWz5C,GAIhDnP,QACAmP,MACAe,IAAK,IAAIhB,EAAe0M,EAAUtT,KAAK6H,MAAMmmB,gBAG/C,OADIhuB,KAAK7F,QAAQ0kD,QAAQ7+C,KAAK2/C,UAAUnkD,GACjCA,K,uBAGT,WACE,IAAM+kD,EAAavgD,KAAK6H,MAAMwL,IACxBnM,EAAW,GAEjBs5C,EAAM,KAAOxgD,KAAK6H,MAAMwL,IAAMrT,KAAKxI,QAAQ,CACzC,IAAM4gC,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAE5C,OAAQ+kB,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACDp4B,KAAK6H,MAAMwL,IACb,MAEF,KAAK,GAC+C,KAA9CrT,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,MACvCrT,KAAK6H,MAAMwL,IAGjB,KAAK,GACL,KAAK,KACL,KAAK,OACDrT,KAAK6H,MAAMwL,MACXrT,KAAK6H,MAAMykB,QACbtsB,KAAK6H,MAAM+L,UAAY5T,KAAK6H,MAAMwL,IAClC,MAEF,KAAK,GACH,OAAQrT,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,IAC7C,KAAK,GAED,IAAM7X,EAAUwE,KAAKygD,wBAELjhD,IAAZhE,IACFwE,KAAK0gD,WAAWllD,GAChB0L,EAAS/H,KAAK3D,IAGhB,MAGJ,KAAK,GAED,IAAMA,EAAUwE,KAAK2gD,gBAAgB,QAErBnhD,IAAZhE,IACFwE,KAAK0gD,WAAWllD,GAChB0L,EAAS/H,KAAK3D,IAGhB,MAGJ,QACE,MAAMglD,EAGV,MAEF,QACE,GAAIj6C,EAAa6xB,KACbp4B,KAAK6H,MAAMwL,SACR,GAAW,KAAP+kB,GAAcp4B,KAAKkW,SAavB,IAAW,KAAPkiB,GAAcp4B,KAAKkW,SAc5B,MAAMsqC,EAbN,IAAMntC,EAAMrT,KAAK6H,MAAMwL,IAEvB,GAAuC,KAAnCrT,KAAK0I,MAAMC,WAAW0K,EAAM,IAAgD,KAAnCrT,KAAK0I,MAAMC,WAAW0K,EAAM,IAAgD,KAAnCrT,KAAK0I,MAAMC,WAAW0K,EAAM,GAQhH,MAAMmtC,EAPN,IAAMhlD,EAAUwE,KAAK2gD,gBAAgB,QAErBnhD,IAAZhE,IACFwE,KAAK0gD,WAAWllD,GAChB0L,EAAS/H,KAAK3D,QArBoB,CACtC,IAAM6X,EAAMrT,KAAK6H,MAAMwL,IAEvB,GAAuC,KAAnCrT,KAAK0I,MAAMC,WAAW0K,EAAM,IAAgD,KAAnCrT,KAAK0I,MAAMC,WAAW0K,EAAM,MAA6B,IAAfktC,GAAoBvgD,KAAK6H,MAAM+L,UAAY2sC,GAQhI,MAAMC,EAPN,IAAMhlD,EAAUwE,KAAK2gD,gBAAgB,QAErBnhD,IAAZhE,IACFwE,KAAK0gD,WAAWllD,GAChB0L,EAAS/H,KAAK3D,MAyB1B,GAAI0L,EAAS1P,OAAS,EAAG,CACvB,IACMopD,EAAoB,CACxBlpD,MAAO6oD,EACP15C,IAHU7G,KAAK6H,MAAMwL,IAIrBnM,WACAe,YAAa,KACbG,aAAc,KACdC,eAAgB,MAElBrI,KAAK6H,MAAMC,aAAa3I,KAAKyhD,M,yBAIjC,SAAYtkD,EAAM4xB,GAChBluB,KAAK6H,MAAMhB,IAAM7G,KAAK6H,MAAMwL,IAC5B,IAAM2nB,EAAWh7B,KAAK6H,MAAMvL,KAC5B0D,KAAK6H,MAAMvL,KAAOA,EAClB0D,KAAK6H,MAAMtR,MAAQ23B,EAEdluB,KAAK0U,cACR1U,KAAK6H,MAAM4L,OAASzT,KAAK6H,MAAMmmB,cAC/BhuB,KAAKI,cAAc46B,M,kCAIvB,WACE,GAAuB,IAAnBh7B,KAAK6H,MAAMwL,MAAarT,KAAK6gD,wBAAjC,CAIA,IAAMC,EAAU9gD,KAAK6H,MAAMwL,IAAM,EAC3BmF,EAAOxY,KAAKqgD,eAAeS,GAEjC,GAAItoC,GAAQ,IAAMA,GAAQ,GACxB,MAAMxY,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcyH,0BAGjD,GAAa,MAATsH,GAAyB,KAATA,GAAexY,KAAKoJ,UAAU,kBAAmB,CAGnE,GAFApJ,KAAK29C,aAAa,kBAE2C,SAAzD39C,KAAK8zB,gBAAgB,iBAAkB,cACzC,MAAM9zB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAc,MAATmF,EAAe/O,EAAcqG,6CAA+CrG,EAAcsH,6CAG7H/Q,KAAK6H,MAAMwL,KAAO,EAEL,MAATmF,EACFxY,KAAKq4B,YAAY53B,EAAQc,YAEzBvB,KAAKq4B,YAAY53B,EAAQQ,mBAElBuU,EAAkBgD,MACzBxY,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQK,YAAad,KAAK+gD,UAAUvoC,KACnC,KAATA,KACPxY,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQK,YAAad,KAAK+gD,cAE3C/gD,KAAKwmC,SAAS/lC,EAAQgC,KAAM,M,2BAIhC,WACE,IAAM+V,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEhDmF,GAAQ,IAAMA,GAAQ,GACxBxY,KAAKghD,YAAW,GAIL,KAATxoC,GAA6D,KAA9CxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,IACxDrT,KAAK6H,MAAMwL,KAAO,EAClBrT,KAAKq4B,YAAY53B,EAAQ4B,cAEvBrC,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQuB,Q,6BAI7B,WAGe,KAFAhC,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAGlDrT,KAAKwmC,SAAS/lC,EAAQmC,YAAa,GAEnC5C,KAAKwmC,SAAS/lC,EAAQoD,MAAO,K,mCAIjC,WACE,GAAuB,IAAnB7D,KAAK6H,MAAMwL,KAAarT,KAAKxI,OAAS,EAAG,OAAO,EACpD,IAAI4gC,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAChD,GAAW,KAAP+kB,EAAW,OAAO,EACtB,IAAM1gC,EAAQsI,KAAK6H,MAAMwL,IAGzB,IAFArT,KAAK6H,MAAMwL,KAAO,GAEVhN,EAAU+xB,MAASp4B,KAAK6H,MAAMwL,IAAMrT,KAAKxI,QAC/C4gC,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAGxC,IAAM9c,EAAQyJ,KAAK0I,MAAMnR,MAAMG,EAAQ,EAAGsI,KAAK6H,MAAMwL,KAErD,OADArT,KAAKq4B,YAAY53B,EAAQiC,qBAAsBnM,IACxC,I,mCAGT,SAAsBU,GACpB,IAAIqF,EAAgB,KAATrF,EAAcwJ,EAAQmD,KAAOnD,EAAQkD,OAC5Cs9C,EAAQ,EACRzoC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAErC,KAATpc,GAAwB,KAATuhB,IACjByoC,IACAzoC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAC9C/W,EAAOmE,EAAQqD,UAGJ,KAAT0U,GAAgBxY,KAAK6H,MAAM+kB,SAC7Bq0B,IACA3kD,EAAOmE,EAAQnI,QAGjB0H,KAAKwmC,SAASlqC,EAAM2kD,K,gCAGtB,SAAmBhqD,GACjB,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEpD,GAAImF,IAASvhB,EAAb,CAUA,GAAa,MAATA,EAAc,CAChB,GAAa,KAATuhB,EAEF,YADAxY,KAAKwmC,SAAS/lC,EAAQuC,SAAU,GAIlC,GAAIhD,KAAKoJ,UAAU,mBAA8B,MAAToP,EAAc,CACpD,GAA6D,QAAzDxY,KAAK8zB,gBAAgB,iBAAkB,cACzC,MAAM9zB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcmG,2CAKjD,OAFA5P,KAAK6H,MAAMwL,KAAO,OAClBrT,KAAKq4B,YAAY53B,EAAQgB,WAI3B,GAAIzB,KAAKoJ,UAAU,mBAA8B,KAAToP,EAAa,CACnD,GAA6D,QAAzDxY,KAAK8zB,gBAAgB,iBAAkB,cACzC,MAAM9zB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcoH,0CAKjD,OAFA7Q,KAAK6H,MAAMwL,KAAO,OAClBrT,KAAKq4B,YAAY53B,EAAQW,cAKhB,KAAToX,EAKJxY,KAAKwmC,SAAkB,MAATvvC,EAAewJ,EAAQ2C,UAAY3C,EAAQ6C,WAAY,GAJnEtD,KAAKwmC,SAAS/lC,EAAQnI,OAAQ,QArCoB,KAA9C0H,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GACzCrT,KAAKwmC,SAAS/lC,EAAQnI,OAAQ,GAE9B0H,KAAKwmC,SAAkB,MAATvvC,EAAewJ,EAAQyC,UAAYzC,EAAQ0C,WAAY,K,6BAyC3E,WAGe,KAFAnD,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAGlDrT,KAAKwmC,SAAS/lC,EAAQnI,OAAQ,GAE9B0H,KAAKwmC,SAAS/lC,EAAQ4C,WAAY,K,gCAItC,SAAmBpM,GACjB,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEhDmF,IAASvhB,EAKA,KAATuhB,EACFxY,KAAKwmC,SAAS/lC,EAAQnI,OAAQ,GAE9B0H,KAAKwmC,SAAS/lC,EAAQiD,QAAS,GAP/B1D,KAAKwmC,SAAS/lC,EAAQoC,OAAQ,K,6BAWlC,SAAgB5L,GACd,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAChD6tC,EAAO,EAEX,GAAI1oC,IAASvhB,EAGX,OAFAiqD,EAAgB,KAATjqD,GAA6D,KAA9C+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAAY,EAAI,EAExB,KAAjDrT,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM6tC,QACzClhD,KAAKwmC,SAAS/lC,EAAQnI,OAAQ4oD,EAAO,QAIvClhD,KAAKwmC,SAAS/lC,EAAQgD,SAAUy9C,GAIrB,KAAT1oC,IACF0oC,EAAO,GAGTlhD,KAAKwmC,SAAS/lC,EAAQ+C,WAAY09C,K,+BAGpC,SAAkBjqD,GAChB,IAAMuhB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEpD,GAAa,KAATmF,EAKJ,OAAa,KAATvhB,GAAwB,KAATuhB,GACjBxY,KAAK6H,MAAMwL,KAAO,OAClBrT,KAAKq4B,YAAY53B,EAAQ0B,aAI3BnC,KAAKwmC,SAAkB,KAATvvC,EAAcwJ,EAAQkC,GAAKlC,EAAQqC,KAAM,GAVrD9C,KAAKwmC,SAAS/lC,EAAQ8C,SAAwD,KAA9CvD,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAAY,EAAI,K,gCAa3F,WACE,IAAMmF,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAC9C8tC,EAAQnhD,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAExC,KAATmF,EACY,KAAV2oC,EACFnhD,KAAKwmC,SAAS/lC,EAAQnI,OAAQ,GAE9B0H,KAAKwmC,SAAS/lC,EAAQwC,kBAAmB,GAEzB,KAATuV,GAAiB2oC,GAAS,IAAMA,GAAS,MAIhDnhD,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQwB,YAJzBjC,KAAK6H,MAAMwL,KAAO,EAClBrT,KAAKq4B,YAAY53B,EAAQyB,gB,8BAO7B,SAAiBjL,GACf,OAAQA,GACN,KAAK,GAEH,YADA+I,KAAKohD,gBAGP,KAAK,GAGH,QAFEphD,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQiB,QAG3B,KAAK,GAGH,QAFE1B,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQkB,QAG3B,KAAK,GAGH,QAFE3B,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQoB,MAG3B,KAAK,GAGH,QAFE7B,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQmB,OAG3B,KAAK,GACH,GAAI5B,KAAKoJ,UAAU,mBAAmE,MAA9CpJ,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAAY,CACzF,GAA6D,QAAzDrT,KAAK8zB,gBAAgB,iBAAkB,cACzC,MAAM9zB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcqH,4CAGjD9Q,KAAK6H,MAAMwL,KAAO,EAClBrT,KAAKq4B,YAAY53B,EAAQS,mBAEvBlB,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQO,UAG3B,OAEF,KAAK,GAGH,QAFEhB,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQU,UAG3B,KAAK,IACH,GAAInB,KAAKoJ,UAAU,mBAAmE,MAA9CpJ,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAAY,CACzF,GAA6D,QAAzDrT,KAAK8zB,gBAAgB,iBAAkB,cACzC,MAAM9zB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcoG,6CAGjD7P,KAAK6H,MAAMwL,KAAO,EAClBrT,KAAKq4B,YAAY53B,EAAQa,iBAEvBtB,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQY,QAG3B,OAEF,KAAK,IAGH,QAFErB,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQe,QAG3B,KAAK,GAQH,YAPIxB,KAAKoJ,UAAU,iBAAiE,KAA9CpJ,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAC3ErT,KAAKwmC,SAAS/lC,EAAQsB,YAAa,MAEjC/B,KAAK6H,MAAMwL,IACbrT,KAAKq4B,YAAY53B,EAAQqB,SAK7B,KAAK,GAEH,YADA9B,KAAKqhD,qBAGP,KAAK,GAGH,QAFErhD,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQ6B,WAG3B,KAAK,GAED,IAAMkW,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAEpD,GAAa,MAATmF,GAAyB,KAATA,EAElB,YADAxY,KAAKshD,gBAAgB,IAIvB,GAAa,MAAT9oC,GAAyB,KAATA,EAElB,YADAxY,KAAKshD,gBAAgB,GAIvB,GAAa,KAAT9oC,GAAwB,KAATA,EAEjB,YADAxY,KAAKshD,gBAAgB,GAK3B,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADAthD,KAAKghD,YAAW,GAGlB,KAAK,GACL,KAAK,GAEH,YADAhhD,KAAKuhD,WAAWtqD,GAGlB,KAAK,GAEH,YADA+I,KAAKwhD,kBAGP,KAAK,GACL,KAAK,GAEH,YADAxhD,KAAKyhD,sBAAsBxqD,GAG7B,KAAK,IACL,KAAK,GAEH,YADA+I,KAAK0hD,mBAAmBzqD,GAG1B,KAAK,GAEH,YADA+I,KAAK2hD,kBAGP,KAAK,GACL,KAAK,GAEH,YADA3hD,KAAK4hD,mBAAmB3qD,GAG1B,KAAK,GACL,KAAK,GAEH,YADA+I,KAAKo8C,gBAAgBnlD,GAGvB,KAAK,GACL,KAAK,GAEH,YADA+I,KAAK6hD,kBAAkB5qD,GAGzB,KAAK,IAEH,YADA+I,KAAKwmC,SAAS/lC,EAAQsC,MAAO,GAG/B,KAAK,GAGH,QAFE/C,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQ+B,IAG3B,KAAK,GAEH,YADAxC,KAAK8hD,uBAGP,KAAK,GAEH,YADA9hD,KAAK+hD,WAGP,QACE,GAAIvsC,EAAkBve,GAEpB,YADA+I,KAAK+hD,SAAS9qD,GAMpB,MAAM+I,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAc2D,yBAA0BqI,OAAOmjB,cAAc3hC,M,sBAGhG,SAASqF,EAAM4kD,GACb,IAAMhqD,EAAM8I,KAAK0I,MAAMnR,MAAMyI,KAAK6H,MAAMwL,IAAKrT,KAAK6H,MAAMwL,IAAM6tC,GAC9DlhD,KAAK6H,MAAMwL,KAAO6tC,EAClBlhD,KAAKq4B,YAAY/7B,EAAMpF,K,wBAGzB,WAOE,IANA,IACI8qD,EAASC,EADPvqD,EAAQsI,KAAK6H,MAAMnQ,MAAQ,EAG/B2b,EACErT,KAAK6H,MADPwL,OAGQA,EAAK,CACb,GAAIA,GAAOrT,KAAKxI,OACd,MAAMwI,KAAKuX,MAAM7f,EAAO+R,EAAc8I,oBAGxC,IAAM6lB,EAAKp4B,KAAK0I,MAAMC,WAAW0K,GAEjC,GAAIhN,EAAU+xB,GACZ,MAAMp4B,KAAKuX,MAAM7f,EAAO+R,EAAc8I,oBAGxC,GAAIyvC,EACFA,GAAU,MACL,CACL,GAAW,KAAP5pB,EACF6pB,GAAU,OACL,GAAW,KAAP7pB,GAAa6pB,EACtBA,GAAU,OACL,GAAW,KAAP7pB,IAAc6pB,EACvB,MAGFD,EAAiB,KAAP5pB,GAId,IAAM8pB,EAAUliD,KAAK0I,MAAMnR,MAAMG,EAAO2b,KACtCA,EAGF,IAFA,IAAI8uC,EAAO,GAEJ9uC,EAAMrT,KAAKxI,QAAQ,CACxB,IAAMuoD,EAAK//C,KAAKqgD,eAAehtC,GACzB+uC,EAAO3sC,OAAOC,aAAaqqC,GAEjC,GAAIf,GAAkBviD,IAAIsjD,GACpBoC,EAAKnX,SAASoX,IAChBpiD,KAAKuX,MAAMlE,EAAM,EAAG5J,EAAc8B,0BAE/B,KAAIoK,EAAiBoqC,IAAc,KAAPA,EAGjC,MAFA//C,KAAKuX,MAAMlE,EAAM,EAAG5J,EAAcoE,wBAKlCwF,EACF8uC,GAAQC,EAGVpiD,KAAK6H,MAAMwL,IAAMA,EACjBrT,KAAKq4B,YAAY53B,EAAQI,OAAQ,CAC/ByzB,QAAS4tB,EACThrC,MAAOirC,M,qBAIX,SAAQE,EAAOC,EAAKC,GAOlB,IAPsD,IAA1BC,IAA0B,yDAChD9qD,EAAQsI,KAAK6H,MAAMwL,IACnBovC,EAA8B,KAAVJ,EAAepD,GAAkCE,IAAMF,GAAkCC,UAC7GwD,EAA4B,KAAVL,EAAejD,GAAgCD,IAAgB,KAAVkD,EAAejD,GAAgCG,IAAgB,IAAV8C,EAAcjD,GAAgCC,IAAMD,GAAgCE,IAClN5jD,GAAU,EACVinD,EAAQ,EAEH9jD,EAAI,EAAG01B,EAAW,MAAP+tB,EAAcM,IAAWN,EAAKzjD,EAAI01B,IAAK11B,EAAG,CAC5D,IAAM5H,EAAO+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAC1C6a,OAAG,EAEP,GAAa,KAATj3B,EAAJ,CA4BA,IATEi3B,EADEj3B,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACT8nD,GAAS9nD,GACZA,EAAO,GAEP2rD,MAGGP,EACT,GAAIriD,KAAK7F,QAAQia,eAAiB8Z,GAAO,EACvCA,EAAM,EACNluB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAQmH,EAAI,EAAG4K,EAAckD,aAAc01C,OAC5D,KAAIE,EAIT,MAHAr0B,EAAM,EACNxyB,GAAU,IAMZsE,KAAK6H,MAAMwL,IACbsvC,EAAQA,EAAQN,EAAQn0B,MAzCxB,CACE,IAAM20B,EAAO7iD,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GAC9CmF,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,KAEb,IAAnCqvC,EAAgB/c,QAAQntB,IAEjBiqC,EAAkB9c,QAAQkd,IAAS,GAAKJ,EAAkB9c,QAAQntB,IAAS,GAAKsqC,OAAOC,MAAMvqC,KADtGxY,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAc+H,4BAKtCgxC,GACHxiD,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcmF,oCAGzC5O,KAAK6H,MAAMwL,KA8BjB,OAAIrT,KAAK6H,MAAMwL,MAAQ3b,GAAgB,MAAP4qD,GAAetiD,KAAK6H,MAAMwL,IAAM3b,IAAU4qD,GAAO5mD,EACxE,KAGFinD,I,6BAGT,SAAgBN,GACd,IAAM3qD,EAAQsI,KAAK6H,MAAMwL,IACrB2vC,GAAW,EACfhjD,KAAK6H,MAAMwL,KAAO,EAClB,IAAM6a,EAAMluB,KAAKijD,QAAQZ,GAEd,MAAPn0B,GACFluB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAQ,EAAG+R,EAAckD,aAAc01C,GAG/D,IAAM7pC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAE9C,GAAa,MAATmF,IACAxY,KAAK6H,MAAMwL,IACb2vC,GAAW,OACN,GAAa,MAATxqC,EACT,MAAMxY,KAAKuX,MAAM7f,EAAO+R,EAAciD,gBAGxC,GAAI8I,EAAkBxV,KAAKqgD,eAAergD,KAAK6H,MAAMwL,MACnD,MAAMrT,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAckF,kBAGjD,GAAIq0C,EAAJ,CACE,IAAM9rD,EAAM8I,KAAK0I,MAAMnR,MAAMG,EAAOsI,KAAK6H,MAAMwL,KAAKa,QAAQ,QAAS,IACrElU,KAAKq4B,YAAY53B,EAAQE,OAAQzJ,QAInC8I,KAAKq4B,YAAY53B,EAAQC,IAAKwtB,K,wBAGhC,SAAWg1B,GACT,IAAMxrD,EAAQsI,KAAK6H,MAAMwL,IACrB8vC,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArBljD,KAAKijD,QAAQ,KACjCjjD,KAAKuX,MAAM7f,EAAO+R,EAAcyD,eAGlC,IAAMq2C,EAAiBvjD,KAAK6H,MAAMwL,IAAM3b,GAAS,GAAsC,KAAjCsI,KAAK0I,MAAMC,WAAWjR,GAE5E,GAAI6rD,EAAgB,CAClB,IAAMC,EAAUxjD,KAAK0I,MAAMnR,MAAMG,EAAOsI,KAAK6H,MAAMwL,KAGnD,GAFArT,KAAKyjD,uBAAuB/rD,EAAO+R,EAAc+G,qBAE5CxQ,KAAK6H,MAAMwkB,OAAQ,CACtB,IAAMq3B,EAAgBF,EAAQ7d,QAAQ,KAElC+d,EAAgB,GAClB1jD,KAAKuX,MAAMmsC,EAAgBhsD,EAAO+R,EAAcoJ,2BAIpDywC,EAAUC,IAAmB,OAAO7mD,KAAK8mD,GAG3C,IAAIhrC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KA6C5C,GA3Ca,KAATmF,GAAgB8qC,MAChBtjD,KAAK6H,MAAMwL,IACbrT,KAAKijD,QAAQ,IACbE,GAAU,EACV3qC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,MAG5B,KAATmF,GAAwB,MAATA,GAAkB8qC,IAGvB,MAFb9qC,EAAOxY,KAAK0I,MAAMC,aAAa3I,KAAK6H,MAAMwL,OAEd,KAATmF,KACfxY,KAAK6H,MAAMwL,IAGU,OAArBrT,KAAKijD,QAAQ,KACfjjD,KAAKuX,MAAM7f,EAAO+R,EAAc0D,0BAGlCg2C,GAAU,EACVE,GAAc,EACd7qC,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,MAG7B,MAATmF,KACE2qC,GAAWI,IACbvjD,KAAKuX,MAAM7f,EAAO+R,EAAc+C,wBAGhCxM,KAAK6H,MAAMwL,IACb2vC,GAAW,GAGA,MAATxqC,IACFxY,KAAK29C,aAAa,UAAW39C,KAAK6H,MAAMwL,MAEpCgwC,GAAeE,IACjBvjD,KAAKuX,MAAM7f,EAAO+R,EAAciD,kBAGhC1M,KAAK6H,MAAMwL,IACb+vC,GAAY,GAGV5tC,EAAkBxV,KAAKqgD,eAAergD,KAAK6H,MAAMwL,MACnD,MAAMrT,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAckF,kBAGjD,IAAMzX,EAAM8I,KAAK0I,MAAMnR,MAAMG,EAAOsI,KAAK6H,MAAMwL,KAAKa,QAAQ,SAAU,IAEtE,GAAI8uC,EACFhjD,KAAKq4B,YAAY53B,EAAQE,OAAQzJ,QAInC,GAAIksD,EACFpjD,KAAKq4B,YAAY53B,EAAQG,QAAS1J,OADpC,CAKA,IAAMg3B,EAAMo1B,EAAUzqB,SAAS3hC,EAAK,GAAKysD,WAAWzsD,GACpD8I,KAAKq4B,YAAY53B,EAAQC,IAAKwtB,M,2BAGhC,SAAc01B,GACZ,IACI3sD,EAEJ,GAAW,MAHA+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAG5B,CACd,IAAMwwC,IAAY7jD,KAAK6H,MAAMwL,IAI7B,GAHApc,EAAO+I,KAAK8jD,YAAY9jD,KAAK0I,MAAMi9B,QAAQ,IAAK3lC,KAAK6H,MAAMwL,KAAOrT,KAAK6H,MAAMwL,KAAK,EAAMuwC,KACtF5jD,KAAK6H,MAAMwL,IAEA,OAATpc,GAAiBA,EAAO,QAAU,CACpC,IAAI2sD,EAGF,OAAO,KAFP5jD,KAAKuX,MAAMssC,EAASp6C,EAAcgD,wBAMtCxV,EAAO+I,KAAK8jD,YAAY,GAAG,EAAOF,GAGpC,OAAO3sD,I,wBAGT,SAAWwhC,GAIT,IAHA,IAAIP,EAAM,GACNC,IAAen4B,KAAK6H,MAAMwL,MAErB,CACP,GAAIrT,KAAK6H,MAAMwL,KAAOrT,KAAKxI,OACzB,MAAMwI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc+I,oBAGnD,IAAM4lB,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAC5C,GAAI+kB,IAAOK,EAAO,MAElB,GAAW,KAAPL,EACFF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C6kB,GAAOl4B,KAAK+jD,iBAAgB,GAC5B5rB,EAAan4B,KAAK6H,MAAMwL,SACnB,GAAW,OAAP+kB,GAAsB,OAAPA,IACtBp4B,KAAK6H,MAAMwL,MACXrT,KAAK6H,MAAMykB,QACbtsB,KAAK6H,MAAM+L,UAAY5T,KAAK6H,MAAMwL,QAC7B,IAAIhN,EAAU+xB,GACnB,MAAMp4B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc+I,sBAE/CxS,KAAK6H,MAAMwL,KAIjB6kB,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,OAC/CrT,KAAKq4B,YAAY53B,EAAQpF,OAAQ68B,K,2BAGnC,WAKE,IAJA,IAAIA,EAAM,GACNC,EAAan4B,KAAK6H,MAAMwL,IACxB2wC,GAAkB,IAEb,CACP,GAAIhkD,KAAK6H,MAAMwL,KAAOrT,KAAKxI,OACzB,MAAMwI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcgJ,sBAGnD,IAAM2lB,EAAKp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAE5C,GAAW,KAAP+kB,GAAoB,KAAPA,GAA2D,MAA9Cp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,IAAM,GACnE,OAAIrT,KAAK6H,MAAMwL,MAAQrT,KAAK6H,MAAMnQ,OAASsI,KAAK3C,MAAMoD,EAAQ2B,UACjD,KAAPg2B,GACFp4B,KAAK6H,MAAMwL,KAAO,OAClBrT,KAAKq4B,YAAY53B,EAAQ8B,kBAGvBvC,KAAK6H,MAAMwL,SACbrT,KAAKq4B,YAAY53B,EAAQ6B,aAK7B41B,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,UAC/CrT,KAAKq4B,YAAY53B,EAAQ2B,SAAU4hD,EAAkB,KAAO9rB,IAI9D,GAAW,KAAPE,EAAW,CACbF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAC/C,IAAM2uC,EAAUhiD,KAAK+jD,iBAAgB,GAErB,OAAZ/B,EACFgC,GAAkB,EAElB9rB,GAAO8pB,EAGT7pB,EAAan4B,KAAK6H,MAAMwL,SACnB,GAAIhN,EAAU+xB,GAAK,CAIxB,OAHAF,GAAOl4B,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,OAC7CrT,KAAK6H,MAAMwL,IAEL+kB,GACN,KAAK,GAC2C,KAA1Cp4B,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,QACjCrT,KAAK6H,MAAMwL,IAGjB,KAAK,GACH6kB,GAAO,KACP,MAEF,QACEA,GAAOziB,OAAOC,aAAa0iB,KAI7Bp4B,KAAK6H,MAAMykB,QACbtsB,KAAK6H,MAAM+L,UAAY5T,KAAK6H,MAAMwL,IAClC8kB,EAAan4B,KAAK6H,MAAMwL,UAEtBrT,KAAK6H,MAAMwL,O,oCAKnB,SAAuBA,EAAKY,GACtBjU,KAAK6H,MAAMwkB,SAAWrsB,KAAK6H,MAAM8lB,aAAalxB,IAAI4W,GACpDrT,KAAKuX,MAAMlE,EAAKY,GAEhBjU,KAAK6H,MAAM8lB,aAAa10B,IAAIoa,EAAKY,K,6BAIrC,SAAgBgwC,GACd,IAAML,GAAkBK,EAClB7rB,EAAKp4B,KAAK0I,MAAMC,aAAa3I,KAAK6H,MAAMwL,KAG9C,SAFErT,KAAK6H,MAAMwL,IAEL+kB,GACN,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IAED,IAAMnhC,EAAO+I,KAAK8jD,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAAT3sD,EAAgB,KAAOwe,OAAOC,aAAaze,GAGtD,KAAK,IAED,IAAMA,EAAO+I,KAAKkkD,cAAcN,GAChC,OAAgB,OAAT3sD,EAAgB,KAAOwe,OAAOmjB,cAAc3hC,GAGvD,KAAK,IACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,GAC2C,KAA1C+I,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,QACjCrT,KAAK6H,MAAMwL,IAGjB,KAAK,GACHrT,KAAK6H,MAAM+L,UAAY5T,KAAK6H,MAAMwL,MAChCrT,KAAK6H,MAAMykB,QAEf,KAAK,KACL,KAAK,KACH,MAAO,GAET,KAAK,GACL,KAAK,GACH,GAAI23B,EACF,OAAO,KAEPjkD,KAAKyjD,uBAAuBzjD,KAAK6H,MAAMwL,IAAM,EAAG5J,EAAc8G,qBAGlE,QACE,GAAI6nB,GAAM,IAAMA,GAAM,GAAI,CACxB,IAAMyrB,EAAU7jD,KAAK6H,MAAMwL,IAAM,EAE7B8wC,EADUnkD,KAAK0I,MAAM/L,OAAOqD,KAAK6H,MAAMwL,IAAM,EAAG,GAAGhW,MAAM,WACxC,GACjB+mD,EAAQvrB,SAASsrB,EAAU,GAE3BC,EAAQ,MACVD,EAAWA,EAAS5sD,MAAM,GAAI,GAC9B6sD,EAAQvrB,SAASsrB,EAAU,IAG7BnkD,KAAK6H,MAAMwL,KAAO8wC,EAAS3sD,OAAS,EACpC,IAAMghB,EAAOxY,KAAK0I,MAAMC,WAAW3I,KAAK6H,MAAMwL,KAE9C,GAAiB,MAAb8wC,GAA6B,KAAT3rC,GAAwB,KAATA,EAAa,CAClD,GAAIyrC,EACF,OAAO,KAEPjkD,KAAKyjD,uBAAuBI,EAASp6C,EAAc8G,qBAIvD,OAAOkF,OAAOC,aAAa0uC,GAG7B,OAAO3uC,OAAOC,aAAa0iB,M,yBAIjC,SAAYkqB,EAAKC,EAAUqB,GACzB,IAAMC,EAAU7jD,KAAK6H,MAAMwL,IACrBgxC,EAAIrkD,KAAKijD,QAAQ,GAAIX,EAAKC,GAAU,GAU1C,OARU,OAAN8B,IACET,EACF5jD,KAAKuX,MAAMssC,EAASp6C,EAAcmD,uBAElC5M,KAAK6H,MAAMwL,IAAMwwC,EAAU,GAIxBQ,I,uBAGT,SAAUC,GACRtkD,KAAK6H,MAAM6lB,aAAc,EACzB,IAAIzX,EAAO,GACLve,EAAQsI,KAAK6H,MAAMwL,IACrB8kB,EAAan4B,KAAK6H,MAAMwL,IAM5B,SAJkB7T,IAAd8kD,IACFtkD,KAAK6H,MAAMwL,KAAOixC,GAAa,MAAS,EAAI,GAGvCtkD,KAAK6H,MAAMwL,IAAMrT,KAAKxI,QAAQ,CACnC,IAAM4gC,EAAKp4B,KAAKqgD,eAAergD,KAAK6H,MAAMwL,KAE1C,GAAIsC,EAAiByiB,GACnBp4B,KAAK6H,MAAMwL,KAAO+kB,GAAM,MAAS,EAAI,MAChC,IAAW,KAAPA,EAyBT,MAxBAp4B,KAAK6H,MAAM6lB,aAAc,EACzBzX,GAAQjW,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,KAChD,IAAMkxC,EAAWvkD,KAAK6H,MAAMwL,IACtBmxC,EAAkBxkD,KAAK6H,MAAMwL,MAAQ3b,EAAQ8d,EAAoBG,EAEvE,GAAgD,MAA5C3V,KAAK0I,MAAMC,aAAa3I,KAAK6H,MAAMwL,KAAc,CACnDrT,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcwE,sBACzCkqB,EAAan4B,KAAK6H,MAAMwL,IAAM,EAC9B,WAGArT,KAAK6H,MAAMwL,IACb,IAAMoxC,EAAMzkD,KAAKkkD,eAAc,GAEnB,OAARO,IACGD,EAAgBC,IACnBzkD,KAAKuX,MAAMgtC,EAAU96C,EAAcgC,4BAGrCwK,GAAQR,OAAOmjB,cAAc6rB,IAG/BtsB,EAAan4B,KAAK6H,MAAMwL,KAM5B,OAAO4C,EAAOjW,KAAK0I,MAAMnR,MAAM4gC,EAAYn4B,KAAK6H,MAAMwL,O,sBAGxD,SAASixC,GACP,IAAMruC,EAAOjW,KAAK+gD,UAAUuD,GACtBhoD,EAAO+D,EAAWtH,IAAIkd,IAASxV,EAAQjC,KAC7CwB,KAAKq4B,YAAY/7B,EAAM2Z,K,iCAGzB,WACE,IAAMs+B,EAAKv0C,KAAK6H,MAAMvL,KAAKzB,QAEvB05C,GAAMv0C,KAAK6H,MAAM6lB,aACnB1tB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcqD,2BAA4BynC,K,2BAI3E,SAAcvZ,GACZ,IAAI0pB,EAAuBC,EAEqD,OAA/ED,GAAyBC,EAAmB3kD,KAAK6H,MAAMvL,MAAM8D,gBAAkCskD,EAAsBxlD,KAAKylD,EAAkB3kD,KAAK6H,MAAMkN,a,GAtvCpI3B,GA2vClBwxC,GACJ,aAAc,UACZ5kD,KAAK6kD,aAAe,IAAIjqD,IACxBoF,KAAK8kD,cAAgB,IAAIxkD,IACzBN,KAAK0X,sBAAwB,IAAIpX,KAI/BykD,G,WACJ,WAAYxtC,GAAO,UACjBvX,KAAK1G,MAAQ,GACb0G,KAAK0X,sBAAwB,IAAIpX,IACjCN,KAAKuX,MAAQA,E,iCAGf,WACE,OAAOvX,KAAK1G,MAAM0G,KAAK1G,MAAM9B,OAAS,K,mBAGxC,WACEwI,KAAK1G,MAAM6F,KAAK,IAAIylD,M,kBAGtB,WAIE,IAHA,IAAMI,EAAgBhlD,KAAK1G,MAAM0b,MAC3ByxB,EAAUzmC,KAAKymC,UAErB,MAA0B7tC,MAAMqF,KAAK+mD,EAActtC,uBAAnD,eAA2E,CAAtE,gBAAOlZ,EAAP,KAAa6U,EAAb,KACCozB,EACGA,EAAQ/uB,sBAAsBjb,IAAI+B,IACrCioC,EAAQ/uB,sBAAsBze,IAAIuF,EAAM6U,GAG1CrT,KAAKuX,MAAMlE,EAAK5J,EAAc6D,8BAA+B9O,M,gCAKnE,SAAmBA,EAAMwkC,EAAa3vB,GACpC,IAAM4xC,EAAajlD,KAAKymC,UACpBye,EAAYD,EAAWJ,aAAapoD,IAAI+B,GAE5C,GAprQgC2mD,EAorQ5BniB,EAA2C,CAC7C,IAAMoiB,EAAWF,GAAaD,EAAWH,cAAc/rD,IAAIyF,GAE3D,GAAI4mD,GAKFF,GA5rQ4BC,EA0rQZC,MA1rQYD,EA2rQZniB,KA9rQU,EA2rQRoiB,MA3rQQ,EA4rQRpiB,KAIFiiB,EAAWH,cAAczsC,OAAO7Z,QACtC0mD,GACVD,EAAWH,cAAc7rD,IAAIuF,EAAMwkC,GAInCkiB,GACFllD,KAAKuX,MAAMlE,EAAK5J,EAAckG,yBAA0BnR,GAG1DymD,EAAWJ,aAAa1sC,IAAI3Z,GAC5BymD,EAAWvtC,sBAAsBW,OAAO7Z,K,4BAG1C,SAAeA,EAAM6U,GACnB,IAAI4xC,EADoB,MAGLjlD,KAAK1G,OAHA,IAGxB,2BACE,IADG2rD,EAA0B,SACdJ,aAAapoD,IAAI+B,GAAO,OAJjB,8BAOpBymD,EACFA,EAAWvtC,sBAAsBze,IAAIuF,EAAM6U,GAE3CrT,KAAKuX,MAAMlE,EAAK5J,EAAc6D,8BAA+B9O,O,KAW7D6mD,G,WACJ,aAAgC,IAApB/oD,EAAoB,uDANd,EAMc,UAC9B0D,KAAK1D,UAAO,EACZ0D,KAAK1D,KAAOA,E,wDAGd,WACE,OAVyC,IAUlC0D,KAAK1D,MAXwB,IAWyB0D,KAAK1D,O,6CAGpE,WACE,OAb0B,IAanB0D,KAAK1D,S,KAKVgpD,G,8BACJ,WAAYhpD,GAAM,wBAChB,cAAMA,IACD+X,OAAS,IAAI/T,IAFF,E,gDAKlB,SAAuB+S,EAAKjR,GAC1BpC,KAAKqU,OAAOpb,IAAIoa,EAAKjR,K,mCAGvB,SAAsBiR,GACpBrT,KAAKqU,OAAOgE,OAAOhF,K,2BAGrB,SAAckyC,GACZvlD,KAAKqU,OAAO1V,QAAQ4mD,O,GAfYF,IAoB9BG,G,WACJ,WAAYjuC,GAAO,UACjBvX,KAAK1G,MAAQ,CAAC,IAAI+rD,IAClBrlD,KAAKuX,MAAQA,E,+BAGf,SAAMS,GACJhY,KAAK1G,MAAM6F,KAAK6Y,K,kBAGlB,WACEhY,KAAK1G,MAAM0b,Q,6CAGb,SAAgC3B,EAAKjR,GAOnC,IANA,IACE9I,EACE0G,KADF1G,MAEEuF,EAAIvF,EAAM9B,OAAS,EACnBwgB,EAAQ1e,EAAMuF,IAEVmZ,EAAMytC,mCAAmC,CAC/C,IAAIztC,EAAM0tC,iCAGR,OAFA1tC,EAAM2tC,uBAAuBtyC,EAAKjR,GAKpC4V,EAAQ1e,IAAQuF,GAGlBmB,KAAKuX,MAAMlE,EAAKjR,K,gDAGlB,SAAmCiR,EAAKjR,GACtC,IACE9I,EACE0G,KADF1G,MAEI0e,EAAQ1e,EAAMA,EAAM9B,OAAS,GAEnC,GAAIwgB,EAAMytC,kCACRzlD,KAAKuX,MAAMlE,EAAKjR,OACX,KAAI4V,EAAM0tC,iCAGf,OAFA1tC,EAAM2tC,uBAAuBtyC,EAAKjR,M,6CAMtC,SAAgCiR,EAAKjR,GAOnC,IANA,IACE9I,EACE0G,KADF1G,MAEEuF,EAAIvF,EAAM9B,OAAS,EACnBwgB,EAAQ1e,EAAMuF,GAEXmZ,EAAM0tC,kCA/F4B,IAgGnC1tC,EAAM1b,MACR0b,EAAM2tC,uBAAuBtyC,EAAKjR,GAGpC4V,EAAQ1e,IAAQuF,K,+BAIpB,WAAoB,WAEhBvF,EACE0G,KADF1G,MAEIwe,EAAexe,EAAMA,EAAM9B,OAAS,GACrCsgB,EAAa4tC,kCAClB5tC,EAAa8tC,eAAc,SAACxjD,EAAUiR,GACpC,EAAKkE,MAAMlE,EAAKjR,GAIhB,IAHA,IAAIvD,EAAIvF,EAAM9B,OAAS,EACnBwgB,EAAQ1e,EAAMuF,GAEXmZ,EAAM0tC,kCACX1tC,EAAM6tC,sBAAsBxyC,GAC5B2E,EAAQ1e,IAAQuF,U,KAexB,SAASinD,KACP,OAAO,IAAIT,G,IAGPU,G,sHACJ,SAAS9+C,EAAMlI,EAAKmvB,GACbjnB,KACSA,EAAK+tB,MAAQ/tB,EAAK+tB,OAAS,IACnCj2B,GAAOmvB,K,0BAGf,SAAa83B,GACX,OAAOhmD,KAAK3C,MAAMoD,EAAQ+C,aAAexD,KAAK6H,MAAMtR,QAAUyvD,I,8BAGhE,SAAiBA,GACXhmD,KAAKy6B,aAAaurB,GACpBhmD,KAAKwY,OAELxY,KAAK84B,WAAW,KAAMr4B,EAAQ+C,c,0BAIlC,SAAahF,GACX,OAAOwB,KAAK3C,MAAMoD,EAAQjC,OAASwB,KAAK6H,MAAMtR,QAAUiI,IAASwB,KAAK6H,MAAM6lB,c,kCAG9E,SAAqBu4B,EAAWznD,GAC9B,IAAM0nD,EAAUD,EAAYznD,EAAKhH,OAEjC,GAAIwI,KAAK0I,MAAMnR,MAAM0uD,EAAWC,KAAa1nD,EAAM,CACjD,IAAM2nD,EAASnmD,KAAK0I,MAAMC,WAAWu9C,GACrC,QAASvwC,EAAiBwwC,IAAiC,SAAZ,MAATA,IAGxC,OAAO,I,mCAGT,SAAsB3nD,GACpB,IAAMga,EAAOxY,KAAK4tC,iBAClB,OAAO5tC,KAAK49C,qBAAqBplC,EAAMha,K,2BAGzC,SAAcA,GACZ,OAAOwB,KAAKg9B,aAAax+B,IAASwB,KAAKg5B,IAAIv4B,EAAQjC,Q,8BAGrD,SAAiBA,EAAM4D,GAChBpC,KAAK68B,cAAcr+B,IAAOwB,KAAK84B,WAAW,KAAM12B,K,gCAGvD,WACE,OAAOpC,KAAK3C,MAAMoD,EAAQM,MAAQf,KAAK3C,MAAMoD,EAAQe,SAAWxB,KAAKguC,0B,mCAGvE,WACE,OAAO/nC,EAAUvJ,KAAKsD,KAAK0I,MAAMnR,MAAMyI,KAAK6H,MAAM6L,WAAY1T,KAAK6H,MAAMnQ,U,mCAG3E,WACE,OAAOuO,EAAUvJ,KAAKsD,KAAK0I,MAAMnR,MAAMyI,KAAK6H,MAAMhB,IAAK7G,KAAK4tC,qB,8BAG9D,WACE,OAAO5tC,KAAKg5B,IAAIv4B,EAAQoB,OAAS7B,KAAK+iC,uB,uBAGxC,WAA2B,IAAjBqjB,IAAiB,0DACrBA,EAAWpmD,KAAKgxC,mBAAqBhxC,KAAKg5B,IAAIv4B,EAAQoB,QAC1D7B,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAYjK,EAAcuE,oB,oBAGlD,SAAO1R,EAAM+W,GACXrT,KAAKg5B,IAAI18B,IAAS0D,KAAK84B,WAAWzlB,EAAK/W,K,2BAGzC,WAA6C,IAA/B2X,EAA+B,uDAArB,oBAClBjU,KAAK6H,MAAMnQ,MAAQsI,KAAK6H,MAAM6L,YAChC1T,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAY,CAChCzc,KAAMoS,EAAWE,YACjB4J,WAAY,kBACZ/Q,SAAU6R,M,wBAKhB,SAAWZ,GAIR,IAJagzC,EAIb,uDAJ6B,CAC9BpvD,KAAMoS,EAAWE,YACjB4J,WAAY,kBACZ/Q,SAAU,oBAUV,MARIikD,aAAyBxmD,IAC3BwmD,EAAgB,CACdpvD,KAAMoS,EAAWE,YACjB4J,WAAY,kBACZ/Q,SAAU,+BAAF,OAAiCikD,EAAcvmD,MAA/C,OAINE,KAAKuX,MAAa,MAAPlE,EAAcA,EAAMrT,KAAK6H,MAAMnQ,MAAO2uD,K,0BAGzD,SAAa7nD,EAAM6U,GACjB,IAAKrT,KAAKoJ,UAAU5K,GAClB,MAAMwB,KAAK+T,cAAqB,MAAPV,EAAcA,EAAMrT,KAAK6H,MAAMnQ,MAAO,CAC7D4uD,cAAe,CAAC9nD,IADZ,yEAE+DA,EAF/D,MAKR,OAAO,I,6BAGT,SAAgBf,EAAO4V,GAAK,WAC1B,IAAK5V,EAAMY,MAAK,SAAAgmD,GAAC,OAAI,EAAKj7C,UAAUi7C,MAClC,MAAMrkD,KAAK+T,cAAqB,MAAPV,EAAcA,EAAMrT,KAAK6H,MAAMnQ,MAAO,CAC7D4uD,cAAe7oD,GADX,6FAEmFA,EAAMjE,KAAK,MAF9F,Q,sBAMV,SAASxC,GAAmC,IAA/BuvD,EAA+B,uDAApBvmD,KAAK6H,MAAMu8B,QAC3BoiB,EAAc,CAClBv/C,KAAM,MAGR,IACE,IAAMA,EAAOjQ,GAAG,WAAiB,IAAhBiQ,EAAgB,uDAAT,KAEtB,MADAu/C,EAAYv/C,KAAOA,EACbu/C,KAGR,GAAIxmD,KAAK6H,MAAMwM,OAAO7c,OAAS+uD,EAASlyC,OAAO7c,OAAQ,CACrD,IAAM2sC,EAAYnkC,KAAK6H,MAGvB,OAFA7H,KAAK6H,MAAQ0+C,EACbvmD,KAAK6H,MAAM+lB,aAAeuW,EAAUvW,aAC7B,CACL3mB,OACA5N,MAAO8qC,EAAU9vB,OAAOkyC,EAASlyC,OAAO7c,QACxCkyC,QAAQ,EACRF,SAAS,EACTrF,aAIJ,MAAO,CACLl9B,OACA5N,MAAO,KACPqwC,QAAQ,EACRF,SAAS,EACTrF,UAAW,MAEb,MAAO9qC,GACP,IAAM8qC,EAAYnkC,KAAK6H,MAGvB,GAFA7H,KAAK6H,MAAQ0+C,EAETltD,aAAiBkQ,YACnB,MAAO,CACLtC,KAAM,KACN5N,QACAqwC,QAAQ,EACRF,SAAS,EACTrF,aAIJ,GAAI9qC,IAAUmtD,EACZ,MAAO,CACLv/C,KAAMu/C,EAAYv/C,KAClB5N,MAAO,KACPqwC,QAAQ,EACRF,SAAS,EACTrF,aAIJ,MAAM9qC,K,mCAIV,SAAsB69B,EAAqBuvB,GACzC,IAAKvvB,EAAqB,OAAO,EACjC,IACEwvB,EAGExvB,EAHFwvB,gBACAC,EAEEzvB,EAFFyvB,YACAC,EACE1vB,EADF0vB,mBAGF,IAAKH,EACH,OAAOC,GAAmB,GAAKC,GAAe,GAAKC,GAAsB,EAGvEF,GAAmB,GACrB1mD,KAAK84B,WAAW4tB,GAGdC,GAAe,GACjB3mD,KAAKuX,MAAMovC,EAAal9C,EAAc6B,gBAGpCs7C,GAAsB,GACxB5mD,KAAK84B,WAAW8tB,K,mCAIpB,WACE,OAAO5mD,KAAK3C,MAAMoD,EAAQjC,SAAWwB,KAAK6H,MAAMvL,KAAKzB,SAAWmF,KAAK3C,MAAMoD,EAAQpF,SAAW2E,KAAK3C,MAAMoD,EAAQC,MAAQV,KAAK3C,MAAMoD,EAAQE,SAAWX,KAAK3C,MAAMoD,EAAQG,W,2BAG5K,SAAcqG,GACZ,MAAqB,gBAAdA,EAAK3K,O,8BAGd,SAAiB2K,GACf,OAAOA,EAAKwR,GAAGja,O,sCAGjB,SAAyByI,GACvB,OAAsB,qBAAdA,EAAK3K,MAA6C,6BAAd2K,EAAK3K,OAAwC0D,KAAK6mD,cAAc5/C,EAAKgoB,Y,6BAGnH,SAAgBhoB,GACd,MAAqB,6BAAdA,EAAK3K,MAAqD,2BAAd2K,EAAK3K,O,8BAG1D,SAAiB2K,GACf,MAAqB,mBAAdA,EAAK3K,O,4BAGd,SAAe2K,GACb,MAAqB,iBAAdA,EAAK3K,O,8BAGd,WAAkE,WAAjD4Z,EAAiD,uDAAV,WAA5BlW,KAAK7F,QAAQ2zB,WACjCg5B,EAAY9mD,KAAK6H,MAAM0lB,OAC7BvtB,KAAK6H,MAAM0lB,OAAS,GACpB,IAAMw5B,EAAyB/mD,KAAKgnD,oBACpChnD,KAAKgnD,oBAAsB,IAAIpsD,IAC/B,IAAMqsD,EAAcjnD,KAAKkW,SACzBlW,KAAKkW,SAAWA,EAChB,IAAMgxC,EAAWlnD,KAAKgY,MAChBV,EAAetX,KAAKmnD,kBAC1BnnD,KAAKgY,MAAQ,IAAIV,EAAatX,KAAKuX,MAAMhY,KAAKS,MAAOA,KAAKkW,UAC1D,IAAMkxC,EAAepnD,KAAKk3C,UAC1Bl3C,KAAKk3C,UAAY,IAAIjnB,GACrB,IAAM+0B,EAAgBhlD,KAAKilD,WAC3BjlD,KAAKilD,WAAa,IAAIF,GAAkB/kD,KAAKuX,MAAMhY,KAAKS,OACxD,IAAMqnD,EAAqBrnD,KAAKsnD,gBAEhC,OADAtnD,KAAKsnD,gBAAkB,IAAI9B,GAAuBxlD,KAAKuX,MAAMhY,KAAKS,OAC3D,WACL,EAAK6H,MAAM0lB,OAASu5B,EACpB,EAAKE,oBAAsBD,EAC3B,EAAK7wC,SAAW+wC,EAChB,EAAKjvC,MAAQkvC,EACb,EAAKhQ,UAAYkQ,EACjB,EAAKnC,WAAaD,EAClB,EAAKsC,gBAAkBD,K,gCAI3B,WACE,IAAIE,EA9mJM,EAgnJNvnD,KAAKoJ,UAAU,kBAAoBpJ,KAAKkW,WAC1CqxC,GA/mJc,GAknJhBvnD,KAAKgY,MAAMulB,MAhpRO,GAipRlBv9B,KAAKk3C,UAAU3Z,MAAMgqB,O,GAvQA9H,IA2QnB+H,GACJ,aAAc,UACZxnD,KAAK0mD,iBAAmB,EACxB1mD,KAAK2mD,aAAe,EACpB3mD,KAAK4mD,oBAAsB,GAKzBa,G,WACJ,WAAY3pD,EAAQuV,EAAKzL,GAAK,UAC5B5H,KAAK1D,UAAO,EACZ0D,KAAKtI,WAAQ,EACbsI,KAAK6G,SAAM,EACX7G,KAAK4H,SAAM,EACX5H,KAAK0nD,WAAQ,EACb1nD,KAAKwI,qBAAkB,EACvBxI,KAAKmH,sBAAmB,EACxBnH,KAAKsH,mBAAgB,EACrBtH,KAAKg1B,WAAQ,EACbh1B,KAAK1D,KAAO,GACZ0D,KAAKtI,MAAQ2b,EACbrT,KAAK6G,IAAM,EACX7G,KAAK4H,IAAM,IAAIhB,EAAegB,GAChB,MAAV9J,GAAkBA,EAAO3D,QAAQykD,SAAQ5+C,KAAK0nD,MAAQ,CAACr0C,EAAK,IAClD,MAAVvV,GAAkBA,EAAOgJ,WAAU9G,KAAK4H,IAAId,SAAWhJ,EAAOgJ,U,iCAGpE,WAIE,IAHA,IAAMoyB,EAAU,IAAIuuB,EACd3oD,EAAO1I,OAAO0I,KAAKkB,MAEhBnB,EAAI,EAAGrH,EAASsH,EAAKtH,OAAQqH,EAAIrH,EAAQqH,IAAK,CACrD,IAAME,EAAMD,EAAKD,GAEL,oBAARE,GAAqC,qBAARA,GAAsC,kBAARA,IAC7Dm6B,EAAQn6B,GAAOiB,KAAKjB,IAIxB,OAAOm6B,M,KAkDLyuB,GAAgC,SAAhCA,EAAgC1gD,GACpC,MAAqB,4BAAdA,EAAK3K,KAAqCqrD,EAA8B1gD,EAAKxQ,YAAcwQ,GA2V9F2gD,G,wHACJ,SAAW59B,EAAM69B,EAAUC,EAAU5wB,GACnC,KAAkB,kBAAdlN,EAAK1tB,MAA4B0D,KAAK+nD,eAAe/9B,IAASA,EAAK2M,UAAY3M,EAAKgN,WAAxF,CAIA,IAAMj4B,EAAMirB,EAAKjrB,IAGjB,GAAa,eAFa,eAAbA,EAAIzC,KAAwByC,EAAIP,KAAOO,EAAIxI,OAE9B,CACxB,GAAIsxD,EAEF,YADA7nD,KAAKuX,MAAMxY,EAAIrH,MAAO+R,EAAcsG,eAIlC+3C,EAASE,OACP9wB,GACuC,IAArCA,EAAoByvB,cACtBzvB,EAAoByvB,YAAc5nD,EAAIrH,OAGxCsI,KAAKuX,MAAMxY,EAAIrH,MAAO+R,EAAc6B,iBAIxCw8C,EAASE,MAAO,M,kCAIpB,SAAqB/jB,EAAM1X,GACzB,MAAqB,4BAAd0X,EAAK3nC,MAAsC2nC,EAAKvsC,QAAU60B,I,2BAGnE,WACE,IAAIg7B,EAjlKM,EAmlKNvnD,KAAKoJ,UAAU,kBAAoBpJ,KAAKkW,WAC1CqxC,GAllKc,GAqlKhBvnD,KAAKgY,MAAMulB,MAnnSO,GAonSlBv9B,KAAKk3C,UAAU3Z,MAAMgqB,GACrBvnD,KAAK0qC,YACL,IAAMzG,EAAOjkC,KAAKq5B,kBAclB,OAZKr5B,KAAK3C,MAAMoD,EAAQM,MACtBf,KAAK84B,aAGP94B,KAAKioD,4BACLhkB,EAAK/8B,SAAWlH,KAAK6H,MAAMX,SAC3B+8B,EAAK5vB,OAASrU,KAAK6H,MAAMwM,OAErBrU,KAAK7F,QAAQ0kD,SACf5a,EAAK4a,OAAS7+C,KAAK6+C,QAGd5a,I,6BAGT,SAAgBikB,EAAYhxB,GAAqB,WAC/C,OAAIgxB,EACKloD,KAAKmoD,eAAc,kBAAM,EAAKC,oBAAoBlxB,MAGpDl3B,KAAKqoD,YAAW,kBAAM,EAAKD,oBAAoBlxB,Q,iCAGxD,SAAoBA,GAClB,IAAMD,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtB2wB,EAAOjkC,KAAK4kC,iBAAiB1N,GAEnC,GAAIl3B,KAAK3C,MAAMoD,EAAQmB,OAAQ,CAC7B,IAAMqF,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAGxC,IAFArM,EAAKqhD,YAAc,CAACrkB,GAEbjkC,KAAKg5B,IAAIv4B,EAAQmB,QACtBqF,EAAKqhD,YAAYnpD,KAAKa,KAAK4kC,iBAAiB1N,IAI9C,OADAl3B,KAAKwnC,iBAAiBvgC,EAAKqhD,aACpBtoD,KAAK42B,WAAW3vB,EAAM,sBAG/B,OAAOg9B,I,wCAGT,SAA2B/M,EAAqB6R,GAAgB,WAC9D,OAAO/oC,KAAKmoD,eAAc,kBAAM,EAAKvjB,iBAAiB1N,EAAqB6R,Q,qCAG7E,SAAwB7R,EAAqB6R,GAAgB,WAC3D,OAAO/oC,KAAKqoD,YAAW,kBAAM,EAAKzjB,iBAAiB1N,EAAqB6R,Q,wCAG1E,SAA2B7R,EAAqBqxB,GAC9C,IAAIC,EAEJtxB,EAAoB0vB,mBAA4F,OAAtE4B,EAAkC,MAAfD,OAAsB,EAASA,EAAYl1C,KAAem1C,EAAmBxoD,KAAK6H,MAAMnQ,Q,8BAGvJ,SAAiBw/B,EAAqB6R,GACpC,IAeI0f,EAfExxB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAE5B,GAAItT,KAAKg9B,aAAa,UAChBh9B,KAAKk3C,UAAUwR,SAAU,CAC3B,IAAI5gB,EAAO9nC,KAAK2oD,aAMhB,OAJI5f,IACFjB,EAAOiB,EAAe7pC,KAAKc,KAAM8nC,EAAM7Q,EAAU3jB,IAG5Cw0B,EAMP5Q,EACFuxB,GAAsB,GAEtBvxB,EAAsB,IAAIswB,GAC1BiB,GAAsB,IAGpBzoD,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAK3C,MAAMoD,EAAQjC,SACnDwB,KAAK6H,MAAM0kB,iBAAmBvsB,KAAK6H,MAAMnQ,OAG3C,IAAIowC,EAAO9nC,KAAK4oD,sBAAsB1xB,GAMtC,GAJI6R,IACFjB,EAAOiB,EAAe7pC,KAAKc,KAAM8nC,EAAM7Q,EAAU3jB,IAG/CtT,KAAK6H,MAAMvL,KAAKsD,SAAU,CAC5B,IAAMqH,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAClCyzB,EAAW/mC,KAAK6H,MAAMtR,MAiB5B,OAhBA0Q,EAAK8/B,SAAWA,EAEZ/mC,KAAK3C,MAAMoD,EAAQkC,KACrBsE,EAAK6gC,KAAO9nC,KAAKo3B,aAAa0Q,GAAM,GACpC5Q,EAAoByvB,aAAe,GAEnC1/C,EAAK6gC,KAAOA,EAGV5Q,EAAoBwvB,iBAAmBz/C,EAAK6gC,KAAKpwC,QACnDw/B,EAAoBwvB,iBAAmB,GAGzC1mD,KAAKkoC,UAAUJ,EAAM,yBACrB9nC,KAAKwY,OACLvR,EAAKs4B,MAAQv/B,KAAK4kC,mBACX5kC,KAAK42B,WAAW3vB,EAAM,wBAK/B,OAJWwhD,GACTzoD,KAAK6oD,sBAAsB3xB,GAAqB,GAG3C4Q,I,mCAGT,SAAsB5Q,GACpB,IAAMD,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBiZ,EAAmBvsB,KAAK6H,MAAM0kB,iBAC9B0X,EAAOjkC,KAAK8oD,aAAa5xB,GAE/B,OAAIl3B,KAAK+oD,qBAAqB9kB,EAAM1X,GAC3B0X,EAGFjkC,KAAKgpD,iBAAiB/kB,EAAMhN,EAAU3jB,EAAU4jB,K,8BAGzD,SAAiB+M,EAAMhN,EAAU3jB,EAAU4jB,GACzC,GAAIl3B,KAAKg5B,IAAIv4B,EAAQwB,UAAW,CAC9B,IAAMgF,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAKxC,OAJArM,EAAKvK,KAAOunC,EACZh9B,EAAKs9B,WAAavkC,KAAKy5B,0BACvBz5B,KAAKs5B,OAAO74B,EAAQqB,OACpBmF,EAAK09B,UAAY3kC,KAAK4kC,mBACf5kC,KAAK42B,WAAW3vB,EAAM,yBAG/B,OAAOg9B,I,0BAGT,SAAa/M,GACX,IAAMD,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBiZ,EAAmBvsB,KAAK6H,MAAM0kB,iBAC9B0X,EAAOjkC,KAAK2zC,gBAAgBzc,GAElC,OAAIl3B,KAAK+oD,qBAAqB9kB,EAAM1X,GAC3B0X,EAGFjkC,KAAKq6C,YAAYpW,EAAMhN,EAAU3jB,GAAW,K,yBAGrD,SAAYw0B,EAAMmS,EAAcC,EAAcC,GAC5C,IAAI8O,EAAOjpD,KAAK6H,MAAMvL,KAAK6D,MAE3B,GAAY,MAAR8oD,IAAiBjpD,KAAKk3C,UAAUgS,QAAUlpD,KAAK3C,MAAMoD,EAAQmF,OAC3DqjD,EAAO9O,EAAS,CAClB,IAAM6L,EAAKhmD,KAAK6H,MAAMvL,KAEtB,GAAI0pD,IAAOvlD,EAAQuC,SAAU,CAG3B,GAFAhD,KAAK29C,aAAa,oBAEd39C,KAAK6H,MAAMylB,2BACb,OAAOwa,EAGT9nC,KAAK6H,MAAM8kB,YAAa,EACxB3sB,KAAKmpD,6BAA6BrhB,EAAMmS,GAG1C,IAAMhzC,EAAOjH,KAAK+0B,YAAYklB,EAAcC,GAC5CjzC,EAAK6gC,KAAOA,EACZ7gC,EAAK8/B,SAAW/mC,KAAK6H,MAAMtR,MAC3B,IAAM6yD,EAAUpD,IAAOvlD,EAAQyC,WAAa8iD,IAAOvlD,EAAQ0C,WACrDkmD,EAAWrD,IAAOvlD,EAAQwC,kBAQhC,GANIomD,IACFJ,EAAOxoD,EAAQ0C,WAAWhD,OAG5BH,KAAKwY,OAEDwtC,IAAOvlD,EAAQuC,UAAqE,YAAzDhD,KAAK8zB,gBAAgB,mBAAoB,aAClE9zB,KAAK3C,MAAMoD,EAAQjC,OAA8B,UAArBwB,KAAK6H,MAAMtR,OAAqByJ,KAAKk3C,UAAUoS,SAC7E,MAAMtpD,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcwH,kCAIrDhK,EAAKs4B,MAAQv/B,KAAKupD,qBAAqBvD,EAAIiD,GAC3CjpD,KAAK42B,WAAW3vB,EAAMmiD,GAAWC,EAAW,oBAAsB,oBAClE,IAAMG,EAASxpD,KAAK6H,MAAMvL,KAE1B,GAAI+sD,IAAaG,IAAW/oD,EAAQyC,WAAasmD,IAAW/oD,EAAQ0C,aAAeimD,GAAWI,IAAW/oD,EAAQwC,kBAC/G,MAAMjD,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcyE,2BAGnD,OAAOlO,KAAKq6C,YAAYpzC,EAAMgzC,EAAcC,EAAcC,GAI9D,OAAOrS,I,kCAGT,SAAqBke,EAAIiD,GAAM,WACvBhyB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAE5B,OAAQ0yC,GACN,KAAKvlD,EAAQuC,SACX,OAAQhD,KAAK8zB,gBAAgB,mBAAoB,aAC/C,IAAK,QACH,OAAO9zB,KAAKypD,4BAA2B,WACrC,OAAO,EAAKC,uBAAuB,EAAKC,yBAAyB3D,EAAIiD,GAAOhyB,EAAU3jB,MAG1F,IAAK,SACH,OAAOtT,KAAK4pD,gCAA+B,WACzC,OAAO,EAAKC,wBAAwBZ,MAI5C,QACE,OAAOjpD,KAAK2pD,yBAAyB3D,EAAIiD,M,sCAI/C,SAAyBjD,EAAIiD,GAC3B,IAAMhyB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAC5B,OAAOtT,KAAKq6C,YAAYr6C,KAAK2zC,kBAAmB1c,EAAU3jB,EAAU0yC,EAAG/lD,iBAAmBgpD,EAAO,EAAIA,K,wCAGvG,SAA2BhiD,GACrBjH,KAAK3C,MAAMoD,EAAQqD,WACrB9D,KAAKuX,MAAMtQ,EAAKuyB,SAAS9hC,MAAO+R,EAAcoI,sC,6BAIlD,SAAgBqlB,EAAqB4yB,GACnC,IAAM7yB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBy2C,EAAU/pD,KAAKg9B,aAAa,SAElC,GAAI+sB,GAAW/pD,KAAKgqD,iBAAkB,CACpChqD,KAAKwY,OACL,IAAMyrB,EAAOjkC,KAAKiqD,WAAWhzB,EAAU3jB,GAEvC,OADKw2C,GAAU9pD,KAAKkqD,2BAA2BjmB,GACxCA,EAGT,IAAMkmB,EAASnqD,KAAK3C,MAAMoD,EAAQoC,QAC5BoE,EAAOjH,KAAKy2B,YAElB,GAAIz2B,KAAK6H,MAAMvL,KAAKqB,OAAQ,CAC1BsJ,EAAK8/B,SAAW/mC,KAAK6H,MAAMtR,MAC3B0Q,EAAKtJ,QAAS,EAEVqC,KAAK3C,MAAMoD,EAAQmE,SACrB5E,KAAK29C,aAAa,oBAGpB,IAAMyM,EAAWpqD,KAAK3C,MAAMoD,EAAQuF,SAKpC,GAJAhG,KAAKwY,OACLvR,EAAKuyB,SAAWx5B,KAAK2zC,gBAAgB,MAAM,GAC3C3zC,KAAK6oD,sBAAsB3xB,GAAqB,GAE5Cl3B,KAAK6H,MAAMwkB,QAAU+9B,EAAU,CACjC,IAAM3wD,EAAMwN,EAAKuyB,SAEA,eAAb//B,EAAI6C,KACN0D,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc0G,cAC5BnQ,KAAKqqD,yBAAyB5wD,IACvCuG,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAcwB,oBAIzC,IAAKk/C,EAEH,OADKL,GAAU9pD,KAAKkqD,2BAA2BjjD,GACxCjH,KAAK42B,WAAW3vB,EAAM,mBAIjC,IAAMg9B,EAAOjkC,KAAKsqD,YAAYrjD,EAAMkjD,EAAQjzB,GAE5C,GAAI6yB,KACiB/pD,KAAKoJ,UAAU,eAAiBpJ,KAAK6H,MAAMvL,KAAKoD,WAAaM,KAAK6H,MAAMvL,KAAKoD,aAAeM,KAAK3C,MAAMoD,EAAQkD,WAE/G3D,KAAKuqD,oBAEtB,OADAvqD,KAAKwqD,eAAevzB,EAAUj3B,KAAKoJ,UAAU,iBAAmBK,EAAcQ,uBAAyBR,EAAcS,yBAC9GlK,KAAKiqD,WAAWhzB,EAAU3jB,GAIrC,OAAO2wB,I,yBAGT,SAAYh9B,EAAMkjD,EAAQjzB,GACxB,GAAIizB,EAEF,OADAnqD,KAAKkoC,UAAUjhC,EAAKuyB,SAAU,oBACvBx5B,KAAK42B,WAAW3vB,EAAM,oBAG/B,IAAMgwB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACxB2wB,EAAOjkC,KAAKyqD,oBAAoBvzB,GACpC,GAAIl3B,KAAK6oD,sBAAsB3xB,GAAqB,GAAQ,OAAO+M,EAEnE,KAAOjkC,KAAK6H,MAAMvL,KAAK4D,UAAYF,KAAK+iC,sBAAsB,CAC5D,IAAM97B,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GACxCrM,EAAK8/B,SAAW/mC,KAAK6H,MAAMtR,MAC3B0Q,EAAKtJ,QAAS,EACdsJ,EAAKuyB,SAAWyK,EAChBjkC,KAAKkoC,UAAUjE,EAAM,qBACrBjkC,KAAKwY,OACLyrB,EAAOjkC,KAAK42B,WAAW3vB,EAAM,oBAG/B,OAAOg9B,I,iCAGT,SAAoB/M,GAClB,IAAMD,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SACtBiZ,EAAmBvsB,KAAK6H,MAAM0kB,iBAC9B0X,EAAOjkC,KAAKo5B,cAAclC,GAEhC,OAAIl3B,KAAK+oD,qBAAqB9kB,EAAM1X,GAC3B0X,EAGFjkC,KAAK0qD,gBAAgBzmB,EAAMhN,EAAU3jB,K,6BAG9C,SAAgBokB,EAAMT,EAAU3jB,EAAUqkB,GACxC,IAAM9vB,EAAQ,CACZ+vB,qBAAqB,EACrB+yB,gBAAiB3qD,KAAK65C,qBAAqBniB,GAC3CI,MAAM,GAGR,GACEJ,EAAO13B,KAAK4qD,eAAelzB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAC9DA,EAAM8iD,iBAAkB,SAChB9iD,EAAMiwB,MAEhB,OAAOJ,I,4BAGT,SAAeA,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAChD,IAAK8vB,GAAW33B,KAAKg5B,IAAIv4B,EAAQsB,aAC/B,OAAO/B,KAAK6qD,UAAUnzB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GACpD,GAAI7H,KAAK3C,MAAMoD,EAAQ6B,WAC5B,OAAOtC,KAAKg6C,8BAA8BtiB,EAAMT,EAAU3jB,EAAUzL,GAGtE,IAAIwvB,GAAW,EAEf,GAAIr3B,KAAK3C,MAAMoD,EAAQyB,aAAc,CACnC,GAAIy1B,GAAwC,KAA7B33B,KAAKyzC,oBAElB,OADA5rC,EAAMiwB,MAAO,EACNJ,EAGT7vB,EAAM+vB,oBAAsBP,GAAW,EACvCr3B,KAAKwY,OAGP,OAAKmf,GAAW33B,KAAK3C,MAAMoD,EAAQiB,QAC1B1B,KAAK8qD,gCAAgCpzB,EAAMT,EAAU3jB,EAAUzL,EAAOwvB,GACpEA,GAAYr3B,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAKg5B,IAAIv4B,EAAQuB,KAC/DhC,KAAK+qD,YAAYrzB,EAAMT,EAAU3jB,EAAUzL,EAAOwvB,IAEzDxvB,EAAMiwB,MAAO,EACNJ,K,yBAIX,SAAYA,EAAMT,EAAU3jB,EAAUzL,EAAOwvB,GAC3C,IAAMpwB,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAClCqjB,EAAW32B,KAAKg5B,IAAIv4B,EAAQO,UAClCiG,EAAK6nB,OAAS4I,EACdzwB,EAAK0vB,SAAWA,EAChB,IAAM71B,GAAe61B,GAAY32B,KAAK3C,MAAMoD,EAAQK,cAAgBd,KAAK6H,MAAMtR,MACzE04B,EAAW0H,EAAW32B,KAAKq5B,kBAAoBv4B,EAAcd,KAAKgrD,mBAAqBhrD,KAAK47B,iBAAgB,GAgBlH,OAdoB,IAAhB96B,IACuB,UAArBmG,EAAK6nB,OAAOxyB,MACd0D,KAAKuX,MAAM0f,EAAUxtB,EAAckH,mBAGrC3Q,KAAKilD,WAAWgG,eAAenqD,EAAamuB,EAASv3B,QAGvDuP,EAAKgoB,SAAWA,EAEZ0H,GACF32B,KAAKs5B,OAAO74B,EAAQU,UAGlB0G,EAAM+vB,qBACR3wB,EAAKowB,SAAWA,EACTr3B,KAAK42B,WAAW3vB,EAAM,6BAEtBjH,KAAK42B,WAAW3vB,EAAM,sB,uBAIjC,SAAUywB,EAAMT,EAAU3jB,EAAUqkB,EAAS9vB,GAC3C,IAAMZ,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAIxC,OAHArM,EAAK6nB,OAAS4I,EACdzwB,EAAKqwB,OAASt3B,KAAKkrD,kBACnBrjD,EAAMiwB,MAAO,EACN93B,KAAK0qD,gBAAgB1qD,KAAK42B,WAAW3vB,EAAM,kBAAmBgwB,EAAU3jB,EAAUqkB,K,6CAG3F,SAAgCD,EAAMT,EAAU3jB,EAAUzL,EAAOwvB,GAC/D,IAAMuhB,EAA4B54C,KAAK6H,MAAM6kB,uBACzCwK,EAAsB,KAC1Bl3B,KAAK6H,MAAM6kB,wBAAyB,EACpC1sB,KAAKwY,OACL,IAAIvR,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAmCtC,OAlCArM,EAAKqwB,OAASI,EAEV7vB,EAAM8iD,kBACR3qD,KAAKsnD,gBAAgB/pB,MAlqClB,IAAI+nB,GAlIgC,IAqyCvCpuB,EAAsB,IAAIswB,IAGxB3/C,EAAM+vB,sBACR3wB,EAAKowB,SAAWA,GAIhBpwB,EAAK4B,UADHwuB,EACer3B,KAAK8pC,6BAA6BrpC,EAAQkB,QAE1C3B,KAAK8pC,6BAA6BrpC,EAAQkB,OAAsB,WAAd+1B,EAAKp7B,KAAiC,UAAdo7B,EAAKp7B,KAAkB2K,EAAMiwB,GAG1Hl3B,KAAKmqC,qBAAqBljC,EAAMY,EAAM+vB,qBAElC/vB,EAAM8iD,iBAAmB3qD,KAAKmrD,0BAA4B9zB,GAC5DxvB,EAAMiwB,MAAO,EACb93B,KAAKsnD,gBAAgB8D,oBACrBprD,KAAKsnD,gBAAgB3pB,OACrB12B,EAAOjH,KAAKqrD,kCAAkCrrD,KAAK+0B,YAAYkC,EAAU3jB,GAAWrM,KAEhFY,EAAM8iD,kBACR3qD,KAAK6oD,sBAAsB3xB,GAAqB,GAChDl3B,KAAKsnD,gBAAgB3pB,QAGvB39B,KAAKsrD,sBAAsBrkD,IAG7BjH,KAAK6H,MAAM6kB,uBAAyBksB,EAC7B3xC,I,mCAGT,SAAsBA,EAAMkgC,GAC1BnnC,KAAKurD,qBAAqBtkD,EAAK4B,UAAWs+B,K,2CAG5C,SAA8BzP,EAAMT,EAAU3jB,EAAUzL,GACtD,IAAMZ,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAQxC,OAPArM,EAAKukD,IAAM9zB,EACXzwB,EAAKwkD,MAAQzrD,KAAKozC,eAAc,GAE5BvrC,EAAM+vB,qBACR53B,KAAKuX,MAAM0f,EAAUxtB,EAAcsF,4BAG9B/O,KAAK42B,WAAW3vB,EAAM,8B,kCAG/B,SAAqBywB,GACnB,MAAqB,eAAdA,EAAKp7B,MAAuC,UAAdo7B,EAAKl5B,MAAoBwB,KAAK6H,MAAM6L,aAAegkB,EAAK7wB,MAAQ7G,KAAK+iC,sBAAwBrL,EAAK7wB,IAAM6wB,EAAKhgC,QAAU,GAAKggC,EAAKhgC,QAAUsI,KAAK6H,MAAM0kB,mB,kCAG7L,SAAqBtlB,EAAMowB,GACzB,GAAyB,WAArBpwB,EAAKqwB,OAAOh7B,KASd,GAR8B,IAA1B2K,EAAK4B,UAAUrR,SAEVwI,KAAKoJ,UAAU,qBAClBpJ,KAAK29C,aAAa,qBAKM,IAA1B12C,EAAK4B,UAAUrR,QAAgByP,EAAK4B,UAAUrR,OAAS,EACzDwI,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc4C,gBAAiBrM,KAAKoJ,UAAU,qBAAuBpJ,KAAKoJ,UAAU,oBAAsB,uBAAyB,oBACrJ,WACanC,EAAK4B,WADlB,IACL,2BAAkC,KAAvBpP,EAAuB,QACf,kBAAbA,EAAI6C,MACN0D,KAAKuX,MAAM9d,EAAI/B,MAAO+R,EAAc8C,2BAHnC,+BAST,OAAOvM,KAAK42B,WAAW3vB,EAAMowB,EAAW,yBAA2B,oB,0CAGrE,SAA6BgQ,EAAOqkB,EAAeC,EAAkBC,EAAc10B,GACjF,IAAM20B,EAAO,GACT3pB,GAAQ,EACN4pB,EAAgC9rD,KAAK6H,MAAMylB,2BAGjD,IAFAttB,KAAK6H,MAAMylB,4BAA6B,GAEhCttB,KAAKg5B,IAAIqO,IAAQ,CACvB,GAAInF,EACFA,GAAQ,OAIR,GAFAliC,KAAKs5B,OAAO74B,EAAQmB,OAEhB5B,KAAK3C,MAAMgqC,GAAQ,EACjBqkB,GAAkB1rD,KAAKoJ,UAAU,qBAAwBpJ,KAAKoJ,UAAU,qBAC1EpJ,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAc9J,EAAc2C,iCAGhDw/C,GACF5rD,KAAKy1B,SAASm2B,EAAc,gBAAiB5rD,KAAK6H,MAAM0L,cAG1DvT,KAAKwY,OACL,MAIJqzC,EAAK1sD,KAAKa,KAAK+rD,mBAAkB,EAAO70B,EAAqBy0B,IAI/D,OADA3rD,KAAK6H,MAAMylB,2BAA6Bw+B,EACjCD,I,mCAGT,WACE,OAAO7rD,KAAK3C,MAAMoD,EAAQ0B,SAAWnC,KAAK+iC,uB,+CAG5C,SAAkC97B,EAAM/H,GACtC,IAAI8sD,EAOJ,OALAhsD,KAAKisD,kCAAkC/sD,GACvCc,KAAKs5B,OAAO74B,EAAQ0B,OACpBnC,KAAKyqC,qBAAqBxjC,EAAM/H,EAAK2J,WAAW,EAAoC,OAA7BmjD,EAAc9sD,EAAK81B,YAAiB,EAASg3B,EAAYxmB,eAChHn+B,EAAiBJ,EAAM/H,EAAKoI,eAC5BD,EAAiBJ,EAAM/H,EAAKo4B,OAAOnwB,kBAC5BF,I,6BAGT,WACE,IAAMgwB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAC5B,OAAOtT,KAAK0qD,gBAAgB1qD,KAAKo5B,gBAAiBnC,EAAU3jB,GAAU,K,2BAGxE,SAAc4jB,GACZ,IAAIjwB,EAEJ,OAAQjH,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQ2E,OACX,OAAOpF,KAAKksD,aAEd,KAAKzrD,EAAQ+E,QAIX,OAHAyB,EAAOjH,KAAKy2B,YACZz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQuB,KACdhC,KAAKmsD,wBAAwBllD,IAGjCjH,KAAK3C,MAAMoD,EAAQiB,SACtB1B,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAc9J,EAAcwI,mBAG7CjS,KAAK42B,WAAW3vB,EAAM,WAE/B,KAAKxG,EAAQ0E,MAGX,OAFA8B,EAAOjH,KAAKy2B,YACZz2B,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,kBAE/B,KAAKxG,EAAQjC,KAET,GAAIwB,KAAKg9B,aAAa,WAA0C,MAA7Bh9B,KAAKyzC,sBAAgCzzC,KAAK24C,wBAC3E,OAAO34C,KAAKosD,wBAGd,IAAMviB,EAAa7pC,KAAK6H,MAAM0kB,mBAAqBvsB,KAAK6H,MAAMnQ,MACxDg2B,EAAc1tB,KAAK6H,MAAM6lB,YACzBjV,EAAKzY,KAAK47B,kBAEhB,IAAKlO,GAA2B,UAAZjV,EAAGja,OAAqBwB,KAAK+iC,qBAAsB,CACrE,GAAI/iC,KAAK3C,MAAMoD,EAAQ+D,WAGrB,OAFAxE,KAAKisD,kCAAkCxzC,GACvCzY,KAAKwY,OACExY,KAAKqsD,cAAcrsD,KAAKg4B,gBAAgBvf,QAAKjZ,GAAW,GAC1D,GAAIQ,KAAK3C,MAAMoD,EAAQjC,MAC5B,OAAiC,KAA7BwB,KAAKyzC,oBACAzzC,KAAKssD,6BAA6BtsD,KAAKg4B,gBAAgBvf,IAEvDA,EAEJ,GAAIzY,KAAK3C,MAAMoD,EAAQ2D,KAE5B,OADApE,KAAKisD,kCAAkCxzC,GAChCzY,KAAKusD,QAAQvsD,KAAKg4B,gBAAgBvf,IAAK,GAIlD,OAAIoxB,GAAc7pC,KAAK3C,MAAMoD,EAAQ0B,SAAWnC,KAAK+iC,sBACnD/iC,KAAKwY,OACExY,KAAKyqC,qBAAqBzqC,KAAKg4B,gBAAgBvf,GAAK,CAACA,IAAK,IAG5DA,EAGX,KAAKhY,EAAQ2D,IAET,OAAOpE,KAAKusD,QAAQvsD,KAAKy2B,aAAa,GAG1C,KAAKh2B,EAAQoD,MACb,KAAKpD,EAAQmC,YAGT,OADA5C,KAAKwsD,aACExsD,KAAKysD,mBAAmBzsD,KAAK6H,MAAMtR,OAG9C,KAAKkK,EAAQC,IACX,OAAOV,KAAK0rC,oBAAoB1rC,KAAK6H,MAAMtR,OAE7C,KAAKkK,EAAQE,OACX,OAAOX,KAAK0sD,mBAAmB1sD,KAAK6H,MAAMtR,OAE5C,KAAKkK,EAAQG,QACX,OAAOZ,KAAK2sD,oBAAoB3sD,KAAK6H,MAAMtR,OAE7C,KAAKkK,EAAQpF,OACX,OAAO2E,KAAK2rC,mBAAmB3rC,KAAK6H,MAAMtR,OAE5C,KAAKkK,EAAQgF,MACX,OAAOzF,KAAK4sD,mBAEd,KAAKnsD,EAAQiF,MACX,OAAO1F,KAAK4rC,qBAAoB,GAElC,KAAKnrC,EAAQkF,OACX,OAAO3F,KAAK4rC,qBAAoB,GAElC,KAAKnrC,EAAQiB,OAET,IAAMmoC,EAAa7pC,KAAK6H,MAAM0kB,mBAAqBvsB,KAAK6H,MAAMnQ,MAC9D,OAAOsI,KAAK6sD,mCAAmChjB,GAGnD,KAAKppC,EAAQS,YACb,KAAKT,EAAQQ,aAET,OAAOjB,KAAK8sD,eAAe9sD,KAAK6H,MAAMvL,OAASmE,EAAQS,YAAcT,EAAQW,YAAcX,EAAQU,UAAU,GAAO,EAAM+1B,GAG9H,KAAKz2B,EAAQO,SAET,OAAOhB,KAAK8sD,eAAersD,EAAQU,UAAU,GAAM,EAAO+1B,GAG9D,KAAKz2B,EAAQa,UACb,KAAKb,EAAQc,WAET,OAAOvB,KAAK+sD,gBAAgB/sD,KAAK6H,MAAMvL,OAASmE,EAAQa,UAAYb,EAAQgB,UAAYhB,EAAQe,QAAQ,GAAO,EAAM01B,GAGzH,KAAKz2B,EAAQY,OAET,OAAOrB,KAAK+sD,gBAAgBtsD,EAAQe,QAAQ,GAAO,EAAO01B,GAG9D,KAAKz2B,EAAQ+D,UACX,OAAOxE,KAAKgtD,8BAEd,KAAKvsD,EAAQ+B,GACXxC,KAAKitD,kBAEP,KAAKxsD,EAAQ4E,OAGX,OAFA4B,EAAOjH,KAAKy2B,YACZz2B,KAAKs9C,eAAer2C,GACbjH,KAAKg4C,WAAW/wC,GAAM,GAE/B,KAAKxG,EAAQyE,KACX,OAAOlF,KAAKktD,sBAEd,KAAKzsD,EAAQ6B,UACX,OAAOtC,KAAKozC,eAAc,GAE5B,KAAK3yC,EAAQsB,YAETkF,EAAOjH,KAAKy2B,YACZz2B,KAAKwY,OACLvR,EAAK6nB,OAAS,KACd,IAAMwI,EAASrwB,EAAKqwB,OAASt3B,KAAKkrD,kBAElC,GAAoB,qBAAhB5zB,EAAOh7B,KACT,OAAO0D,KAAK42B,WAAW3vB,EAAM,kBAE7B,MAAMjH,KAAKuX,MAAM+f,EAAO5/B,MAAO+R,EAAcqI,iBAInD,KAAKrR,EAAQK,YAET,IAAMpJ,EAAQsI,KAAK6H,MAAMnQ,MACnBnB,EAAQyJ,KAAK6H,MAAMtR,MAGzB,GAFA0Q,EAAOjH,KAAKgrD,mBAERhrD,KAAK3C,MAAMoD,EAAQmF,KACrB5F,KAAK29C,aAAa,aAClB39C,KAAKilD,WAAWgG,eAAe10D,EAAO0Q,EAAKvP,WACtC,KAAIsI,KAAKoJ,UAAU,aAGxB,MAAMpJ,KAAK84B,WAAWphC,GAFtBsI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAciG,oBAAqBnZ,GAKlE,OAAO0Q,EAGX,KAAKxG,EAAQgC,KAET,GAAIzC,KAAK6H,MAAM8kB,WAcb,OAbA1lB,EAAOjH,KAAKy2B,YAEiD,UAAzDz2B,KAAK8zB,gBAAgB,mBAAoB,aAC3C9zB,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAcgG,mCAGvCzP,KAAKwY,OAEAxY,KAAKmtD,uDACRntD,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc+F,wBAGvCxP,KAAKotD,yBACEptD,KAAK42B,WAAW3vB,EAAM,iCAInC,KAAKxG,EAAQ+C,WAET,GAAyB,MAArBxD,KAAK6H,MAAMtR,MAAe,CAC5B,IAAM82D,EAAcrtD,KAAK0I,MAAM4kD,YAAYttD,KAAK4tC,mBAE5Cp4B,EAAkB63C,IAAgC,KAAhBA,IAClCrtD,KAAKutD,gBAAgB,CAAC,MAAO,OAAQ,eAK/C,QACE,MAAMvtD,KAAK84B,gB,0CAIjB,SAA6B7xB,GAC3BjH,KAAKk3C,UAAU3Z,MAAMnN,IAAc,EAAMpwB,KAAKk3C,UAAUwR,WACxD,IAAM5/C,EAAS,CAAC9I,KAAK47B,mBASrB,OARA57B,KAAKk3C,UAAUvZ,OAEX39B,KAAKguC,yBACPhuC,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcmE,2BAG3C5N,KAAKs5B,OAAO74B,EAAQ0B,OACpBnC,KAAKyqC,qBAAqBxjC,EAAM6B,GAAQ,GACjC7B,I,qBAGT,SAAQA,EAAMopB,GACZrwB,KAAK29C,aAAa,iBAEdttB,GACFrwB,KAAK29C,aAAa,sBAGpB12C,EAAKwiC,MAAQpZ,EACbrwB,KAAKwY,OACL,IAAMsuC,EAAY9mD,KAAK6H,MAAM0lB,OAY7B,OAXAvtB,KAAK6H,MAAM0lB,OAAS,GAEhB8C,GACFrwB,KAAKk3C,UAAU3Z,MAt3LD,GAu3Ldt2B,EAAK3P,KAAO0I,KAAKwtD,aACjBxtD,KAAKk3C,UAAUvZ,QAEf12B,EAAK3P,KAAO0I,KAAKwtD,aAGnBxtD,KAAK6H,MAAM0lB,OAASu5B,EACb9mD,KAAK42B,WAAW3vB,EAAM,kB,wBAG/B,WACE,IAAMA,EAAOjH,KAAKy2B,YAalB,OAZAz2B,KAAKwY,QAEDxY,KAAK3C,MAAMoD,EAAQiB,SAAY1B,KAAKgY,MAAMse,kBAAqBt2B,KAAK7F,QAAQukD,wBAEpE1+C,KAAKgY,MAAMy1C,YAAeztD,KAAK7F,QAAQukD,yBACjD1+C,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAckI,iBAFrC3R,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAciH,iBAKlC1Q,KAAK3C,MAAMoD,EAAQiB,SAAY1B,KAAK3C,MAAMoD,EAAQO,WAAchB,KAAK3C,MAAMoD,EAAQuB,MACtFhC,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc4I,kBAGhCrS,KAAK42B,WAAW3vB,EAAM,W,mCAG/B,SAAsB4gC,GAGpB,OAFkB7nC,KAAK3C,MAAMoD,EAAQK,cAG9B+mC,GACH7nC,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAQ,EAAG+R,EAAcgI,wBAG1CzR,KAAKgrD,oBAELhrD,KAAK47B,iBAAgB,K,8BAIhC,WACE,IAAM30B,EAAOjH,KAAKy2B,YACZhe,EAAKzY,KAAK+0B,YAAY/0B,KAAK6H,MAAMnQ,MAAQ,EAAG,IAAI8O,EAASxG,KAAK6H,MAAMykB,QAAStsB,KAAK6H,MAAMnQ,MAAQ,EAAIsI,KAAK6H,MAAM+L,YAC/GpV,EAAOwB,KAAK6H,MAAMtR,MAGxB,OAFAyJ,KAAKwY,OACLvR,EAAKwR,GAAKzY,KAAK0xC,iBAAiBj5B,EAAIja,GAC7BwB,KAAK42B,WAAW3vB,EAAM,iB,yCAG/B,WACE,IAAMA,EAAOjH,KAAKy2B,YAGlB,GAFAz2B,KAAKwY,OAEDxY,KAAKk3C,UAAUwR,UAAY1oD,KAAK3C,MAAMoD,EAAQuB,KAAM,CACtD,IAAM0rD,EAAO1tD,KAAK0xC,iBAAiB1xC,KAAKg4B,gBAAgB/wB,GAAO,YAE/D,OADAjH,KAAKwY,OACExY,KAAK2tD,kBAAkB1mD,EAAMymD,EAAM,QAG5C,OAAO1tD,KAAKqsD,cAAcplD,K,+BAG5B,SAAkBA,EAAMymD,EAAME,GAC5B3mD,EAAKymD,KAAOA,EAEM,aAAdA,EAAKlvD,MAAwC,SAAjBovD,IAC1B5tD,KAAKg9B,aAAa4wB,GACpB5tD,KAAK29C,aAAa,gBACR39C,KAAKoJ,UAAU,iBACzBpJ,KAAK84B,cAIT,IAAMpL,EAAc1tB,KAAK6H,MAAM6lB,YAO/B,OANAzmB,EAAKgoB,SAAWjvB,KAAK47B,iBAAgB,IAEjC30B,EAAKgoB,SAASzwB,OAASovD,GAAgBlgC,IACzC1tB,KAAKuX,MAAMtQ,EAAKgoB,SAASv3B,MAAO+R,EAAcyI,wBAAyBw7C,EAAKlvD,KAAMovD,GAG7E5tD,KAAK42B,WAAW3vB,EAAM,kB,qCAG/B,SAAwBA,GACtB,IAAMwR,EAAKzY,KAAK0xC,iBAAiB1xC,KAAKg4B,gBAAgB/wB,GAAO,UAW7D,OAVAjH,KAAKwY,OAEDxY,KAAKg9B,aAAa,UACfh9B,KAAKkW,UACRlW,KAAKuX,MAAMkB,EAAG/gB,MAAOob,EAA8BC,yBAGrD/S,KAAKgJ,mBAAoB,GAGpBhJ,KAAK2tD,kBAAkB1mD,EAAMwR,EAAI,U,gCAG1C,SAAmBliB,EAAO+F,EAAM2K,GAK9B,OAJAjH,KAAKy1B,SAASxuB,EAAM,WAAY1Q,GAChCyJ,KAAKy1B,SAASxuB,EAAM,MAAOjH,KAAK0I,MAAMnR,MAAM0P,EAAKvP,MAAOsI,KAAK6H,MAAMhB,MACnEI,EAAK1Q,MAAQA,EACbyJ,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM3K,K,0BAG/B,SAAa/F,EAAO+F,GAClB,IAAM2K,EAAOjH,KAAKy2B,YAClB,OAAOz2B,KAAK4iC,mBAAmBrsC,EAAO+F,EAAM2K,K,gCAG9C,SAAmB1Q,GACjB,OAAOyJ,KAAK40B,aAAar+B,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAOyJ,KAAK40B,aAAar+B,EAAO,oB,gCAGlC,SAAmBA,GACjB,OAAOyJ,KAAK40B,aAAar+B,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAOyJ,KAAK40B,aAAar+B,EAAO,oB,gCAGlC,SAAmBA,GACjB,IAAM0Q,EAAOjH,KAAK40B,aAAar+B,EAAMA,MAAO,iBAG5C,OAFA0Q,EAAKqtB,QAAU/9B,EAAM+9B,QACrBrtB,EAAKiQ,MAAQ3gB,EAAM2gB,MACZjQ,I,iCAGT,SAAoB1Q,GAClB,IAAM0Q,EAAOjH,KAAKy2B,YAGlB,OAFAxvB,EAAK1Q,MAAQA,EACbyJ,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,oB,8BAG/B,WACE,IAAMA,EAAOjH,KAAKy2B,YAElB,OADAz2B,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,iB,gDAG/B,SAAmC4iC,GACjC,IAEI3b,EAFE+I,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAE5BtT,KAAKwY,OACLxY,KAAKsnD,gBAAgB/pB,MA7qDhB,IAAI+nB,GAhI2B,IA8yDpC,IAAM1M,EAA4B54C,KAAK6H,MAAM6kB,uBACvCo/B,EAAgC9rD,KAAK6H,MAAMylB,2BACjDttB,KAAK6H,MAAM6kB,wBAAyB,EACpC1sB,KAAK6H,MAAMylB,4BAA6B,EASxC,IARA,IAKIugC,EACAC,EANEC,EAAgB/tD,KAAK6H,MAAMnQ,MAC3Bs2D,EAAgBhuD,KAAK6H,MAAMyL,SAC3B2zB,EAAW,GACX/P,EAAsB,IAAIswB,GAC5BtlB,GAAQ,GAIJliC,KAAK3C,MAAMoD,EAAQkB,SAAS,CAClC,GAAIugC,EACFA,GAAQ,OAIR,GAFAliC,KAAKs5B,OAAO74B,EAAQmB,OAAmD,IAA5Cs1B,EAAoB0vB,mBAA4B,KAAO1vB,EAAoB0vB,oBAElG5mD,KAAK3C,MAAMoD,EAAQkB,QAAS,CAC9BmsD,EAAqB9tD,KAAK6H,MAAMnQ,MAChC,MAIJ,GAAIsI,KAAK3C,MAAMoD,EAAQ4B,UAAW,CAChC,IAAM4rD,EAAqBjuD,KAAK6H,MAAMnQ,MAChCw2D,EAAqBluD,KAAK6H,MAAMyL,SACtCu6C,EAAc7tD,KAAK6H,MAAMnQ,MACzBuvC,EAAS9nC,KAAKa,KAAKmuD,eAAenuD,KAAKouD,mBAAoBH,EAAoBC,IAC/EluD,KAAKquD,oBAAoB,IACzB,MAEApnB,EAAS9nC,KAAKa,KAAKy5B,wBAAwBvC,EAAqBl3B,KAAKmuD,iBAIzE,IAAMG,EAActuD,KAAK6H,MAAM6L,WACzB66C,EAAcvuD,KAAK6H,MAAM8L,cAC/B3T,KAAKs5B,OAAO74B,EAAQkB,QACpB3B,KAAK6H,MAAM6kB,uBAAyBksB,EACpC54C,KAAK6H,MAAMylB,2BAA6Bw+B,EACxC,IAAI0C,EAAYxuD,KAAK+0B,YAAYkC,EAAU3jB,GAE3C,GAAIu2B,GAAc7pC,KAAKyuD,qBAAuBD,EAAYxuD,KAAKwqC,WAAWgkB,IAIxE,OAHAxuD,KAAKsnD,gBAAgB8D,oBACrBprD,KAAKsnD,gBAAgB3pB,OACrB39B,KAAKyqC,qBAAqB+jB,EAAWvnB,GAAU,GACxCunB,EAwBT,GArBAxuD,KAAKsnD,gBAAgB3pB,OAEhBsJ,EAASzvC,QACZwI,KAAK84B,WAAW94B,KAAK6H,MAAM0L,cAGzBu6C,GAAoB9tD,KAAK84B,WAAWg1B,GACpCD,GAAa7tD,KAAK84B,WAAW+0B,GACjC7tD,KAAK6oD,sBAAsB3xB,GAAqB,GAChDl3B,KAAKurD,qBAAqBtkB,GAAU,GAEhCA,EAASzvC,OAAS,IACpB02B,EAAMluB,KAAK+0B,YAAYg5B,EAAeC,IAClC1F,YAAcrhB,EAClBjnC,KAAK42B,WAAW1I,EAAK,sBACrBA,EAAIrnB,IAAMynD,EACVpgC,EAAItmB,IAAIf,IAAM0nD,GAEdrgC,EAAM+Y,EAAS,IAGZjnC,KAAK7F,QAAQ2kD,+BAGhB,OAFA9+C,KAAKy1B,SAASvH,EAAK,iBAAiB,GACpCluB,KAAKy1B,SAASvH,EAAK,aAAc+I,GAC1B/I,EAGT,IAAMwgC,EAAkB1uD,KAAK+0B,YAAYkC,EAAU3jB,GAGnD,OAFAo7C,EAAgBj4D,WAAay3B,EAC7BluB,KAAK42B,WAAW83B,EAAiB,2BAC1BA,I,8BAGT,WACE,OAAQ1uD,KAAK+iC,uB,wBAGf,SAAW97B,GACT,GAAIjH,KAAKg5B,IAAIv4B,EAAQ0B,OACnB,OAAO8E,I,4BAIX,SAAeA,EAAMgwB,EAAU3jB,GAC7B,OAAOrM,I,iCAGT,WACE,IAAMA,EAAOjH,KAAKy2B,YAGlB,GAFAz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQuB,KAAM,CAC3B,IAAM0rD,EAAO1tD,KAAK0xC,iBAAiB1xC,KAAKg4B,gBAAgB/wB,GAAO,OAC/DjH,KAAKwY,OACL,IAAMm2C,EAAW3uD,KAAK2tD,kBAAkB1mD,EAAMymD,EAAM,UAMpD,OAJK1tD,KAAKgY,MAAM42C,oBAAuB5uD,KAAKgY,MAAMiqC,SAChDjiD,KAAKuX,MAAMo3C,EAASj3D,MAAO+R,EAAc8H,qBAGpCo9C,EAGT,OAAO3uD,KAAK6uD,SAAS5nD,K,sBAGvB,SAASA,GAYP,OAXAA,EAAKqwB,OAASt3B,KAAKkrD,kBAEM,WAArBjkD,EAAKqwB,OAAOh7B,KACd0D,KAAKuX,MAAMtQ,EAAKqwB,OAAO5/B,MAAO+R,EAAc6C,4BACnCtM,KAAK8uD,gBAAgB7nD,EAAKqwB,QACnCt3B,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAYjK,EAAcqF,uBACvC9O,KAAKg5B,IAAIv4B,EAAQyB,cAC1BlC,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcqF,uBAG7C9O,KAAK+uD,kBAAkB9nD,GAChBjH,KAAK42B,WAAW3vB,EAAM,mB,+BAG/B,SAAkBA,GAChB,GAAIjH,KAAKg5B,IAAIv4B,EAAQiB,QAAS,CAC5B,IAAMlJ,EAAOwH,KAAKgvD,cAAcvuD,EAAQkB,QACxC3B,KAAKwnC,iBAAiBhvC,GACtByO,EAAK4B,UAAYrQ,OAEjByO,EAAK4B,UAAY,K,kCAIrB,SAAqBomD,GACnB,IAAMC,EAAOlvD,KAAKy2B,YAclB,OAZyB,OAArBz2B,KAAK6H,MAAMtR,QACR04D,GACHjvD,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAQ,EAAG+R,EAAcoD,gCAInDqiD,EAAK34D,MAAQ,CACX2+B,IAAKl1B,KAAK0I,MAAMnR,MAAMyI,KAAK6H,MAAMnQ,MAAOsI,KAAK6H,MAAMhB,KAAKqN,QAAQ,SAAU,MAC1Ei7C,OAAQnvD,KAAK6H,MAAMtR,OAErByJ,KAAKwY,OACL02C,EAAKE,KAAOpvD,KAAK3C,MAAMoD,EAAQ6B,WACxBtC,KAAK42B,WAAWs4B,EAAM,qB,2BAG/B,SAAcD,GACZ,IAAMhoD,EAAOjH,KAAKy2B,YAClBz2B,KAAKwY,OACLvR,EAAKqhD,YAAc,GACnB,IAAI+G,EAASrvD,KAAKsvD,qBAAqBL,GAGvC,IAFAhoD,EAAKsoD,OAAS,CAACF,IAEPA,EAAOD,MACbpvD,KAAKs5B,OAAO74B,EAAQ8B,cACpB0E,EAAKqhD,YAAYnpD,KAAKa,KAAKwvD,6BAC3BxvD,KAAKs5B,OAAO74B,EAAQe,QACpByF,EAAKsoD,OAAOpwD,KAAKkwD,EAASrvD,KAAKsvD,qBAAqBL,IAItD,OADAjvD,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,qB,uCAG/B,WACE,OAAOjH,KAAKq5B,oB,6BAGd,SAAgBgO,EAAOvQ,EAAW+wB,EAAU3wB,GACtC2wB,GACF7nD,KAAK29C,aAAa,kBAGpB,IAAMmO,EAAgC9rD,KAAK6H,MAAMylB,2BACjDttB,KAAK6H,MAAMylB,4BAA6B,EACxC,IAAMmiC,EAAWr5D,OAAOs5D,OAAO,MAC3BxtB,GAAQ,EACNj7B,EAAOjH,KAAKy2B,YAIlB,IAHAxvB,EAAK2B,WAAa,GAClB5I,KAAKwY,QAEGxY,KAAK3C,MAAMgqC,IAAQ,CACzB,GAAInF,EACFA,GAAQ,OAIR,GAFAliC,KAAKs5B,OAAO74B,EAAQmB,OAEhB5B,KAAK3C,MAAMgqC,GAAQ,CACrBrnC,KAAKy1B,SAASxuB,EAAM,gBAAiBjH,KAAK6H,MAAM0L,cAChD,MAIJ,IAAMyW,EAAOhqB,KAAK2vD,wBAAwB74B,EAAWI,GAEhDJ,GACH92B,KAAK4vD,WAAW5lC,EAAM69B,EAAU4H,EAAUv4B,GAGxC2wB,IAAa7nD,KAAKo1B,iBAAiBpL,IAAuB,kBAAdA,EAAK1tB,MACnD0D,KAAKuX,MAAMyS,EAAKtyB,MAAO+R,EAAc+D,uBAGnCwc,EAAKgN,WACPh3B,KAAKy1B,SAASzL,EAAM,aAAa,GAGnC/iB,EAAK2B,WAAWzJ,KAAK6qB,GAGvBhqB,KAAKwY,OACLxY,KAAK6H,MAAMylB,2BAA6Bw+B,EACxC,IAAIxvD,EAAO,mBAQX,OANIw6B,EACFx6B,EAAO,gBACEurD,IACTvrD,EAAO,oBAGF0D,KAAK42B,WAAW3vB,EAAM3K,K,sCAG/B,SAAyB0tB,GACvB,OAAQA,EAAK2M,UAA8B,eAAlB3M,EAAKjrB,IAAIzC,OAA0B0D,KAAK+tC,yBAA2B/tC,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAK3C,MAAMoD,EAAQmD,S,qCAGjJ,SAAwBkzB,EAAWI,GACjC,IAAI+hB,EAAa,GAEjB,GAAIj5C,KAAK3C,MAAMoD,EAAQ+B,IAKrB,IAJIxC,KAAKoJ,UAAU,eACjBpJ,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc2I,8BAGtCpS,KAAK3C,MAAMoD,EAAQ+B,KACxBy2C,EAAW95C,KAAKa,KAAK6vD,kBAIzB,IAII54B,EACA3jB,EALE0W,EAAOhqB,KAAKy2B,YACdnG,GAAc,EACdD,GAAU,EACV0G,GAAa,EAIjB,GAAI/2B,KAAK3C,MAAMoD,EAAQ4B,UAGrB,OAFI42C,EAAWzhD,QAAQwI,KAAK84B,aAExBhC,GACF92B,KAAKwY,OACLwR,EAAKwP,SAAWx5B,KAAK47B,kBACrB57B,KAAKquD,oBAAoB,KAClBruD,KAAK42B,WAAW5M,EAAM,gBAGxBhqB,KAAK8vD,cAGV7W,EAAWzhD,SACbwyB,EAAKivB,WAAaA,EAClBA,EAAa,IAGfjvB,EAAKsL,QAAS,GAEVwB,GAAaI,KACfD,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,UAGnBwjB,IACHxG,EAActwB,KAAKg5B,IAAIv4B,EAAQmD,OAGjC,IAAM8pB,EAAc1tB,KAAK6H,MAAM6lB,YACzB3uB,EAAMiB,KAAK+xC,kBAAkB/nB,GAAM,GAEzC,IAAK8M,IAAcxG,IAAgB5C,GAAe1tB,KAAK+vD,yBAAyB/lC,GAAO,CACrF,IAAMgmC,EAAUjxD,EAAIP,KAEJ,UAAZwxD,GAAwBhwD,KAAKguC,0BAC/B3d,GAAU,EACVrwB,KAAKisD,kCAAkCltD,GACvCuxB,EAActwB,KAAKg5B,IAAIv4B,EAAQmD,MAC/B5D,KAAK+xC,kBAAkB/nB,GAAM,IAGf,QAAZgmC,GAAiC,QAAZA,IACvBj5B,GAAa,EACb/2B,KAAKisD,kCAAkCltD,GACvCirB,EAAK0M,KAAOs5B,EAERhwD,KAAK3C,MAAMoD,EAAQmD,QACrB0sB,GAAc,EACdtwB,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcE,oBAAqBqmD,GAC9DhwD,KAAKwY,QAGPxY,KAAK+xC,kBAAkB/nB,GAAM,IAKjC,OADAhqB,KAAKiwD,kBAAkBjmC,EAAMiN,EAAU3jB,EAAUgd,EAAaD,EAASyG,EAAWC,EAAYG,GACvFlN,I,+CAGT,SAAkCsL,GAChC,MAAuB,QAAhBA,EAAOoB,KAAiB,EAAI,I,0CAGrC,SAA6BpB,GAC3B,OAAOA,EAAOxsB,S,qCAGhB,SAAwBwsB,GACtB,IAAI46B,EAEEpuB,EAAa9hC,KAAKmwD,kCAAkC76B,GACpDxsB,EAAS9I,KAAK4nC,6BAA6BtS,GAC3C59B,EAAQ49B,EAAO59B,MAEjBoR,EAAOtR,SAAWsqC,IACA,QAAhBxM,EAAOoB,KACT12B,KAAKuX,MAAM7f,EAAO+R,EAAcU,gBAEhCnK,KAAKuX,MAAM7f,EAAO+R,EAAcW,iBAIhB,QAAhBkrB,EAAOoB,MAA8F,iBAAlC,OAAxCw5B,EAAUpnD,EAAOA,EAAOtR,OAAS,SAAc,EAAS04D,EAAQ5zD,OAC7F0D,KAAKuX,MAAM7f,EAAO+R,EAAcY,0B,+BAIpC,SAAkB2f,EAAMsG,EAAaD,EAASyG,EAAWC,GACvD,OAAIA,GACF/2B,KAAKi2B,YAAYjM,EAAMsG,GAAa,GAAO,GAAO,EAAO,gBACzDtwB,KAAKowD,wBAAwBpmC,GACtBA,GAGLqG,GAAWC,GAAetwB,KAAK3C,MAAMoD,EAAQiB,SAC3Co1B,GAAW92B,KAAK84B,aACpB9O,EAAK0M,KAAO,SACZ1M,EAAKsL,QAAS,EACPt1B,KAAKi2B,YAAYjM,EAAMsG,EAAaD,GAAS,GAAO,EAAO,sBAJpE,I,iCAQF,SAAoBrG,EAAMiN,EAAU3jB,EAAUwjB,EAAWI,GAGvD,OAFAlN,EAAKgN,WAAY,EAEbh3B,KAAKg5B,IAAIv4B,EAAQqB,QACnBkoB,EAAKzzB,MAAQugC,EAAY92B,KAAKm5C,kBAAkBn5C,KAAK6H,MAAMnQ,MAAOsI,KAAK6H,MAAMyL,UAAYtT,KAAKy5B,wBAAwBvC,GAC/Gl3B,KAAK42B,WAAW5M,EAAM,mBAG1BA,EAAK2M,UAA8B,eAAlB3M,EAAKjrB,IAAIzC,UAA/B,GACE0D,KAAK6oC,kBAAkB7e,EAAKjrB,IAAIP,KAAMwrB,EAAKjrB,IAAIrH,OAAO,GAAM,GAExDo/B,EACF9M,EAAKzzB,MAAQyJ,KAAKm5C,kBAAkBliB,EAAU3jB,EAAU0W,EAAKjrB,IAAI2pC,WACxD1oC,KAAK3C,MAAMoD,EAAQkC,KAAOu0B,IACU,IAAzCA,EAAoBwvB,kBACtBxvB,EAAoBwvB,gBAAkB1mD,KAAK6H,MAAMnQ,OAGnDsyB,EAAKzzB,MAAQyJ,KAAKm5C,kBAAkBliB,EAAU3jB,EAAU0W,EAAKjrB,IAAI2pC,YAEjE1e,EAAKzzB,MAAQyzB,EAAKjrB,IAAI2pC,UAGxB1e,EAAKgN,WAAY,EACVh3B,KAAK42B,WAAW5M,EAAM,qB,+BAIjC,SAAkBA,EAAMiN,EAAU3jB,EAAUgd,EAAaD,EAASyG,EAAWC,EAAYG,GACvF,IAAMjwB,EAAOjH,KAAKqwD,kBAAkBrmC,EAAMsG,EAAaD,EAASyG,EAAWC,IAAe/2B,KAAKswD,oBAAoBtmC,EAAMiN,EAAU3jB,EAAUwjB,EAAWI,GAExJ,OADKjwB,GAAMjH,KAAK84B,aACT7xB,I,+BAGT,SAAkB+iB,EAAM6d,GACtB,GAAI7nC,KAAKg5B,IAAIv4B,EAAQO,UACnBgpB,EAAK2M,UAAW,EAChB3M,EAAKjrB,IAAMiB,KAAKy5B,0BAChBz5B,KAAKs5B,OAAO74B,EAAQU,cACf,CACL,IAAMovD,EAAoBvwD,KAAK6H,MAAMilB,eACrC9sB,KAAK6H,MAAMilB,gBAAiB,EAC5B,IAAMxwB,EAAO0D,KAAK6H,MAAMvL,KACxB0tB,EAAKjrB,IAAMzC,IAASmE,EAAQC,KAAOpE,IAASmE,EAAQpF,QAAUiB,IAASmE,EAAQE,QAAUrE,IAASmE,EAAQG,QAAUZ,KAAKo5B,gBAAkBp5B,KAAKwwD,sBAAsB3oB,GAElKvrC,IAASmE,EAAQK,cACnBkpB,EAAK2M,UAAW,GAGlB32B,KAAK6H,MAAMilB,eAAiByjC,EAG9B,OAAOvmC,EAAKjrB,M,0BAGd,SAAakI,EAAMopB,GACjBppB,EAAKwR,GAAK,KACVxR,EAAKwpD,WAAY,EACjBxpD,EAAKwiC,QAAUpZ,I,yBAGjB,SAAYppB,EAAMqpB,EAAaD,EAAS0F,EAAeO,EAAkBh6B,GAA4B,IAAtBi6B,EAAsB,wDACnGv2B,KAAK0wD,aAAazpD,EAAMopB,GACxBppB,EAAKwpD,YAAcngC,EACnB,IAAMwY,EAAiB/S,EAOvB,OANA/1B,KAAKgY,MAAMulB,MAAMkI,IAAgClP,EAAejgB,GAAc,IAAMggB,EAv9U7D,GAu9UqG,IAC5Ht2B,KAAKk3C,UAAU3Z,MAAMnN,GAAcC,EAASppB,EAAKwpD,YACjDzwD,KAAKuqC,oBAAoBtjC,EAAM6hC,GAC/B9oC,KAAK2wD,2BAA2B1pD,EAAM3K,GAAM,GAC5C0D,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,OACJ12B,I,4BAGT,SAAeogC,EAAOC,EAAcC,EAASrQ,GACvCqQ,GACFvnC,KAAK29C,aAAa,kBAGpB,IAAMmO,EAAgC9rD,KAAK6H,MAAMylB,2BACjDttB,KAAK6H,MAAMylB,4BAA6B,EACxC,IAAMrmB,EAAOjH,KAAKy2B,YAIlB,OAHAz2B,KAAKwY,OACLvR,EAAKO,SAAWxH,KAAKgvD,cAAc3nB,GAAQE,EAASrQ,EAAqBjwB,GACzEjH,KAAK6H,MAAMylB,2BAA6Bw+B,EACjC9rD,KAAK42B,WAAW3vB,EAAMsgC,EAAU,kBAAoB,qB,kCAG7D,SAAqBtgC,EAAM6B,EAAQunB,EAAS6W,GAC1ClnC,KAAKgY,MAAMulB,MAAMkI,GACjB,IAAIvuB,EAAQkZ,GAAcC,GAAS,IAE9BrwB,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAKk3C,UAAUgS,QAClDhyC,GAx9MW,GA29MblX,KAAKk3C,UAAU3Z,MAAMrmB,GACrBlX,KAAK0wD,aAAazpD,EAAMopB,GACxB,IAAMuoB,EAA4B54C,KAAK6H,MAAM6kB,uBAY7C,OAVI5jB,IACF9I,KAAK6H,MAAM6kB,wBAAyB,EACpC1sB,KAAK4wD,2BAA2B3pD,EAAM6B,EAAQo+B,IAGhDlnC,KAAK6H,MAAM6kB,wBAAyB,EACpC1sB,KAAK6wD,kBAAkB5pD,GAAM,GAC7BjH,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,OACX39B,KAAK6H,MAAM6kB,uBAAyBksB,EAC7B54C,KAAK42B,WAAW3vB,EAAM,6B,wCAG/B,SAA2BA,EAAM6B,EAAQo+B,GACvCjgC,EAAK6B,OAAS9I,KAAKulC,iBAAiBz8B,EAAQo+B,GAAkB,K,wCAGhE,SAA2BjgC,EAAM3K,GAAwB,IAAlB+5B,EAAkB,wDACvDr2B,KAAK6wD,kBAAkB5pD,GAAM,EAAOovB,GACpCr2B,KAAK42B,WAAW3vB,EAAM3K,K,+BAGxB,SAAkB2K,EAAMmvB,GAAmC,WAAlBC,EAAkB,wDACnDy6B,EAAe16B,IAAoBp2B,KAAK3C,MAAMoD,EAAQY,QAG5D,GAFArB,KAAKsnD,gBAAgB/pB,MAAMuoB,MAEvBgL,EACF7pD,EAAK3P,KAAO0I,KAAK4kC,mBACjB5kC,KAAK+wD,YAAY9pD,GAAM,EAAOmvB,GAAiB,OAC1C,CACL,IAAMmnB,EAAYv9C,KAAK6H,MAAMwkB,OACvBy6B,EAAY9mD,KAAK6H,MAAM0lB,OAC7BvtB,KAAK6H,MAAM0lB,OAAS,GACpBvtB,KAAKk3C,UAAU3Z,MAjgNA,EAigNMv9B,KAAKk3C,UAAU/mB,gBACpClpB,EAAK3P,KAAO0I,KAAKwtD,YAAW,GAAM,GAAO,SAAAwD,GACvC,IAAMC,GAAa,EAAKC,kBAAkBjqD,EAAK6B,QAE/C,GAAIkoD,GAA0BC,EAAW,CACvC,IAAME,EAA0B,WAAdlqD,EAAKyvB,MAAmC,gBAAdzvB,EAAKyvB,OAA6BzvB,EAAKlI,IAAqBkI,EAAKvP,MAApBuP,EAAKlI,IAAI8H,IAClG,EAAK0Q,MAAM45C,EAAU1nD,EAAcwC,8BAGrC,IAAMmlD,GAAqB7T,GAAa,EAAK11C,MAAMwkB,OACnD,EAAK0kC,YAAY9pD,GAAO,EAAKY,MAAMwkB,SAAW+J,IAAoBC,IAAa46B,EAAW76B,EAAiBg7B,GAEvG,EAAKvpD,MAAMwkB,QAAUplB,EAAKwR,IAC5B,EAAKyvB,UAAUjhC,EAAKwR,GAAI,gBA/gVb6kB,QA+gV4C99B,OAAWA,EAAW4xD,MAGjFpxD,KAAKk3C,UAAUvZ,OACf39B,KAAKsnD,gBAAgB3pB,OACrB39B,KAAK6H,MAAM0lB,OAASu5B,K,+BAIxB,SAAkBh+C,GAChB,IAAK,IAAIjK,EAAI,EAAGyjD,EAAMx5C,EAAOtR,OAAQqH,EAAIyjD,EAAKzjD,IAC5C,GAAuB,eAAnBiK,EAAOjK,GAAGvC,KAAuB,OAAO,EAG9C,OAAO,I,yBAGT,SAAY2K,EAAM0iC,EAAiBC,GAA2C,MAA1BwnB,IAA0B,yDACtEC,EAAe,IAAIz2D,IADmD,IAGxDqM,EAAK6B,QAHmD,IAG5E,2BAAiC,KAAtBu6B,EAAsB,QAC/BrjC,KAAKkoC,UAAU7E,EAAO,0BA3iVX/F,EA2iVgDqM,EAAkB,KAAO0nB,OAAc7xD,EAAW4xD,IAJnC,iC,2BAQ9E,SAAc/pB,EAAOiqB,EAAYp6B,EAAqB00B,GAIpD,IAHA,IAAMC,EAAO,GACT3pB,GAAQ,GAEJliC,KAAKg5B,IAAIqO,IAAQ,CACvB,GAAInF,EACFA,GAAQ,OAIR,GAFAliC,KAAKs5B,OAAO74B,EAAQmB,OAEhB5B,KAAK3C,MAAMgqC,GAAQ,CACjBukB,GACF5rD,KAAKy1B,SAASm2B,EAAc,gBAAiB5rD,KAAK6H,MAAM0L,cAG1DvT,KAAKwY,OACL,MAIJqzC,EAAK1sD,KAAKa,KAAK+rD,kBAAkBuF,EAAYp6B,IAG/C,OAAO20B,I,+BAGT,SAAkByF,EAAYp6B,EAAqBy0B,GACjD,IAAItS,EAEJ,GAAIr5C,KAAK3C,MAAMoD,EAAQmB,OAChB0vD,GACHtxD,KAAKuX,MAAMvX,KAAK6H,MAAMwL,IAAK5J,EAAcmI,gBAAiB,KAG5DynC,EAAM,UACD,GAAIr5C,KAAK3C,MAAMoD,EAAQ4B,UAAW,CACvC,IAAM4rD,EAAqBjuD,KAAK6H,MAAMnQ,MAChCw2D,EAAqBluD,KAAK6H,MAAMyL,SACtC+lC,EAAMr5C,KAAKmuD,eAAenuD,KAAK8vD,YAAY54B,GAAsB+2B,EAAoBC,QAChF,GAAIluD,KAAK3C,MAAMoD,EAAQwB,UAAW,CACvCjC,KAAK29C,aAAa,sBAEbgO,GACH3rD,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcuH,+BAG7C,IAAM/J,EAAOjH,KAAKy2B,YAClBz2B,KAAKwY,OACL6gC,EAAMr5C,KAAK42B,WAAW3vB,EAAM,4BAE5BoyC,EAAMr5C,KAAKy5B,wBAAwBvC,EAAqBl3B,KAAKmuD,gBAG/D,OAAO9U,I,6BAGT,SAAgBha,GACd,IAAMp4B,EAAOjH,KAAKy2B,YACZj4B,EAAOwB,KAAK68C,oBAAoB51C,EAAKvP,MAAO2nC,GAClD,OAAOr/B,KAAK0xC,iBAAiBzqC,EAAMzI,K,8BAGrC,SAAiByI,EAAMzI,GAGrB,OAFAyI,EAAKzI,KAAOA,EACZyI,EAAKW,IAAIb,eAAiBvI,EACnBwB,KAAK42B,WAAW3vB,EAAM,gB,iCAG/B,SAAoBoM,EAAKgsB,GACvB,IAAI7gC,EACJ,EAGIwB,KAAK6H,MAFPnQ,EADF,EACEA,MACA4E,EAFF,EAEEA,KAGF,GAAIA,IAASmE,EAAQjC,KACnBA,EAAOwB,KAAK6H,MAAMtR,UACb,KAAI+F,EAAKzB,QAGd,MAAMmF,KAAK84B,aAFXt6B,EAAOlC,EAAKzB,QAYd,OAPIwkC,EACFr/B,KAAK6H,MAAMvL,KAAOmE,EAAQjC,KAE1BwB,KAAK6oC,kBAAkBrqC,EAAM9G,IAAS4E,EAAKzB,SAAS,GAGtDmF,KAAKwY,OACEha,I,+BAGT,SAAkByX,EAAM3C,EAAUgnC,EAAe1T,GAC/C,KAAI3wB,EAAKze,OAAS,KAzqVtB,SAA2Bye,GACzB,OAAOI,GAAoB5Z,IAAIwZ,GA4qVxBs7C,CAAkBt7C,GAAvB,CAIA,GAAa,UAATA,GACF,GAAIjW,KAAKk3C,UAAUwR,SAEjB,YADA1oD,KAAKuX,MAAMjE,EAAU7J,EAAckJ,6BAGhC,GAAa,UAATsD,EAAkB,CAC3B,GAAIjW,KAAKk3C,UAAUoS,SAEjB,YADAtpD,KAAKuX,MAAMjE,EAAU7J,EAAcK,wBAE9B,GAAI9J,KAAKgY,MAAMw5C,cAEpB,YADAxxD,KAAKuX,MAAMjE,EAAU7J,EAAcM,qCAGnC/J,KAAKsnD,gBAAgBmK,gCAAgCn+C,EAAU7J,EAAcK,6BAE1E,GAAa,cAATmM,GACLjW,KAAKgY,MAAM05C,gCAEb,YADA1xD,KAAKuX,MAAMjE,EAAU7J,EAAcG,kBAKvC,GAAI0wC,GAAiB/9C,GAAU0Z,GAC7BjW,KAAKuX,MAAMjE,EAAU7J,EAAc2H,kBAAmB6E,QAIlCjW,KAAK6H,MAAMwkB,OAA0Bua,EAAYxwB,GAA2B5Z,GAAxDwZ,IAEzBC,EAAMjW,KAAKkW,WAC1BlW,KAAKuX,MAAMjE,EAAU7J,EAAciI,uBAAwBuE,M,4BAI/D,WACE,QAAIjW,KAAKk3C,UAAUoS,aAEftpD,KAAK7F,QAAQokD,2BAA8Bv+C,KAAKgY,MAAM25C,c,wBAO5D,SAAW16B,EAAU3jB,GACnB,IAAMrM,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAmBxC,OAlBAtT,KAAKsnD,gBAAgBsK,gCAAgC3qD,EAAKvP,MAAO+R,EAAcO,gCAE3EhK,KAAKg5B,IAAIv4B,EAAQmD,OACnB5D,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAcoF,mBAGlC7O,KAAKgY,MAAM25C,YAAe3xD,KAAK7F,QAAQokD,4BACtCv+C,KAAKuqD,mBACPvqD,KAAKiJ,6BAA8B,EAEnCjJ,KAAKgJ,mBAAoB,GAIxBhJ,KAAK6H,MAAMwlB,YACdpmB,EAAKuyB,SAAWx5B,KAAK2zC,gBAAgB,MAAM,IAGtC3zC,KAAK42B,WAAW3vB,EAAM,qB,8BAG/B,WACE,OAAOjH,KAAKguC,yBAA2BhuC,KAAK3C,MAAMoD,EAAQiD,UAAY1D,KAAK3C,MAAMoD,EAAQiB,SAAW1B,KAAK3C,MAAMoD,EAAQO,WAAahB,KAAK3C,MAAMoD,EAAQ6B,YAActC,KAAK3C,MAAMoD,EAAQI,SAAWb,KAAK3C,MAAMoD,EAAQoD,QAAU7D,KAAKoJ,UAAU,gBAAkBpJ,KAAK3C,MAAMoD,EAAQkD,U,wBAGtR,WACE,IAAMsD,EAAOjH,KAAKy2B,YAClBz2B,KAAKsnD,gBAAgBsK,gCAAgC3qD,EAAKvP,MAAO+R,EAAcmJ,kBAC/E5S,KAAKwY,OACL,IAAIq5C,GAAa,EACbr4B,EAAW,KAEf,IAAKx5B,KAAKguC,wBAGR,OAFA6jB,EAAa7xD,KAAKg5B,IAAIv4B,EAAQmD,MAEtB5D,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQoB,KACb,KAAKpB,EAAQM,IACb,KAAKN,EAAQe,OACb,KAAKf,EAAQkB,OACb,KAAKlB,EAAQU,SACb,KAAKV,EAAQgB,UACb,KAAKhB,EAAQqB,MACb,KAAKrB,EAAQmB,MACX,IAAKiwD,EAAY,MAEnB,QACEr4B,EAAWx5B,KAAK4kC,mBAMtB,OAFA39B,EAAK6qD,SAAWD,EAChB5qD,EAAKuyB,SAAWA,EACTx5B,KAAK42B,WAAW3vB,EAAM,qB,0CAG/B,SAA6B6gC,EAAMmS,GAC4B,UAAzDj6C,KAAK8zB,gBAAgB,mBAAoB,aACzB,uBAAdgU,EAAKxrC,MACP0D,KAAKuX,MAAM0iC,EAAcxwC,EAAc6F,kC,oCAK7C,SAAuByiD,EAAiB96B,EAAU3jB,GAEhD,OADAtT,KAAKgyD,kCAAkCD,EAAiB96B,GACjDj3B,KAAKiyD,8BAA8BF,EAAiB96B,EAAU3jB,K,+CAGvE,SAAkCy+C,EAAiB96B,GACjD,GAAIj3B,KAAK3C,MAAMoD,EAAQ0B,OACrB,MAAMnC,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc2F,qBACf,uBAAzB2iD,EAAgBz1D,MACzB0D,KAAKuX,MAAM0f,EAAUxtB,EAAc4F,kC,2CAIvC,SAA8B0iD,EAAiB96B,EAAU3jB,GACvD,IAAMkqB,EAAWx9B,KAAK+0B,YAAYkC,EAAU3jB,GACtC4+C,EAAoBlyD,KAAKkyD,kBAAkBH,GAYjD,OAVIG,EACF10B,EAASlG,OAASy6B,GAEb/xD,KAAKmyD,8CACRnyD,KAAKuX,MAAM0f,EAAUxtB,EAAc8F,qBAGrCiuB,EAAS/mC,WAAas7D,GAGjB/xD,KAAK42B,WAAW4G,EAAU00B,EAAoB,uBAAyB,6B,+BAGhF,SAAkBz7D,GAChB,OAAQA,EAAW6F,MACjB,IAAK,mBACH,OAAQ7F,EAAWkgC,UAAY32B,KAAKkyD,kBAAkBz7D,EAAWq4B,QAEnE,IAAK,aACH,OAAO,EAET,QACE,OAAO,K,wCAIb,SAA2BsjC,GACzB,IAAMC,EAAyBryD,KAAK6H,MAAMqlB,aAC1CltB,KAAK6H,MAAMqlB,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOglC,IADT,QAGEpyD,KAAK6H,MAAMqlB,aAAemlC,K,wCAI9B,SAA2BD,GACzB,IAAMC,EAAyBryD,KAAK6H,MAAMqlB,aAC1CltB,KAAK6H,MAAMqlB,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOglC,IADT,QAGEpyD,KAAK6H,MAAMqlB,aAAemlC,K,4CAI9B,SAA+BD,GAC7B,IAAME,EAA6BtyD,KAAK6H,MAAMwlB,UAC9CrtB,KAAK6H,MAAMwlB,WAAY,EAEvB,IACE,OAAO+kC,IADT,QAGEpyD,KAAK6H,MAAMwlB,UAAYilC,K,wBAI3B,SAAWF,GACT,IAAMl7C,EAAQlX,KAAKk3C,UAAU/mB,eAG7B,GAh1Na,GA80NsBjZ,EAEf,CAClBlX,KAAKk3C,UAAU3Z,MAj1NJ,EAi1NUrmB,GAErB,IACE,OAAOk7C,IADT,QAGEpyD,KAAKk3C,UAAUvZ,QAInB,OAAOy0B,M,2BAGT,SAAcA,GACZ,IAAMl7C,EAAQlX,KAAKk3C,UAAU/mB,eAG7B,GAj2Na,EA+1NuBjZ,EAEd,CACpBlX,KAAKk3C,UAAU3Z,OAAc,EAARrmB,GAErB,IACE,OAAOk7C,IADT,QAGEpyD,KAAKk3C,UAAUvZ,QAInB,OAAOy0B,M,oCAGT,WACEpyD,KAAK6H,MAAMqlB,aAAaE,cAAgB,I,iEAG1C,WACE,OAAOptB,KAAK6H,MAAMqlB,aAAaC,0BAA4B,I,wDAG7D,WACE,OAAgD,MAAzCntB,KAAK6H,MAAMqlB,aAAaE,eAAyBptB,KAAK6H,MAAMqlB,aAAaE,eAAiB,I,qCAGnG,SAAwB67B,GACtB,IAAMhyB,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAC5BtT,KAAK6H,MAAM0kB,iBAAmBvsB,KAAK6H,MAAMnQ,MACzC,IAAMo0D,EAAgC9rD,KAAK6H,MAAMylB,2BACjDttB,KAAK6H,MAAMylB,4BAA6B,EACxC,IAAMilC,EAAMvyD,KAAKq6C,YAAYr6C,KAAK2zC,kBAAmB1c,EAAU3jB,EAAU21C,GAEzE,OADAjpD,KAAK6H,MAAMylB,2BAA6Bw+B,EACjCyG,I,mCAGT,WACEvyD,KAAK29C,aAAa,gBAClB,IAAM12C,EAAOjH,KAAKy2B,YAClBz2B,KAAKwY,OACLxY,KAAKg5B,IAAIv4B,EAAQY,QACjB,IAAMmxD,EAAexyD,KAAKyyD,kBAAiB,GAC3CzyD,KAAK0yD,qBACL,IAAMl8D,EAAUwJ,KAAKy2B,YAErB,IACExvB,EAAK3P,KAAO0I,KAAK2yD,aAAan8D,EAASiK,EAAQe,OAAQ,UADzD,QAGEgxD,IAIF,OADAxyD,KAAKg5B,IAAIv4B,EAAQe,QACVxB,KAAK42B,WAAW3vB,EAAM,wB,6HAjsE/B,SAAaA,GAAqB,IAC5Bq+B,EAAastB,EADAz7B,EAAe,wDAG5B3B,OAAgBh2B,EAgBpB,QAdkB,4BAAdyH,EAAK3K,MAAoE,OAA7BgpC,EAAcr+B,EAAK+tB,QAAkBsQ,EAAY9P,iBAC/FA,EAAgBmyB,GAA8B1gD,GAE1CkwB,EACyB,eAAvB3B,EAAcl5B,KAChB0D,KAAKsnD,gBAAgBuL,mCAAmC5rD,EAAKvP,MAAO+R,EAAc4D,gCAClD,qBAAvBmoB,EAAcl5B,MACvB0D,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc4D,gCAGvCrN,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAc4D,iCAIjCpG,EAAK3K,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,MAEF,IAAK,mBACH2K,EAAK3K,KAAO,gBAEZ,IAAK,IAAIuC,EAAI,EAAGrH,EAASyP,EAAK2B,WAAWpR,OAAQqvC,EAAOrvC,EAAS,EAAGqH,EAAIrH,EAAQqH,IAAK,CACnF,IAAIi0D,EAEE9oC,EAAO/iB,EAAK2B,WAAW/J,GACvBk0D,EAASl0D,IAAMgoC,EACrB7mC,KAAKgzD,iCAAiChpC,EAAM+oC,EAAQ57B,GAEhD47B,GAAwB,gBAAd/oC,EAAK1tB,MAAyD,OAA9Bw2D,EAAe7rD,EAAK+tB,QAAkB89B,EAAattB,eAC/FxlC,KAAKizD,iBAAiBhsD,EAAK+tB,MAAMwQ,eAIrC,MAEF,IAAK,iBACHxlC,KAAKo3B,aAAanwB,EAAK1Q,MAAO4gC,GAC9B,MAEF,IAAK,gBAEDn3B,KAAKkzD,sBAAsBjsD,GAC3BA,EAAK3K,KAAO,cACZ,IAAM7C,EAAMwN,EAAKuyB,SACjBx5B,KAAKo3B,aAAa39B,EAAK09B,GACvB,MAGJ,IAAK,kBACHlwB,EAAK3K,KAAO,eACZ0D,KAAKulC,iBAAiBt+B,EAAKO,SAAyC,OAA9BorD,EAAe3rD,EAAK+tB,YAAiB,EAAS49B,EAAaptB,cAAerO,GAChH,MAEF,IAAK,uBACmB,MAAlBlwB,EAAK8/B,UACP/mC,KAAKuX,MAAMtQ,EAAK6gC,KAAKjhC,IAAK4C,EAAcsE,uBAG1C9G,EAAK3K,KAAO,2BACL2K,EAAK8/B,SACZ/mC,KAAKo3B,aAAanwB,EAAK6gC,KAAM3Q,GAC7B,MAEF,IAAK,0BACHn3B,KAAKo3B,aAAa5B,EAAe2B,GAIrC,OAAOlwB,I,8CAGT,SAAiC+iB,EAAM+oC,EAAQ57B,GAC7C,GAAkB,iBAAdnN,EAAK1tB,KAAyB,CAChC,IAAMjD,EAAsB,QAAd2wB,EAAK0M,MAAgC,QAAd1M,EAAK0M,KAAiBjtB,EAAcyF,mBAAqBzF,EAAc0F,iBAC5GnP,KAAKuX,MAAMyS,EAAKjrB,IAAIrH,MAAO2B,OACJ,kBAAd2wB,EAAK1tB,MAA6By2D,EAG3C/yD,KAAKo3B,aAAapN,EAAMmN,GAFxBn3B,KAAKizD,iBAAiBjpC,EAAKtyB,S,8BAM/B,SAAiBuvC,EAAUC,EAAkB/P,GAC3C,IAAItwB,EAAMogC,EAASzvC,OAEnB,GAAIqP,EAAK,CACP,IAAMggC,EAAOI,EAASpgC,EAAM,GAE5B,GAA4C,iBAA/B,MAARggC,OAAe,EAASA,EAAKvqC,QAC9BuK,OACG,GAA4C,mBAA/B,MAARggC,OAAe,EAASA,EAAKvqC,MAA2B,CAClEuqC,EAAKvqC,KAAO,cACZ,IAAI7C,EAAMotC,EAAKrN,SACfx5B,KAAKo3B,aAAa39B,EAAK09B,GAGN,gBAFjB19B,EAAMkuD,GAA8BluD,IAE5B6C,MAAsC,qBAAb7C,EAAI6C,MAA4C,iBAAb7C,EAAI6C,MAAwC,kBAAb7C,EAAI6C,MACrG0D,KAAK84B,WAAWr/B,EAAI/B,OAGlBwvC,GACFlnC,KAAKmzD,4BAA4BjsB,KAGjCrgC,GAIN,IAAK,IAAIhI,EAAI,EAAGA,EAAIgI,EAAKhI,IAAK,CAC5B,IAAMw6C,EAAMpS,EAASpoC,GAEjBw6C,IACFr5C,KAAKo3B,aAAaiiB,EAAKliB,GAEN,gBAAbkiB,EAAI/8C,MACN0D,KAAKizD,iBAAiB5Z,EAAI3hD,QAKhC,OAAOuvC,I,8BAGT,SAAiBA,EAAUE,GACzB,OAAOF,I,kCAGT,SAAqBA,EAAUE,GAC7BnnC,KAAKwnC,iBAAiBP,EAAUE,GADkB,UAG/BF,GAH+B,IAGlD,2BAA6B,KAAlBhD,EAAkB,QACiB,qBAA/B,MAARA,OAAe,EAASA,EAAK3nC,OAChC0D,KAAKurD,qBAAqBtnB,EAAKz8B,WALe,iC,yBAUpD,SAAY0vB,EAAqBk8B,GAC/B,IAAMnsD,EAAOjH,KAAKy2B,YAGlB,OAFAz2B,KAAKwY,OACLvR,EAAKuyB,SAAWx5B,KAAKy5B,wBAAwBvC,OAAqB13B,EAAW4zD,GACtEpzD,KAAK42B,WAAW3vB,EAAM,mB,8BAG/B,WACE,IAAMA,EAAOjH,KAAKy2B,YAGlB,OAFAz2B,KAAKwY,OACLvR,EAAKuyB,SAAWx5B,KAAKqzD,mBACdrzD,KAAK42B,WAAW3vB,EAAM,iB,8BAG/B,WACE,OAAQjH,KAAK6H,MAAMvL,MACjB,KAAKmE,EAAQO,SAET,IAAMiG,EAAOjH,KAAKy2B,YAGlB,OAFAz2B,KAAKwY,OACLvR,EAAKO,SAAWxH,KAAK+wC,iBAAiBtwC,EAAQU,SAAU,IAAI,GACrDnB,KAAK42B,WAAW3vB,EAAM,gBAGjC,KAAKxG,EAAQY,OACX,OAAOrB,KAAK+sD,gBAAgBtsD,EAAQe,QAAQ,GAGhD,OAAOxB,KAAK47B,oB,8BAGd,SAAiByL,EAAOisB,EAAehC,EAAYxoB,GAIjD,IAHA,IAAM+iB,EAAO,GACT3pB,GAAQ,GAEJliC,KAAKg5B,IAAIqO,IAOf,GANInF,EACFA,GAAQ,EAERliC,KAAKs5B,OAAO74B,EAAQmB,OAGlB0vD,GAActxD,KAAK3C,MAAMoD,EAAQmB,OACnCiqD,EAAK1sD,KAAK,UACL,IAAIa,KAAKg5B,IAAIqO,GAClB,MACK,GAAIrnC,KAAK3C,MAAMoD,EAAQ4B,UAAW,CACvCwpD,EAAK1sD,KAAKa,KAAKo5C,6BAA6Bp5C,KAAKouD,qBACjDpuD,KAAKquD,oBAAoBiF,GACzBtzD,KAAKs5B,OAAO+N,GACZ,MAEA,IAAM4R,EAAa,GAMnB,IAJIj5C,KAAK3C,MAAMoD,EAAQ+B,KAAOxC,KAAKoJ,UAAU,eAC3CpJ,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc0I,+BAGtCnS,KAAK3C,MAAMoD,EAAQ+B,KACxBy2C,EAAW95C,KAAKa,KAAK6vD,kBAGvBhE,EAAK1sD,KAAKa,KAAKuzD,wBAAwBzqB,EAAgBmQ,IAI3D,OAAO4S,I,qCAGT,SAAwB/iB,EAAgBmQ,GACtC,IAAMnR,EAAO9nC,KAAKm5C,oBAClBn5C,KAAKo5C,6BAA6BtR,GAClC,IAAMuR,EAAMr5C,KAAKm5C,kBAAkBrR,EAAKpwC,MAAOowC,EAAKlgC,IAAIlQ,MAAOowC,GAM/D,OAJImR,EAAWzhD,SACbswC,EAAKmR,WAAaA,GAGbI,I,0CAGT,SAA6BhW,GAC3B,OAAOA,I,+BAGT,SAAkBpM,EAAU3jB,EAAUw0B,GACpC,IAAI0rB,EAAWC,EAAWC,EAK1B,GAHApgD,EAAqC,OAAzBkgD,EAAYlgD,GAAoBkgD,EAAYxzD,KAAK6H,MAAMyL,SACnE2jB,EAAqC,OAAzBw8B,EAAYx8B,GAAoBw8B,EAAYzzD,KAAK6H,MAAMnQ,MACnEowC,EAAyB,OAAjB4rB,EAAQ5rB,GAAgB4rB,EAAQ1zD,KAAKqzD,oBACxCrzD,KAAKg5B,IAAIv4B,EAAQkC,IAAK,OAAOmlC,EAClC,IAAM7gC,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GAGxC,OAFArM,EAAK6gC,KAAOA,EACZ7gC,EAAKs4B,MAAQv/B,KAAKy5B,0BACXz5B,KAAK42B,WAAW3vB,EAAM,uB,uBAG/B,SAAUg9B,EAAM+D,GAA0G,IAAtF/vB,EAAsF,uDAAxEjB,GAAWq6C,EAA6D,uCAA/CsC,EAA+C,uCAA3BvC,EAA2B,wDACxH,OAAQntB,EAAK3nC,MACX,IAAK,aAED,IACEkC,EACEylC,EADFzlC,KAGEwB,KAAK6H,MAAMwkB,SAAW+kC,EAAoBh7C,GAAyB5X,EAAMwB,KAAKkW,UAAYC,GAA6B3X,KACzHwB,KAAKuX,MAAM0sB,EAAKvsC,MAAOugB,IAAgBjB,GAAYvN,EAAc2G,oBAAsB3G,EAAc4G,2BAA4B7R,GAG/H6yD,IACEA,EAAa50D,IAAI+B,GACnBwB,KAAKuX,MAAM0sB,EAAKvsC,MAAO+R,EAAcwF,WAErCoiD,EAAal5C,IAAI3Z,IAIjBm1D,GAA+B,QAATn1D,GACxBwB,KAAKuX,MAAM0sB,EAAKvsC,MAAO+R,EAAckE,qBAGjCsK,EAAcjB,IAClBhX,KAAKgY,MAAMwkB,YAAYh+B,EAAMyZ,EAAagsB,EAAKvsC,OAGjD,MAGJ,IAAK,mBACCugB,IAAgBjB,IAClBhX,KAAKuX,MAAM0sB,EAAKvsC,MAAO+R,EAAc8D,+BAGvC,MAEF,IAAK,gBAAL,UACmB02B,EAAKr7B,YADxB,IACE,2BAAkC,KAAzBohB,EAAyB,QAChC,GAAIhqB,KAAKo1B,iBAAiBpL,GAAOA,EAAOA,EAAKzzB,WAAW,GAAIyJ,KAAK+nD,eAAe/9B,GAAO,SACvFhqB,KAAKkoC,UAAUle,EAAM,+BAAgC/R,EAAao5C,EAAcsC,IAHpF,8BAME,MAEF,IAAK,eAAL,UACqB1vB,EAAKz8B,UAD1B,IACE,2BAAkC,KAAvB0nD,EAAuB,QAC5BA,GACFlvD,KAAKkoC,UAAUgnB,EAAM,8BAA+Bj3C,EAAao5C,EAAcsC,IAHrF,8BAOE,MAEF,IAAK,oBACH3zD,KAAKkoC,UAAUjE,EAAK6D,KAAM,qBAAsB7vB,EAAao5C,GAC7D,MAEF,IAAK,cACHrxD,KAAKkoC,UAAUjE,EAAKzK,SAAU,eAAgBvhB,EAAao5C,GAC3D,MAEF,IAAK,0BACHrxD,KAAKkoC,UAAUjE,EAAKxtC,WAAY,2BAA4BwhB,EAAao5C,GACzE,MAEF,QAEIrxD,KAAKuX,MAAM0sB,EAAKvsC,MAAOugB,IAAgBjB,GAAYvN,EAAcuD,WAAavD,EAAcwD,kBAAmB+6B,M,mCAKvH,SAAsB/gC,GACO,eAAvBA,EAAKuyB,SAASl9B,MAAgD,qBAAvB2K,EAAKuyB,SAASl9B,MACvD0D,KAAKuX,MAAMtQ,EAAKuyB,SAAS9hC,MAAO+R,EAAcgE,gC,iCAIlD,SAAoB45B,GACdrnC,KAAK3C,MAAMoD,EAAQmB,SACjB5B,KAAKyzC,sBAAwBpM,EAC/BrnC,KAAKmzD,4BAA4BnzD,KAAK6H,MAAMnQ,OAE5CsI,KAAKizD,iBAAiBjzD,KAAK6H,MAAMnQ,U,8BAKvC,SAAiB2b,GACf,MAAMrT,KAAKuX,MAAMlE,EAAK5J,EAAc+B,oB,yCAGtC,SAA4B6H,GAC1BrT,KAAKuX,MAAMlE,EAAK5J,EAAcuG,uB,0HAnYhC,WACE,OAAO,IAAIy3C,GAAKznD,KAAMA,KAAK6H,MAAMnQ,MAAOsI,KAAK6H,MAAMyL,Y,yBAGrD,SAAYD,EAAKzL,GACf,OAAO,IAAI6/C,GAAKznD,KAAMqT,EAAKzL,K,6BAG7B,SAAgBtL,GACd,OAAO0D,KAAK+0B,YAAYz4B,EAAK5E,MAAO4E,EAAKsL,IAAIlQ,S,wBAG/C,SAAWuP,EAAM3K,GACf,OAAO0D,KAAKm1B,aAAaluB,EAAM3K,EAAM0D,KAAK6H,MAAM6L,WAAY1T,KAAK6H,MAAM8L,iB,0BAGzE,SAAa1M,EAAM3K,EAAM+W,EAAKzL,GAO5B,OALAX,EAAK3K,KAAOA,EACZ2K,EAAKJ,IAAMwM,EACXpM,EAAKW,IAAIf,IAAMe,EACX5H,KAAK7F,QAAQykD,SAAQ33C,EAAKygD,MAAM,GAAKr0C,GACzCrT,KAAK4zD,eAAe3sD,GACbA,I,gCAGT,SAAmBA,EAAMvP,EAAO4b,GAC9BrM,EAAKvP,MAAQA,EACbuP,EAAKW,IAAIlQ,MAAQ4b,EACbtT,KAAK7F,QAAQykD,SAAQ33C,EAAKygD,MAAM,GAAKhwD,K,8BAG3C,SAAiBuP,GAAsE,IAAhEJ,EAAgE,uDAA1D7G,KAAK6H,MAAM6L,WAAYD,EAAmC,uDAA1BzT,KAAK6H,MAAM8L,cACtE1M,EAAKJ,IAAMA,EACXI,EAAKW,IAAIf,IAAM4M,EACXzT,KAAK7F,QAAQykD,SAAQ33C,EAAKygD,MAAM,GAAK7gD,K,wCAG3C,SAA2BI,EAAM4sD,GAC/B7zD,KAAKw7C,mBAAmBv0C,EAAM4sD,EAAan8D,MAAOm8D,EAAajsD,IAAIlQ,W,GAxC/CquD,MAwvElB+N,GAAY,CAChBp9B,KAAM,QAEFq9B,GAAc,CAClBr9B,KAAM,UAMFs9B,GAAgB,+EAChBC,GAA4B,IAAH,8B,IAstDzBC,G,8BACJ,WAAY/5D,EAASuO,GAAO,uBAC1BvO,EA1wLJ,SAAoBR,GAGlB,IAFA,IAAMQ,EAAU,GAEhB,MAAkB/D,OAAO0I,KAAKu/C,IAA9B,eAA+C,CAA1C,IAAMt/C,EAAG,KACZ5E,EAAQ4E,GAAOpF,GAAqB,MAAbA,EAAKoF,GAAepF,EAAKoF,GAAOs/C,GAAet/C,GAGxE,OAAO5E,EAmwLKg6D,CAAWh6D,IACrB,cAAMA,EAASuO,IACVvO,QAAUA,EACf,EAAKs4D,mBACL,EAAKvpD,QAqBT,SAAoBA,GAClB,IAD2B,EACrBkrD,EAAY,IAAI9zD,IADK,IAGN4I,GAHM,IAG3B,2BAA8B,KAAnBC,EAAmB,QAC5B,EAAwBvQ,MAAMC,QAAQsQ,GAAUA,EAAS,CAACA,EAAQ,IAAlE,SAAO3K,EAAP,KAAarE,EAAb,KACKi6D,EAAU33D,IAAI+B,IAAO41D,EAAUn7D,IAAIuF,EAAMrE,GAAW,KALhC,8BAQ3B,OAAOi6D,EA7BUC,CAAW,EAAKl6D,QAAQ+O,SACvC,EAAKpC,SAAW3M,EAAQmkD,eANE,E,yCAS5B,WACE,OAAOhnC,K,mBAGT,WACEtX,KAAK0yD,qBACL,IAAM/nB,EAAO3qC,KAAKy2B,YACZjgC,EAAUwJ,KAAKy2B,YAKrB,OAJAz2B,KAAK0qC,YACLC,EAAKt2B,OAAS,KACdrU,KAAKs0D,cAAc3pB,EAAMn0C,GACzBm0C,EAAKt2B,OAASrU,KAAK6H,MAAMwM,OAClBs2B,M,8HAtsDT,SAAcA,EAAMn0C,GAIlB,OAHAm0C,EAAKn0C,QAAUwJ,KAAK2yD,aAAan8D,GACjCm0C,EAAKzjC,SAAWlH,KAAK6H,MAAMX,SACvBlH,KAAK7F,QAAQ0kD,SAAQlU,EAAKkU,OAvClC,SAA4BA,GAExB,IAAK,IAAIhgD,EAAI,EAAGA,EAAIggD,EAAOrnD,OAAQqH,IAAK,CACtC,IAAM1C,EAAQ0iD,EAAOhgD,GAErB,GAAI1C,EAAMG,OAASmE,EAAQK,YAAa,CACtC,IACE8G,EAIEzL,EAJFyL,IACAlQ,EAGEyE,EAHFzE,MACAnB,EAEE4F,EAFF5F,MACAsQ,EACE1K,EADF0K,IAEI0tD,EAAa78D,EAAQ,EACrB88D,EAAa,IAAIhuD,EAASoB,EAAIlQ,MAAM+O,KAAMmB,EAAIlQ,MAAMiP,OAAS,GACnEk4C,EAAOt2C,OAAO1J,EAAG,EAAG,IAAI2gD,GAAM,CAC5BljD,KAAMmE,EAAQgC,KACdlM,MAAO,IACPmB,MAAOA,EACPmP,IAAK0tD,EACLjhD,SAAU1L,EAAIlQ,MACd+b,OAAQ+gD,IACN,IAAIhV,GAAM,CACZljD,KAAMmE,EAAQjC,KACdjI,MAAOA,EACPmB,MAAO68D,EACP1tD,IAAKA,EACLyM,SAAUkhD,EACV/gD,OAAQ7L,EAAIf,QAKpB,OAAOg4C,EAOkC4V,CAAmBz0D,KAAK6+C,SACxD7+C,KAAK42B,WAAW+T,EAAM,U,0BAG/B,SAAan0C,GAAkE,IAAzDqQ,EAAyD,uDAAnDpG,EAAQM,IAAK+sB,EAAsC,uDAAzB9tB,KAAK7F,QAAQ2zB,WAKjE,GAJAt3B,EAAQs3B,WAAaA,EACrBt3B,EAAQk+D,YAAc10D,KAAK20D,4BAC3B30D,KAAK40D,eAAep+D,GAAS,GAAM,EAAMqQ,GAErC7G,KAAKkW,WAAalW,KAAK7F,QAAQwkD,wBAA0B3+C,KAAKgY,MAAMP,iBAAiBypC,KAAO,EAC9F,cAAqBtoD,MAAMqF,KAAK+B,KAAKgY,MAAMP,kBAA3C,eAA8D,CAAzD,gBAAOjZ,EAAP,KACG6U,EAAMrT,KAAKgY,MAAMP,iBAAiB1e,IAAIyF,GAC5CwB,KAAKuX,MAAMlE,EAAK5J,EAAc8E,sBAAuB/P,GAIzD,OAAOwB,KAAK42B,WAAWpgC,EAAS,a,6BAGlC,SAAgBmB,GACd,IAAMk9B,EAAYl9B,EAClBk9B,EAAUv4B,KAAO,YACjBu4B,EAAUt+B,MAAQs+B,EAAUp+B,kBACrBo+B,EAAUp+B,WACjB,IAAMq+B,EAAmBD,EAAUt+B,MAC7B2+B,EAAMl1B,KAAK0I,MAAMnR,MAAMu9B,EAAiBp9B,MAAOo9B,EAAiBjuB,KAChEqnB,EAAM4G,EAAiBv+B,MAAQ2+B,EAAI39B,MAAM,GAAI,GAInD,OAHAyI,KAAKy1B,SAASX,EAAkB,MAAOI,GACvCl1B,KAAKy1B,SAASX,EAAkB,WAAY5G,GAC5C4G,EAAiBx4B,KAAO,mBACjBu4B,I,uCAGT,WACE,IAAK70B,KAAK3C,MAAMoD,EAAQiC,sBACtB,OAAO,KAGT,IAAMuE,EAAOjH,KAAKy2B,YAGlB,OAFAxvB,EAAK1Q,MAAQyJ,KAAK6H,MAAMtR,MACxByJ,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,0B,mBAG/B,SAAM8N,GACJ,QAAK/U,KAAKg9B,aAAa,QAIhBh9B,KAAK60D,aAAa9/C,K,0BAG3B,SAAaA,GACX,IAAMyD,EAAOxY,KAAK4tC,iBACZuY,EAASnmD,KAAKqgD,eAAe7nC,GAEnC,GAAe,KAAX2tC,GAA4B,KAAXA,EACnB,OAAO,EAGT,GAAIpxC,EAAS,OAAO,EACpB,GAAe,MAAXoxC,EAAgB,OAAO,EAE3B,GAAI3wC,EAAkB2wC,GAAS,CAC7B8N,GAA0BpgD,UAAY2E,EACtC,IAAMs8C,EAAUb,GAA0B32D,KAAK0C,KAAK0I,OAEpD,GAAgB,OAAZosD,EAAkB,CACpB,IAAMC,EAAQ/0D,KAAKqgD,eAAe7nC,EAAOs8C,EAAQ,GAAGt9D,QAEpD,IAAKme,EAAiBo/C,IAAoB,KAAVA,EAC9B,OAAO,EAIX,OAAO,EAGT,OAAO,I,4BAGT,SAAehgD,EAAS6uB,GAKtB,OAJI5jC,KAAK3C,MAAMoD,EAAQ+B,KACrBxC,KAAKitD,iBAAgB,GAGhBjtD,KAAKg1D,sBAAsBjgD,EAAS6uB,K,mCAG7C,SAAsB7uB,EAAS6uB,GAC7B,IAEIlN,EAFAmhB,EAAY73C,KAAK6H,MAAMvL,KACrB2K,EAAOjH,KAAKy2B,YAQlB,OALIz2B,KAAKg+B,MAAMjpB,KACb8iC,EAAYp3C,EAAQqE,KACpB4xB,EAAO,OAGDmhB,GACN,KAAKp3C,EAAQsD,OACb,KAAKtD,EAAQyD,UACX,OAAOlE,KAAKi1D,4BAA4BhuD,EAAM4wC,EAAUh9C,SAE1D,KAAK4F,EAAQ0D,UACX,OAAOnE,KAAKk1D,uBAAuBjuD,GAErC,KAAKxG,EAAQ2D,IACX,OAAOpE,KAAKm1D,iBAAiBluD,GAE/B,KAAKxG,EAAQ8D,KACX,OAAOvE,KAAKo1D,kBAAkBnuD,GAEhC,KAAKxG,EAAQ+D,UACX,GAAiC,KAA7BxE,KAAKyzC,oBAA4B,MAUrC,OARI1+B,IACE/U,KAAK6H,MAAMwkB,OACbrsB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc6G,gBACtB,OAAZyE,GAAgC,UAAZA,GAC7B/U,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcwG,iBAIxCjQ,KAAK+3C,uBAAuB9wC,GAAM,GAAQ8N,GAEnD,KAAKtU,EAAQ4E,OAEX,OADI0P,GAAS/U,KAAK84B,aACX94B,KAAKg4C,WAAW/wC,GAAM,GAE/B,KAAKxG,EAAQgE,IACX,OAAOzE,KAAKq1D,iBAAiBpuD,GAE/B,KAAKxG,EAAQiE,QACX,OAAO1E,KAAKs1D,qBAAqBruD,GAEnC,KAAKxG,EAAQkE,QACX,OAAO3E,KAAKu1D,qBAAqBtuD,GAEnC,KAAKxG,EAAQmE,OACX,OAAO5E,KAAKw1D,oBAAoBvuD,GAElC,KAAKxG,EAAQoE,KACX,OAAO7E,KAAKy1D,kBAAkBxuD,GAEhC,KAAKxG,EAAQsE,OACb,KAAKtE,EAAQqE,KAOX,OANA4xB,EAAOA,GAAQ12B,KAAK6H,MAAMtR,MAEtBwe,GAAoB,QAAT2hB,GACb12B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc6H,8BAGtCtR,KAAKk4C,kBAAkBjxC,EAAMyvB,GAEtC,KAAKj2B,EAAQuE,OACX,OAAOhF,KAAK01D,oBAAoBzuD,GAElC,KAAKxG,EAAQwE,MACX,OAAOjF,KAAK21D,mBAAmB1uD,GAEjC,KAAKxG,EAAQY,OACX,OAAOrB,KAAKwtD,aAEd,KAAK/sD,EAAQoB,KACX,OAAO7B,KAAK41D,oBAAoB3uD,GAElC,KAAKxG,EAAQ+E,QAET,IAAMqwD,EAAoB71D,KAAKyzC,oBAE/B,GAA0B,KAAtBoiB,GAAkD,KAAtBA,EAC5B,MAIR,KAAKp1D,EAAQ8E,QAOT,IAAI3H,EAiBJ,OAtBKoC,KAAK7F,QAAQskD,6BAAgC7a,GAChD5jC,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc0H,wBAG7CnR,KAAKwY,OAGDq/B,IAAcp3C,EAAQ+E,QAGJ,uBAFpB5H,EAASoC,KAAKy9B,YAAYx2B,IAEf3K,MAAkCsB,EAAOoe,YAAoC,UAAtBpe,EAAOoe,aACvEhc,KAAKgJ,mBAAoB,IAKP,4BAFpBpL,EAASoC,KAAKk+B,YAAYj3B,IAEf3K,MAAuCsB,EAAOugC,YAAoC,UAAtBvgC,EAAOugC,cAA2C,yBAAhBvgC,EAAOtB,MAAqCsB,EAAOugC,YAAoC,UAAtBvgC,EAAOugC,aAA2C,6BAAhBvgC,EAAOtB,OACjN0D,KAAKgJ,mBAAoB,GAI7BhJ,KAAK81D,wBAAwB7uD,GACtBrJ,EAGX,QAEI,GAAIoC,KAAK+1D,kBAMP,OALIhhD,GACF/U,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcI,uCAG7C7J,KAAKwY,OACExY,KAAK+3C,uBAAuB9wC,GAAM,GAAO8N,GAKxD,IAAMihD,EAAYh2D,KAAK6H,MAAMtR,MACvB0tC,EAAOjkC,KAAKq5B,kBAElB,OAAIwe,IAAcp3C,EAAQjC,MAAsB,eAAdylC,EAAK3nC,MAAyB0D,KAAKg5B,IAAIv4B,EAAQqB,OACxE9B,KAAKi2D,sBAAsBhvD,EAAM+uD,EAAW/xB,EAAMlvB,GAElD/U,KAAKk2D,yBAAyBjvD,EAAMg9B,K,qCAI/C,SAAwBh9B,GACjBjH,KAAK7F,QAAQskD,6BAAgCz+C,KAAKkW,UACrDlW,KAAKuX,MAAMtQ,EAAKvP,MAAOob,EAA8BE,uB,4BAIzD,SAAe/L,GACb,IAAMgyC,EAAaj5C,KAAK6H,MAAM2lB,eAAextB,KAAK6H,MAAM2lB,eAAeh2B,OAAS,GAE5EyhD,EAAWzhD,SACbyP,EAAKgyC,WAAaA,EAClBj5C,KAAKspC,2BAA2BriC,EAAMgyC,EAAW,IACjDj5C,KAAK6H,MAAM2lB,eAAextB,KAAK6H,MAAM2lB,eAAeh2B,OAAS,GAAK,M,qCAItE,WACE,OAAOwI,KAAK3C,MAAMoD,EAAQ4E,U,6BAG5B,SAAgB8wD,GAGd,IAFA,IAAMC,EAA2Bp2D,KAAK6H,MAAM2lB,eAAextB,KAAK6H,MAAM2lB,eAAeh2B,OAAS,GAEvFwI,KAAK3C,MAAMoD,EAAQ+B,KAAK,CAC7B,IAAM6zD,EAAYr2D,KAAK6vD,iBACvBuG,EAAyBj3D,KAAKk3D,GAGhC,GAAIr2D,KAAK3C,MAAMoD,EAAQ8E,SAChB4wD,GACHn2D,KAAK84B,aAGH94B,KAAKoJ,UAAU,gBAAkBpJ,KAAK8zB,gBAAgB,aAAc,2BACtE9zB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcqB,2BAExC,IAAK9K,KAAKs2D,0BACf,MAAMt2D,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc4H,8B,4BAIrD,WACErR,KAAKutD,gBAAgB,CAAC,oBAAqB,eAC3C,IAAMtmD,EAAOjH,KAAKy2B,YAGlB,GAFAz2B,KAAKwY,OAEDxY,KAAKoJ,UAAU,cAAe,CAChCpJ,KAAK6H,MAAM2lB,eAAeruB,KAAK,IAC/B,IAEI8kC,EAFEhN,EAAWj3B,KAAK6H,MAAMnQ,MACtB4b,EAAWtT,KAAK6H,MAAMyL,SAG5B,GAAItT,KAAKg5B,IAAIv4B,EAAQiB,QACnBuiC,EAAOjkC,KAAKq5B,kBACZr5B,KAAKs5B,OAAO74B,EAAQkB,aAIpB,IAFAsiC,EAAOjkC,KAAK47B,iBAAgB,GAErB57B,KAAKg5B,IAAIv4B,EAAQuB,MAAM,CAC5B,IAAMiF,EAAOjH,KAAK+0B,YAAYkC,EAAU3jB,GACxCrM,EAAK6nB,OAASmV,EACdh9B,EAAKgoB,SAAWjvB,KAAK47B,iBAAgB,GACrC30B,EAAK0vB,UAAW,EAChBsN,EAAOjkC,KAAK42B,WAAW3vB,EAAM,oBAIjCA,EAAKxQ,WAAauJ,KAAKu2D,6BAA6BtyB,GACpDjkC,KAAK6H,MAAM2lB,eAAexY,WAE1B/N,EAAKxQ,WAAauJ,KAAKyqD,sBAGzB,OAAOzqD,KAAK42B,WAAW3vB,EAAM,e,0CAG/B,SAA6Bg9B,GAC3B,GAAIjkC,KAAKg5B,IAAIv4B,EAAQiB,QAAS,CAC5B,IAAMuF,EAAOjH,KAAKg4B,gBAAgBiM,GAIlC,OAHAh9B,EAAKqwB,OAAS2M,EACdh9B,EAAK4B,UAAY7I,KAAK8pC,6BAA6BrpC,EAAQkB,QAAQ,GACnE3B,KAAKwnC,iBAAiBvgC,EAAK4B,WACpB7I,KAAK42B,WAAW3vB,EAAM,kBAG/B,OAAOg9B,I,yCAGT,SAA4Bh9B,EAAMpM,GAChC,IAAM27D,EAAsB,UAAZ37D,EAWhB,OAVAmF,KAAKwY,OAEDxY,KAAKgxC,mBACP/pC,EAAKnH,MAAQ,MAEbmH,EAAKnH,MAAQE,KAAK47B,kBAClB57B,KAAKu8B,aAGPv8B,KAAKy2D,oBAAoBxvD,EAAMpM,GACxBmF,KAAK42B,WAAW3vB,EAAMuvD,EAAU,iBAAmB,uB,iCAG5D,SAAoBvvD,EAAMpM,GACxB,IACIgE,EADE23D,EAAsB,UAAZ37D,EAGhB,IAAKgE,EAAI,EAAGA,EAAImB,KAAK6H,MAAM0lB,OAAO/1B,SAAUqH,EAAG,CAC7C,IAAM63D,EAAM12D,KAAK6H,MAAM0lB,OAAO1uB,GAE9B,GAAkB,MAAdoI,EAAKnH,OAAiB42D,EAAIl4D,OAASyI,EAAKnH,MAAMtB,KAAM,CACtD,GAAgB,MAAZk4D,EAAIhgC,OAAiB8/B,GAAwB,SAAbE,EAAIhgC,MAAkB,MAC1D,GAAIzvB,EAAKnH,OAAS02D,EAAS,OAI3B33D,IAAMmB,KAAK6H,MAAM0lB,OAAO/1B,QAC1BwI,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAcuC,qBAAsBnR,K,oCAI/D,SAAuBoM,GAGrB,OAFAjH,KAAKwY,OACLxY,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,uB,mCAG/B,WACEjH,KAAKs5B,OAAO74B,EAAQiB,QACpB,IAAMwsB,EAAMluB,KAAKq5B,kBAEjB,OADAr5B,KAAKs5B,OAAO74B,EAAQkB,QACbusB,I,8BAGT,SAAiBjnB,GAAM,WAQrB,OAPAjH,KAAKwY,OACLxY,KAAK6H,MAAM0lB,OAAOpuB,KAAK20D,IACvB7sD,EAAK3P,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKtZ,eAAe,SACtEr9C,KAAK6H,MAAM0lB,OAAOvY,MAClBhV,KAAKs5B,OAAO74B,EAAQuE,QACpBiC,EAAKvK,KAAOsD,KAAK42D,wBACjB52D,KAAKg5B,IAAIv4B,EAAQoB,MACV7B,KAAK42B,WAAW3vB,EAAM,sB,+BAG/B,SAAkBA,GAChBjH,KAAKwY,OACLxY,KAAK6H,MAAM0lB,OAAOpuB,KAAK20D,IACvB,IAAI+C,GAAW,EASf,GAPI72D,KAAKgqD,kBAAoBhqD,KAAK68B,cAAc,WAC9Cg6B,EAAU72D,KAAK6H,MAAM0L,cAGvBvT,KAAKgY,MAAMulB,MA32WK,GA42WhBv9B,KAAKs5B,OAAO74B,EAAQiB,QAEhB1B,KAAK3C,MAAMoD,EAAQoB,MAKrB,OAJIg1D,GAAW,GACb72D,KAAK84B,WAAW+9B,GAGX72D,KAAK82D,SAAS7vD,EAAM,MAG7B,IAAM8vD,EAAgB/2D,KAAKg9B,aAAa,OAClCgB,EAAQ+4B,GAAiB/2D,KAAK60D,eAEpC,GAAI70D,KAAK3C,MAAMoD,EAAQqE,OAAS9E,KAAK3C,MAAMoD,EAAQsE,SAAWi5B,EAAO,CACnE,IAAM6N,EAAO7rC,KAAKy2B,YACZC,EAAOsH,EAAQ,MAAQh+B,KAAK6H,MAAMtR,MAKxC,OAJAyJ,KAAKwY,OACLxY,KAAKg3D,SAASnrB,GAAM,EAAMnV,GAC1B12B,KAAK42B,WAAWiV,EAAM,wBAEjB7rC,KAAK3C,MAAMoD,EAAQmF,MAAQ5F,KAAKg9B,aAAa,QAAuC,IAA7B6O,EAAKorB,aAAaz/D,OACrEwI,KAAKk3D,WAAWjwD,EAAM4kC,EAAMgrB,IAGjCA,GAAW,GACb72D,KAAK84B,WAAW+9B,GAGX72D,KAAK82D,SAAS7vD,EAAM4kC,IAG7B,IAAMsrB,EAA0Bn3D,KAAK3C,MAAMoD,EAAQjC,QAAUwB,KAAK6H,MAAM6lB,YAClEwJ,EAAsB,IAAIswB,GAC1B3b,EAAO7rC,KAAKq5B,iBAAgB,EAAMnC,GAClCkgC,EAAUp3D,KAAKg9B,aAAa,MAUlC,GARIo6B,IACEL,EACF/2D,KAAKuX,MAAMs0B,EAAKn0C,MAAO+R,EAAcqC,WACf,IAAb+qD,GAAkBM,GAAyC,eAAdtrB,EAAKvvC,MAAuC,UAAduvC,EAAKrtC,MACzFwB,KAAKuX,MAAMs0B,EAAKn0C,MAAO+R,EAAcoC,aAIrCurD,GAAWp3D,KAAK3C,MAAMoD,EAAQmF,KAAM,CACtC5F,KAAKo3B,aAAayU,GAAM,GACxB,IAAMwrB,EAAcD,EAAU,mBAAqB,mBAEnD,OADAp3D,KAAKkoC,UAAU2D,EAAMwrB,GACdr3D,KAAKk3D,WAAWjwD,EAAM4kC,EAAMgrB,GASrC,OAPE72D,KAAK6oD,sBAAsB3xB,GAAqB,GAG9C2/B,GAAW,GACb72D,KAAK84B,WAAW+9B,GAGX72D,KAAK82D,SAAS7vD,EAAM4kC,K,oCAG7B,SAAuB5kC,EAAMopB,EAASinC,GAEpC,OADAt3D,KAAKwY,OACExY,KAAKqsD,cAAcplD,EAxeP,GAwe+BqwD,EAAsB,EAve7C,GAue0EjnC,K,8BAGvG,SAAiBppB,GAKf,OAJAjH,KAAKwY,OACLvR,EAAKvK,KAAOsD,KAAK42D,wBACjB3vD,EAAKs9B,WAAavkC,KAAKq9C,eAAe,MACtCp2C,EAAK09B,UAAY3kC,KAAKg5B,IAAIv4B,EAAQ4D,OAASrE,KAAKq9C,eAAe,MAAQ,KAChEr9C,KAAK42B,WAAW3vB,EAAM,iB,kCAG/B,SAAqBA,GAcnB,OAbKjH,KAAKk3C,UAAUqgB,WAAcv3D,KAAK7F,QAAQqkD,4BAC7Cx+C,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcyC,eAG7ClM,KAAKwY,OAEDxY,KAAKgxC,mBACP/pC,EAAKuyB,SAAW,MAEhBvyB,EAAKuyB,SAAWx5B,KAAKq5B,kBACrBr5B,KAAKu8B,aAGAv8B,KAAK42B,WAAW3vB,EAAM,qB,kCAG/B,SAAqBA,GACnBjH,KAAKwY,OACLvR,EAAKuwD,aAAex3D,KAAK42D,wBACzB,IAIIa,EAEKC,EANHC,EAAQ1wD,EAAK0wD,MAAQ,GAM3B,IALA33D,KAAKs5B,OAAO74B,EAAQY,QACpBrB,KAAK6H,MAAM0lB,OAAOpuB,KAAK40D,IACvB/zD,KAAKgY,MAAMulB,MA58WK,IA+8WMv9B,KAAK3C,MAAMoD,EAAQe,SACvC,GAAIxB,KAAK3C,MAAMoD,EAAQuD,QAAUhE,KAAK3C,MAAMoD,EAAQnB,UAAW,CAC7D,IAAMs4D,EAAS53D,KAAK3C,MAAMoD,EAAQuD,OAC9ByzD,GAAKz3D,KAAK42B,WAAW6gC,EAAK,cAC9BE,EAAMx4D,KAAKs4D,EAAMz3D,KAAKy2B,aACtBghC,EAAIlzB,WAAa,GACjBvkC,KAAKwY,OAEDo/C,EACFH,EAAI/6D,KAAOsD,KAAKq5B,mBAEZq+B,GACF13D,KAAKuX,MAAMvX,KAAK6H,MAAM0L,aAAc9J,EAAc+E,0BAGpDkpD,GAAa,EACbD,EAAI/6D,KAAO,MAGbsD,KAAKs5B,OAAO74B,EAAQqB,YAEhB21D,EACFA,EAAIlzB,WAAWplC,KAAKa,KAAKq9C,eAAe,OAExCr9C,KAAK84B,aASX,OAJA94B,KAAKgY,MAAM2lB,OACP85B,GAAKz3D,KAAK42B,WAAW6gC,EAAK,cAC9Bz3D,KAAKwY,OACLxY,KAAK6H,MAAM0lB,OAAOvY,MACXhV,KAAK42B,WAAW3vB,EAAM,qB,iCAG/B,SAAoBA,GASlB,OARAjH,KAAKwY,OAEDxY,KAAKguC,yBACPhuC,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAYjK,EAAcgF,mBAGlDxH,EAAKuyB,SAAWx5B,KAAKq5B,kBACrBr5B,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,oB,mCAG/B,WACE,IAAMo8B,EAAQrjC,KAAKqzD,mBACbwE,EAAwB,eAAfx0B,EAAM/mC,KAGrB,OAFA0D,KAAKgY,MAAMulB,MAAMs6B,EA9/WM,EA8/WwB,GAC/C73D,KAAKkoC,UAAU7E,EAAO,eA5+WL/F,GA6+WV+F,I,+BAGT,SAAkBp8B,GAAM,WAKtB,GAJAjH,KAAKwY,OACLvR,EAAK6wD,MAAQ93D,KAAKwtD,aAClBvmD,EAAK8wD,QAAU,KAEX/3D,KAAK3C,MAAMoD,EAAQwD,QAAS,CAC9B,IAAM+zD,EAASh4D,KAAKy2B,YACpBz2B,KAAKwY,OAEDxY,KAAK3C,MAAMoD,EAAQiB,SACrB1B,KAAKs5B,OAAO74B,EAAQiB,QACpBs2D,EAAO30B,MAAQrjC,KAAKi4D,wBACpBj4D,KAAKs5B,OAAO74B,EAAQkB,UAEpBq2D,EAAO30B,MAAQ,KACfrjC,KAAKgY,MAAMulB,MAthXC,IAyhXdy6B,EAAO1gE,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKnJ,YAAW,GAAO,MAC3ExtD,KAAKgY,MAAM2lB,OACX12B,EAAK8wD,QAAU/3D,KAAK42B,WAAWohC,EAAQ,eASzC,OANA/wD,EAAKixD,UAAYl4D,KAAKg5B,IAAIv4B,EAAQ6D,UAAYtE,KAAKwtD,aAAe,KAE7DvmD,EAAK8wD,SAAY9wD,EAAKixD,WACzBl4D,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAciF,kBAGhC1O,KAAK42B,WAAW3vB,EAAM,kB,+BAG/B,SAAkBA,EAAMyvB,GAItB,OAHA12B,KAAKwY,OACLxY,KAAKg3D,SAAS/vD,GAAM,EAAOyvB,GAC3B12B,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,yB,iCAG/B,SAAoBA,GAAM,WAMxB,OALAjH,KAAKwY,OACLvR,EAAKvK,KAAOsD,KAAK42D,wBACjB52D,KAAK6H,MAAM0lB,OAAOpuB,KAAK20D,IACvB7sD,EAAK3P,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKtZ,eAAe,YACtEr9C,KAAK6H,MAAM0lB,OAAOvY,MACXhV,KAAK42B,WAAW3vB,EAAM,oB,gCAG/B,SAAmBA,GAAM,WAQvB,OAPIjH,KAAK6H,MAAMwkB,QACbrsB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcgH,YAG7CzQ,KAAKwY,OACLvR,EAAK6nB,OAAS9uB,KAAK42D,wBACnB3vD,EAAK3P,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKtZ,eAAe,WAC/Dr9C,KAAK42B,WAAW3vB,EAAM,mB,iCAG/B,SAAoBA,GAElB,OADAjH,KAAKwY,OACExY,KAAK42B,WAAW3vB,EAAM,oB,mCAG/B,SAAsBA,EAAM+uD,EAAW/xB,EAAMlvB,GAAS,UAChC/U,KAAK6H,MAAM0lB,QADqB,IACpD,2BAAuC,SAC3B/uB,OAASw3D,GACjBh2D,KAAKuX,MAAM0sB,EAAKvsC,MAAO+R,EAAciE,mBAAoBsoD,IAHT,8BASpD,IAFA,IAAMt/B,EAAO12B,KAAK6H,MAAMvL,KAAKqD,OAAS,OAASK,KAAK3C,MAAMoD,EAAQkE,SAAW,SAAW,KAE/E9F,EAAImB,KAAK6H,MAAM0lB,OAAO/1B,OAAS,EAAGqH,GAAK,EAAGA,IAAK,CACtD,IAAMiB,EAAQE,KAAK6H,MAAM0lB,OAAO1uB,GAEhC,GAAIiB,EAAMq4D,iBAAmBlxD,EAAKvP,MAIhC,MAHAoI,EAAMq4D,eAAiBn4D,KAAK6H,MAAMnQ,MAClCoI,EAAM42B,KAAOA,EAcjB,OARA12B,KAAK6H,MAAM0lB,OAAOpuB,KAAK,CACrBX,KAAMw3D,EACNt/B,KAAMA,EACNyhC,eAAgBn4D,KAAK6H,MAAMnQ,QAE7BuP,EAAK3P,KAAO0I,KAAKq9C,eAAetoC,GAAwC,IAA9BA,EAAQ4wB,QAAQ,SAAkB5wB,EAAU,QAAUA,EAAU,SAC1G/U,KAAK6H,MAAM0lB,OAAOvY,MAClB/N,EAAKnH,MAAQmkC,EACNjkC,KAAK42B,WAAW3vB,EAAM,sB,sCAG/B,SAAyBA,EAAMg9B,GAG7B,OAFAh9B,EAAKxQ,WAAawtC,EAClBjkC,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,yB,wBAG/B,WAAmF,IAAxEmxD,EAAwE,wDAA/CC,IAA+C,yDAAjBC,EAAiB,uCAC3ErxD,EAAOjH,KAAKy2B,YAkBlB,OAhBI2hC,GACFp4D,KAAK6H,MAAM8lB,aAAasyB,QAG1BjgD,KAAKs5B,OAAO74B,EAAQY,QAEhBg3D,GACFr4D,KAAKgY,MAAMulB,MAtnXG,GAynXhBv9B,KAAK40D,eAAe3tD,EAAMmxD,GAAiB,EAAO33D,EAAQe,OAAQ82D,GAE9DD,GACFr4D,KAAKgY,MAAM2lB,OAGN39B,KAAK42B,WAAW3vB,EAAM,oB,8BAG/B,SAAiBtP,GACf,MAAqB,wBAAdA,EAAK2E,MAA2D,kBAAzB3E,EAAKlB,WAAW6F,OAA6B3E,EAAKlB,WAAWu+B,MAAMQ,gB,4BAGnH,SAAevuB,EAAMmxD,EAAiBx0B,EAAU/8B,EAAKyxD,GACnD,IAAMhhE,EAAO2P,EAAK3P,KAAO,GACnBq+B,EAAa1uB,EAAK0uB,WAAa,GACrC31B,KAAK82C,4BAA4Bx/C,EAAM8gE,EAAkBziC,OAAan2B,EAAWokC,EAAU/8B,EAAKyxD,K,yCAGlG,SAA4BhhE,EAAMq+B,EAAYiO,EAAU/8B,EAAKyxD,GAK3D,IAJA,IAAM/a,EAAYv9C,KAAK6H,MAAMwkB,OACzB2kC,GAAyB,EACzBuH,GAAqB,GAEjBv4D,KAAK3C,MAAMwJ,IAAM,CACvB,IAAMlP,EAAOqI,KAAKq9C,eAAe,KAAMzZ,GAEvC,GAAIjO,IAAe4iC,EAAoB,CACrC,GAAIv4D,KAAKgkC,iBAAiBrsC,GAAO,CAC/B,IAAMk9B,EAAY70B,KAAKw4D,gBAAgB7gE,GACvCg+B,EAAWx2B,KAAK01B,GAEXm8B,GAAoD,eAA1Bn8B,EAAUt+B,MAAMA,QAC7Cy6D,GAAyB,EACzBhxD,KAAKy4D,WAAU,IAGjB,SAGFF,GAAqB,EACrBv4D,KAAK6H,MAAM8lB,aAAasyB,QAG1B3oD,EAAK6H,KAAKxH,GAGR2gE,GACFA,EAAgBp5D,KAAKc,KAAMgxD,GAGxBzT,GACHv9C,KAAKy4D,WAAU,GAGjBz4D,KAAKwY,S,sBAGP,SAASvR,EAAM4kC,GAAM,WAUnB,OATA5kC,EAAK4kC,KAAOA,EACZ7rC,KAAKu8B,WAAU,GACft1B,EAAKvK,KAAOsD,KAAK3C,MAAMoD,EAAQoB,MAAQ,KAAO7B,KAAKq5B,kBACnDr5B,KAAKu8B,WAAU,GACft1B,EAAKkjD,OAASnqD,KAAK3C,MAAMoD,EAAQkB,QAAU,KAAO3B,KAAKq5B,kBACvDr5B,KAAKs5B,OAAO74B,EAAQkB,QACpBsF,EAAK3P,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKtZ,eAAe,UACtEr9C,KAAKgY,MAAM2lB,OACX39B,KAAK6H,MAAM0lB,OAAOvY,MACXhV,KAAK42B,WAAW3vB,EAAM,kB,wBAG/B,SAAWA,EAAM4kC,EAAMgrB,GAAS,WACxB6B,EAAU14D,KAAK3C,MAAMoD,EAAQmF,KAqBnC,OApBA5F,KAAKwY,OAEDkgD,EACE7B,GAAW,GAAG72D,KAAK84B,WAAW+9B,GAElC5vD,EAAK0xD,MAAQ9B,GAAW,EAGR,wBAAdhrB,EAAKvvC,MAA+D,MAA7BuvC,EAAKorB,aAAa,GAAGprB,MAAkB6sB,IAAW14D,KAAK6H,MAAMwkB,QAAwB,QAAdwf,EAAKnV,MAAmD,eAAjCmV,EAAKorB,aAAa,GAAGx+C,GAAGnc,KAExI,sBAAduvC,EAAKvvC,MACd0D,KAAKuX,MAAMs0B,EAAKn0C,MAAO+R,EAAcuD,WAAY,YAFjDhN,KAAKuX,MAAMs0B,EAAKn0C,MAAO+R,EAAcmC,uBAAwB8sD,EAAU,SAAW,UAKpFzxD,EAAK6gC,KAAO+D,EACZ5kC,EAAKs4B,MAAQm5B,EAAU14D,KAAKq5B,kBAAoBr5B,KAAKy5B,0BACrDz5B,KAAKs5B,OAAO74B,EAAQkB,QACpBsF,EAAK3P,KAAO0I,KAAK22D,4BAA2B,kBAAM,EAAKtZ,eAAe,UACtEr9C,KAAKgY,MAAM2lB,OACX39B,KAAK6H,MAAM0lB,OAAOvY,MACXhV,KAAK42B,WAAW3vB,EAAMyxD,EAAU,iBAAmB,oB,sBAG5D,SAASzxD,EAAM2xD,EAAOliC,GACpB,IAAMugC,EAAehwD,EAAKgwD,aAAe,GACnC4B,EAAe74D,KAAKoJ,UAAU,cAGpC,IAFAnC,EAAKyvB,KAAOA,IAEH,CACP,IAAMmP,EAAO7lC,KAAKy2B,YAkBlB,GAjBAz2B,KAAK84D,WAAWjzB,EAAMnP,GAElB12B,KAAKg5B,IAAIv4B,EAAQkC,IACnBkjC,EAAKgG,KAAO+sB,EAAQ54D,KAAK+4D,6BAA+B/4D,KAAKy5B,2BAEhD,UAAT/C,GAAsB12B,KAAK3C,MAAMoD,EAAQmF,MAAQ5F,KAAKg9B,aAAa,MAI3C,eAAjB6I,EAAKptB,GAAGnc,MAA2Bs8D,IAAU54D,KAAK3C,MAAMoD,EAAQmF,MAAQ5F,KAAKg9B,aAAa,QACnGh9B,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAYjK,EAAckB,8BAA+B,4BAJ1EkuD,GACH74D,KAAKuX,MAAMvX,KAAK6H,MAAM6L,WAAYjK,EAAckB,8BAA+B,sBAMnFk7B,EAAKgG,KAAO,MAGdorB,EAAa93D,KAAKa,KAAK42B,WAAWiP,EAAM,wBACnC7lC,KAAKg5B,IAAIv4B,EAAQmB,OAAQ,MAGhC,OAAOqF,I,wBAGT,SAAW4+B,EAAMnP,GACfmP,EAAKptB,GAAKzY,KAAKqzD,mBACfrzD,KAAKkoC,UAAUrC,EAAKptB,GAAI,uBAAiC,QAATie,EAjuXnC4G,EADIA,OAkuXyE99B,EAAoB,QAATk3B,K,2BAGvG,SAAczvB,GAAkD,WAA5CvQ,EAA4C,uDA3zB5C,EA2zB2B25B,EAAiB,wDACxD6V,EA3zBa,EA2zBCxvC,EACdsiE,EA3zBqB,EA2zBAtiE,EACrBuiE,IAAc/yB,KA3zBC,EA2zBgBxvC,GACrCsJ,KAAK0wD,aAAazpD,EAAMopB,GAEpBrwB,KAAK3C,MAAMoD,EAAQmD,OAASo1D,GAC9Bh5D,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcsC,mCAG7C9E,EAAKwpD,UAAYzwD,KAAKg5B,IAAIv4B,EAAQmD,MAE9BsiC,IACFj/B,EAAKwR,GAAKzY,KAAKk5D,gBAAgBD,IAGjC,IAAMrgB,EAA4B54C,KAAK6H,MAAM6kB,uBAqB7C,OApBA1sB,KAAK6H,MAAM6kB,wBAAyB,EACpC1sB,KAAKgY,MAAMulB,MA5wXQ,GA6wXnBv9B,KAAKk3C,UAAU3Z,MAAMnN,GAAcC,EAASppB,EAAKwpD,YAE5CvqB,IACHj/B,EAAKwR,GAAKzY,KAAKk5D,mBAGjBl5D,KAAKuqC,oBAAoBtjC,GAAM,GAC/BjH,KAAK22D,4BAA2B,WAC9B,EAAKhG,2BAA2B1pD,EAAMi/B,EAAc,sBAAwB,yBAE9ElmC,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,OAEPuI,IAAgB8yB,GAClBh5D,KAAKm5D,4BAA4BlyD,GAGnCjH,KAAK6H,MAAM6kB,uBAAyBksB,EAC7B3xC,I,6BAGT,SAAgBgyD,GACd,OAAOA,GAAaj5D,KAAK3C,MAAMoD,EAAQjC,MAAQwB,KAAK47B,kBAAoB,O,iCAG1E,SAAoB30B,EAAM6hC,GACxB9oC,KAAKs5B,OAAO74B,EAAQiB,QACpB1B,KAAKsnD,gBAAgB/pB,MA36GhB,IAAI8nB,GA3HiB,IAuiH1Bp+C,EAAK6B,OAAS9I,KAAK+wC,iBAAiBtwC,EAAQkB,OAAQ,IAAI,EAAOmnC,GAC/D9oC,KAAKsnD,gBAAgB3pB,S,yCAGvB,SAA4B12B,GACrBA,EAAKwR,IACVzY,KAAKgY,MAAMwkB,YAAYv1B,EAAKwR,GAAGja,KAAMwB,KAAK6H,MAAMwkB,QAAUplB,EAAKwpD,WAAaxpD,EAAKwiC,MAAQzpC,KAAKgY,MAAMohD,oBAzxXvF97B,EADIA,EAECA,GAwxXiJr2B,EAAKwR,GAAG/gB,S,wBAG7K,SAAWuP,EAAMi/B,EAAaC,GAC5BnmC,KAAKwY,OACLxY,KAAKs9C,eAAer2C,GACpB,IAAMs2C,EAAYv9C,KAAK6H,MAAMwkB,OAK7B,OAJArsB,KAAK6H,MAAMwkB,QAAS,EACpBrsB,KAAKw9C,aAAav2C,EAAMi/B,EAAaC,GACrCnmC,KAAKy9C,gBAAgBx2C,GACrBA,EAAK3P,KAAO0I,KAAK09C,iBAAiBz2C,EAAKotB,WAAYkpB,GAC5Cv9C,KAAK42B,WAAW3vB,EAAMi/B,EAAc,mBAAqB,qB,6BAGlE,WACE,OAAOlmC,KAAK3C,MAAMoD,EAAQkC,KAAO3C,KAAK3C,MAAMoD,EAAQoB,OAAS7B,KAAK3C,MAAMoD,EAAQe,U,2BAGlF,WACE,OAAOxB,KAAK3C,MAAMoD,EAAQiB,U,oCAG5B,SAAuB4zB,GACrB,OAAQA,EAAOqB,WAAarB,EAAOkL,SAA+B,gBAApBlL,EAAOv2B,IAAIP,MAA+C,gBAArB82B,EAAOv2B,IAAIxI,S,4BAGhG,SAAe2kD,EAAeqC,GAAW,WACvCv9C,KAAKilD,WAAW1nB,QAChB,IAAM11B,EAAQ,CACZwxD,gBAAgB,EAChBne,iBAEEjC,EAAa,GACXnjB,EAAY91B,KAAKy2B,YAoCvB,GAnCAX,EAAUx+B,KAAO,GACjB0I,KAAKs5B,OAAO74B,EAAQY,QACpBrB,KAAK22D,4BAA2B,WAC9B,MAAQ,EAAKt5D,MAAMoD,EAAQe,SACzB,GAAI,EAAKw3B,IAAIv4B,EAAQoB,OACnB,GAAIo3C,EAAWzhD,OAAS,EACtB,MAAM,EAAK+f,MAAM,EAAK1P,MAAM6L,WAAYjK,EAAcsB,yBAM1D,GAAI,EAAK1N,MAAMoD,EAAQ+B,IACrBy2C,EAAW95C,KAAK,EAAK0wD,sBADvB,CAKA,IAAMzpB,EAAS,EAAK3P,YAEhBwiB,EAAWzhD,SACb4uC,EAAO6S,WAAaA,EACpB,EAAK3P,2BAA2BlD,EAAQ6S,EAAW,IACnDA,EAAa,IAGf,EAAKqgB,iBAAiBxjC,EAAWsQ,EAAQv+B,GAErB,gBAAhBu+B,EAAO1P,MAA0B0P,EAAO6S,YAAc7S,EAAO6S,WAAWzhD,OAAS,GACnF,EAAK+f,MAAM6uB,EAAO1uC,MAAO+R,EAAcoB,0BAI7C7K,KAAK6H,MAAMwkB,OAASkxB,EACpBv9C,KAAKwY,OAEDygC,EAAWzhD,OACb,MAAMwI,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcmH,mBAInD,OADA5Q,KAAKilD,WAAWtnB,OACT39B,KAAK42B,WAAWd,EAAW,e,0CAGpC,SAA6BA,EAAWsQ,GACtC,IAAMrnC,EAAMiB,KAAK47B,iBAAgB,GAEjC,GAAI57B,KAAKu5D,gBAAiB,CACxB,IAAMjkC,EAAS8Q,EAMf,OALA9Q,EAAOoB,KAAO,SACdpB,EAAOqB,UAAW,EAClBrB,EAAOv2B,IAAMA,EACbu2B,EAAOkL,QAAS,EAChBxgC,KAAKw5D,gBAAgB1jC,EAAWR,GAAQ,GAAO,GAAO,GAAO,IACtD,EACF,GAAIt1B,KAAKy5D,kBAAmB,CACjC,IAAMzvC,EAAOoc,EAKb,OAJApc,EAAK2M,UAAW,EAChB3M,EAAKjrB,IAAMA,EACXirB,EAAKwW,QAAS,EACd1K,EAAUx+B,KAAK6H,KAAKa,KAAK05D,mBAAmB1vC,KACrC,EAIT,OADAhqB,KAAKisD,kCAAkCltD,IAChC,I,8BAGT,SAAiB+2B,EAAWsQ,EAAQv+B,GAClC,IAAM04B,EAAWvgC,KAAKg9B,aAAa,UAEnC,GAAIuD,EAAU,CACZ,GAAIvgC,KAAKqmC,6BAA6BvQ,EAAWsQ,GAC/C,OAGF,GAAIpmC,KAAKg5B,IAAIv4B,EAAQY,QAEnB,YADArB,KAAKg7C,sBAAsBllB,EAAWsQ,GAK1CpmC,KAAKi7C,6BAA6BnlB,EAAWsQ,EAAQv+B,EAAO04B,K,0CAG9D,SAA6BzK,EAAWsQ,EAAQv+B,EAAO04B,GACrD,IAAMo5B,EAAevzB,EACfwzB,EAAgBxzB,EAChByzB,EAAazzB,EACb0zB,EAAc1zB,EACd9Q,EAASqkC,EACTI,EAAeJ,EAGrB,GAFAvzB,EAAO5F,OAASD,EAEZvgC,KAAKg5B,IAAIv4B,EAAQmD,MAAO,CAC1B0xB,EAAOoB,KAAO,SACd,IAAMmwB,EAAgB7mD,KAAK3C,MAAMoD,EAAQK,aAGzC,OAFAd,KAAKg6D,sBAAsB1kC,GAEvBuxB,OACF7mD,KAAKi6D,uBAAuBnkC,EAAW8jC,GAAe,GAAM,IAI1D55D,KAAKk6D,uBAAuBP,IAC9B35D,KAAKuX,MAAMoiD,EAAa56D,IAAIrH,MAAO+R,EAAciB,6BAGnD1K,KAAKw5D,gBAAgB1jC,EAAW6jC,GAAc,GAAM,GAAO,GAAO,IAIpE,IAAM38B,EAAeh9B,KAAK3C,MAAMoD,EAAQjC,QAAUwB,KAAK6H,MAAM6lB,YACvDysC,EAAYn6D,KAAK3C,MAAMoD,EAAQK,aAC/B/B,EAAMiB,KAAKg6D,sBAAsB5zB,GACjCg0B,EAA0Bp6D,KAAK6H,MAAMnQ,MAG3C,GAFAsI,KAAKq6D,6BAA6BN,GAE9B/5D,KAAKu5D,gBAAiB,CAGxB,GAFAjkC,EAAOoB,KAAO,SAEVyjC,EAEF,YADAn6D,KAAKi6D,uBAAuBnkC,EAAW8jC,GAAe,GAAO,GAI/D,IAAM7jC,EAAgB/1B,KAAKk6D,uBAAuBP,GAC9C3jC,GAAoB,EAEpBD,IACF4jC,EAAajjC,KAAO,cAEhB7uB,EAAMwxD,iBAAmBr5D,KAAKoJ,UAAU,eAC1CpJ,KAAKuX,MAAMxY,EAAIrH,MAAO+R,EAAc0B,sBAGlC4qB,GAAiB/1B,KAAKoJ,UAAU,eAAiBg9B,EAAO8S,UAC1Dl5C,KAAKuX,MAAMxY,EAAIrH,MAAO+R,EAAcuF,uBAGtCnH,EAAMwxD,gBAAiB,EACvBrjC,EAAoBnuB,EAAMqzC,eAG5Bl7C,KAAKw5D,gBAAgB1jC,EAAW6jC,GAAc,GAAO,EAAO5jC,EAAeC,QACtE,GAAIh2B,KAAKy5D,kBACVU,EACFn6D,KAAKs6D,yBAAyBxkC,EAAWgkC,GAEzC95D,KAAKu6D,kBAAkBzkC,EAAW+jC,QAE/B,GAAI78B,GAA6B,UAAbj+B,EAAIP,OAAqBwB,KAAKgxC,mBAAoB,CAC3EhxC,KAAKisD,kCAAkCltD,GACvC,IAAMuxB,EAActwB,KAAKg5B,IAAIv4B,EAAQmD,MAEjCm2D,EAAa1iC,UACfr3B,KAAK84B,WAAWshC,GAGlB9kC,EAAOoB,KAAO,SACd,IAAMyjC,EAAYn6D,KAAK3C,MAAMoD,EAAQK,aACrCd,KAAKg6D,sBAAsB1kC,GAC3Bt1B,KAAKq6D,6BAA6BN,GAE9BI,EACFn6D,KAAKi6D,uBAAuBnkC,EAAW8jC,EAAetpC,GAAa,IAE/DtwB,KAAKk6D,uBAAuBP,IAC9B35D,KAAKuX,MAAMoiD,EAAa56D,IAAIrH,MAAO+R,EAAcgB,oBAGnDzK,KAAKw5D,gBAAgB1jC,EAAW6jC,EAAcrpC,GAAa,GAAM,GAAO,SAErE,IAAI0M,GAA8B,QAAbj+B,EAAIP,MAA+B,QAAbO,EAAIP,MAAqBwB,KAAK3C,MAAMoD,EAAQmD,OAAS5D,KAAKgxC,mBAiBjGhxC,KAAKgxC,mBACVmpB,EACFn6D,KAAKs6D,yBAAyBxkC,EAAWgkC,GAEzC95D,KAAKu6D,kBAAkBzkC,EAAW+jC,GAGpC75D,KAAK84B,iBAxB0H,CAC/H94B,KAAKisD,kCAAkCltD,GACvCu2B,EAAOoB,KAAO33B,EAAIP,KAClB,IAAM27D,EAAYn6D,KAAK3C,MAAMoD,EAAQK,aACrCd,KAAKg6D,sBAAsBL,GAEvBQ,EACFn6D,KAAKi6D,uBAAuBnkC,EAAW8jC,GAAe,GAAO,IAEzD55D,KAAKk6D,uBAAuBP,IAC9B35D,KAAKuX,MAAMoiD,EAAa56D,IAAIrH,MAAO+R,EAAce,uBAGnDxK,KAAKw5D,gBAAgB1jC,EAAW6jC,GAAc,GAAO,GAAO,GAAO,IAGrE35D,KAAKowD,wBAAwBuJ,M,mCAYjC,SAAsBvzB,GACpB,MAIIpmC,KAAK6H,MAHPvL,EADF,EACEA,KACA/F,EAFF,EAEEA,MACAmB,EAHF,EAGEA,MAWF,OARK4E,IAASmE,EAAQjC,MAAQlC,IAASmE,EAAQpF,SAAW+qC,EAAO5F,QAAoB,cAAVjqC,GACzEyJ,KAAKuX,MAAM7f,EAAO+R,EAAcyG,iBAG9B5T,IAASmE,EAAQK,aAAyB,gBAAVvK,GAClCyJ,KAAKuX,MAAM7f,EAAO+R,EAAcc,8BAG3BvK,KAAK+xC,kBAAkB3L,GAAQ,K,mCAGxC,SAAsBtQ,EAAWsQ,GAC/B,IAAIo0B,EAEJx6D,KAAK29C,aAAa,mBAAoBvX,EAAO1uC,OAC7CsI,KAAKgY,MAAMulB,MAAMjnB,KACjB,IAAMwwC,EAAY9mD,KAAK6H,MAAM0lB,OAC7BvtB,KAAK6H,MAAM0lB,OAAS,GACpBvtB,KAAKk3C,UAAU3Z,MAvhQL,GAwhQV,IAAMjmC,EAAO8uC,EAAO9uC,KAAO,GAC3B0I,KAAK82C,4BAA4Bx/C,OAAMkI,GAAW,EAAOiB,EAAQe,QACjExB,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,OACX39B,KAAK6H,MAAM0lB,OAASu5B,EACpBhxB,EAAUx+B,KAAK6H,KAAKa,KAAK42B,WAAWwP,EAAQ,gBAEI,OAA3Co0B,EAAqBp0B,EAAO6S,aAAuBuhB,EAAmBhjE,QACzEwI,KAAKuX,MAAM6uB,EAAO1uC,MAAO+R,EAAcuB,wB,+BAI3C,SAAkB8qB,EAAW9L,GACtBA,EAAK2M,UAA+B,gBAAlB3M,EAAKjrB,IAAIP,MAA6C,gBAAnBwrB,EAAKjrB,IAAIxI,OACjEyJ,KAAKuX,MAAMyS,EAAKjrB,IAAIrH,MAAO+R,EAAca,uBAG3CwrB,EAAUx+B,KAAK6H,KAAKa,KAAK05D,mBAAmB1vC,M,sCAG9C,SAAyB8L,EAAW9L,GAClC,IAAM/iB,EAAOjH,KAAKy6D,0BAA0BzwC,GAC5C8L,EAAUx+B,KAAK6H,KAAK8H,GACpBjH,KAAKilD,WAAWyV,mBAAmB16D,KAAK26D,iBAAiB1zD,EAAKlI,KAjiYtC,EAiiYiEkI,EAAKlI,IAAIrH,S,6BAGpG,SAAgBo+B,EAAWR,EAAQhF,EAAaD,EAAS0F,EAAeC,GACtEF,EAAUx+B,KAAK6H,KAAKa,KAAKi2B,YAAYX,EAAQhF,EAAaD,EAAS0F,EAAeC,EAAmB,eAAe,M,oCAGtH,SAAuBF,EAAWR,EAAQhF,EAAaD,GACrD,IAAMppB,EAAOjH,KAAKi2B,YAAYX,EAAQhF,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChGyF,EAAUx+B,KAAK6H,KAAK8H,GACpB,IAAMyvB,EAAqB,QAAdzvB,EAAKyvB,KAAiBzvB,EAAKu5B,OA/iYR2kB,EAHF,EAkjY+F,QAAdl+C,EAAKyvB,KAAiBzvB,EAAKu5B,OA9iY1Go6B,EAHF,EAMN,EA4iYxB56D,KAAKilD,WAAWyV,mBAAmB16D,KAAK26D,iBAAiB1zD,EAAKlI,KAAM23B,EAAMzvB,EAAKlI,IAAIrH,S,0CAGrF,SAA6ByjD,M,uCAE7B,SAA0Bl0C,GAGxB,OAFAjH,KAAK66D,iBAAiB5zD,GACtBjH,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,0B,gCAG/B,SAAmBA,GAGjB,OAFAjH,KAAK66D,iBAAiB5zD,GACtBjH,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,mB,8BAG/B,SAAiBA,GACfjH,KAAKgY,MAAMulB,MAAMjnB,IACjBtW,KAAKsnD,gBAAgB/pB,MAAMuoB,MAC3B9lD,KAAKk3C,UAAU3Z,MA9kQL,GA+kQVt2B,EAAK1Q,MAAQyJ,KAAKg5B,IAAIv4B,EAAQkC,IAAM3C,KAAKy5B,0BAA4B,KACrEz5B,KAAKsnD,gBAAgB3pB,OACrB39B,KAAKk3C,UAAUvZ,OACf39B,KAAKgY,MAAM2lB,S,0BAGb,SAAa12B,EAAMi/B,EAAaC,GAAsC,IAA1BluB,EAA0B,uDA5lYrDqlB,IA6lYXt9B,KAAK3C,MAAMoD,EAAQjC,OACrByI,EAAKwR,GAAKzY,KAAK47B,kBAEXsK,GACFlmC,KAAKkoC,UAAUjhC,EAAKwR,GAAI,aAAcR,IAGpCkuB,IAAeD,EACjBj/B,EAAKwR,GAAK,KAEVzY,KAAK84B,WAAW,KAAMrvB,EAAcqE,oB,6BAK1C,SAAgB7G,GACdA,EAAKotB,WAAar0B,KAAKg5B,IAAIv4B,EAAQ6E,UAAYtF,KAAKyqD,sBAAwB,O,yBAG9E,SAAYxjD,GACV,IAAM6zD,EAAa96D,KAAK+6D,iCAAiC9zD,GACnD+zD,GAAqBF,GAAc96D,KAAKg5B,IAAIv4B,EAAQmB,OACpDq5D,EAAUD,GAAqBh7D,KAAKk7D,cAAcj0D,GAClDg/B,EAAeg1B,GAAWj7D,KAAKm7D,mCAAmCl0D,GAClEm0D,EAAsBJ,KAAuB/0B,GAAgBjmC,KAAKg5B,IAAIv4B,EAAQmB,QAC9Ey5D,EAAiBP,GAAcG,EAErC,GAAIA,IAAYh1B,EAGd,OAFI60B,GAAY96D,KAAK84B,aACrB94B,KAAKgmC,gBAAgB/+B,GAAM,GACpBjH,KAAK42B,WAAW3vB,EAAM,wBAG/B,IAMIq0D,EANEC,EAAgBv7D,KAAKw7D,gCAAgCv0D,GAE3D,GAAI6zD,GAAcE,IAAsBC,IAAYM,GAAiBt1B,GAAgBm1B,IAAwBG,EAC3G,MAAMv7D,KAAK84B,WAAW,KAAMr4B,EAAQY,QAYtC,GAPIg6D,GAAkBE,GACpBD,GAAiB,EACjBt7D,KAAKgmC,gBAAgB/+B,EAAMo0D,IAE3BC,EAAiBt7D,KAAKy7D,4BAA4Bx0D,GAGhDo0D,GAAkBE,GAAiBD,EAErC,OADAt7D,KAAK07D,YAAYz0D,GAAM,GAAM,IAASA,EAAKb,QACpCpG,KAAK42B,WAAW3vB,EAAM,0BAG/B,GAAIjH,KAAKg5B,IAAIv4B,EAAQnB,UAGnB,OAFA2H,EAAK62B,YAAc99B,KAAK27D,+BACxB37D,KAAK07D,YAAYz0D,GAAM,GAAM,GACtBjH,KAAK42B,WAAW3vB,EAAM,4BAG/B,MAAMjH,KAAK84B,WAAW,KAAMr4B,EAAQY,U,2BAGtC,SAAc4F,GACZ,OAAOjH,KAAKg5B,IAAIv4B,EAAQmD,Q,8CAG1B,SAAiCqD,GAC/B,GAAIjH,KAAK47D,2BAA4B,CACnC57D,KAAK29C,aAAa,qBAClB,IAAM5V,EAAY/nC,KAAKy2B,YAGvB,OAFAsR,EAAUtQ,SAAWz3B,KAAK47B,iBAAgB,GAC1C30B,EAAK8B,WAAa,CAAC/I,KAAK42B,WAAWmR,EAAW,4BACvC,EAGT,OAAO,I,gDAGT,SAAmC9gC,GACjC,GAAIjH,KAAKg9B,aAAa,MAAO,CACtB/1B,EAAK8B,aAAY9B,EAAK8B,WAAa,IACxC,IAAMg/B,EAAY/nC,KAAK+0B,YAAY/0B,KAAK6H,MAAM0L,aAAcvT,KAAK6H,MAAM2L,iBAIvE,OAHAxT,KAAKwY,OACLuvB,EAAUtQ,SAAWz3B,KAAKqoC,wBAC1BphC,EAAK8B,WAAW5J,KAAKa,KAAK42B,WAAWmR,EAAW,8BACzC,EAGT,OAAO,I,6CAGT,SAAgC9gC,GACE,MAAhC,QAAIjH,KAAK3C,MAAMoD,EAAQY,UAChB4F,EAAK8B,aAAY9B,EAAK8B,WAAa,KACxC,EAAA9B,EAAK8B,YAAW5J,KAAhB,UAAwBa,KAAK+lC,0BAC7B9+B,EAAKb,OAAS,KACda,EAAK62B,YAAc,MACZ,K,yCAMX,SAA4B72B,GAC1B,QAAIjH,KAAKs7C,iCACPr0C,EAAK8B,WAAa,GAClB9B,EAAKb,OAAS,KACda,EAAK62B,YAAc99B,KAAK67D,uBAAuB50D,IACxC,K,6BAMX,WACE,IAAKjH,KAAKg9B,aAAa,SAAU,OAAO,EACxC,IAAMxkB,EAAOxY,KAAK4tC,iBAClB,OAAQ3nC,EAAUvJ,KAAKsD,KAAK0I,MAAMnR,MAAMyI,KAAK6H,MAAMwL,IAAKmF,KAAUxY,KAAK49C,qBAAqBplC,EAAM,c,0CAGpG,WACE,IAAMyrB,EAAOjkC,KAAKy2B,YACZpG,EAAUrwB,KAAK+1D,kBAErB,GAAI/1D,KAAK3C,MAAMoD,EAAQ+D,YAAc6rB,EAOnC,OANArwB,KAAKwY,OAED6X,GACFrwB,KAAKwY,OAGAxY,KAAKqsD,cAAcpoB,EAAM63B,EAAmCzrC,GAC9D,GAAIrwB,KAAK3C,MAAMoD,EAAQ4E,QAC5B,OAAOrF,KAAKg4C,WAAW/T,GAAM,GAAM,GAC9B,GAAIjkC,KAAK3C,MAAMoD,EAAQ+B,IAM5B,OALIxC,KAAKoJ,UAAU,eAAiBpJ,KAAK8zB,gBAAgB,aAAc,2BACrE9zB,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcmB,uBAG7C5K,KAAKitD,iBAAgB,GACdjtD,KAAKg4C,WAAW/T,GAAM,GAAM,GAC9B,GAAIjkC,KAAK3C,MAAMoD,EAAQsE,SAAW/E,KAAK3C,MAAMoD,EAAQqE,OAAS9E,KAAKg+B,QACxE,MAAMh+B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcuI,0BAEjD,IAAM2lC,EAAM33C,KAAKy5B,0BAEjB,OADAz5B,KAAKu8B,YACEob,I,oCAIX,SAAuB1wC,GACrB,OAAOjH,KAAKq9C,eAAe,Q,sCAG7B,WACE,GAAIr9C,KAAK3C,MAAMoD,EAAQjC,MAAO,CAC5B,IAAMjI,EAAQyJ,KAAK6H,MAAMtR,MAEzB,GAAc,UAAVA,IAAsByJ,KAAK6H,MAAM6lB,aAAyB,QAAVn3B,EAClD,OAAO,EAGT,IAAe,SAAVA,GAA8B,cAAVA,KAA2ByJ,KAAK6H,MAAM6lB,YAAa,CAC1E,IAAMquC,EAAI/7D,KAAKygC,YAEf,GAAIs7B,EAAEz/D,OAASmE,EAAQjC,MAAoB,SAAZu9D,EAAExlE,OAAoBwlE,EAAEz/D,OAASmE,EAAQY,OAEtE,OADArB,KAAKutD,gBAAgB,CAAC,OAAQ,gBACvB,QAGN,IAAKvtD,KAAK3C,MAAMoD,EAAQnB,UAC7B,OAAO,EAGT,IAAMkZ,EAAOxY,KAAK4tC,iBACZouB,EAAUh8D,KAAK49C,qBAAqBplC,EAAM,QAEhD,GAAoC,KAAhCxY,KAAK0I,MAAMC,WAAW6P,IAAgBxY,KAAK3C,MAAMoD,EAAQjC,OAASw9D,EACpE,OAAO,EAGT,GAAIh8D,KAAK3C,MAAMoD,EAAQnB,WAAa08D,EAAS,CAC3C,IAAMC,EAAgBj8D,KAAK0I,MAAMC,WAAW3I,KAAK89C,oBAAoBtlC,EAAO,IAC5E,OAAyB,KAAlByjD,GAA0C,KAAlBA,EAGjC,OAAO,I,6BAGT,SAAgBh1D,EAAMqyB,GACpB,GAAIt5B,KAAK68B,cAAc,QAAS,CAC9B51B,EAAKb,OAASpG,KAAKm+C,oBACnBn+C,KAAK07D,YAAYz0D,GACjB,IAAMi1D,EAAal8D,KAAKm8D,6BAEpBD,IACFj1D,EAAKi1D,WAAaA,QAGhB5iC,EACFt5B,KAAK84B,aAEL7xB,EAAKb,OAAS,KAIlBpG,KAAKu8B,c,0CAGP,WACE,GAAIv8B,KAAK3C,MAAMoD,EAAQ+B,MACrBxC,KAAKutD,gBAAgB,CAAC,aAAc,sBAEhCvtD,KAAKoJ,UAAU,eAAe,CAChC,IAAIpJ,KAAK8zB,gBAAgB,aAAc,0BAGrC,OAAO,EAFP9zB,KAAK84B,WAAW94B,KAAK6H,MAAMnQ,MAAO+R,EAAcmB,uBAOtD,MAAmC,QAA5B5K,KAAK6H,MAAMvL,KAAKzB,SAAiD,UAA5BmF,KAAK6H,MAAMvL,KAAKzB,SAAmD,aAA5BmF,KAAK6H,MAAMvL,KAAKzB,SAAsD,UAA5BmF,KAAK6H,MAAMvL,KAAKzB,SAAuBmF,KAAKg+B,SAAWh+B,KAAK+1D,oB,yBAG3L,SAAY9uD,EAAMm1D,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAGF,GAFAr8D,KAAKu8D,sBAAsBt1D,EAAM,WAE7BjH,KAAKoJ,UAAU,qBAAsB,CACvC,IAAIozD,EAEE1+B,EAAc72B,EAAK62B,YAEA,eAArBA,EAAYxhC,MAA8C,SAArBwhC,EAAYt/B,MAAmBs/B,EAAYj3B,IAAMi3B,EAAYpmC,QAAU,GAAmD,OAA3C8kE,EAAqB1+B,EAAY9I,QAAkBwnC,EAAmBhnC,eAC5Lx1B,KAAKuX,MAAMumB,EAAYpmC,MAAO+R,EAAckC,qCAG3C,GAAI1E,EAAK8B,YAAc9B,EAAK8B,WAAWvR,OAAQ,WAC5ByP,EAAK8B,YADuB,IACpD,2BAAyC,KAA9Bg/B,EAA8B,QAErCtQ,EACEsQ,EADFtQ,SAEIglC,EAAiC,eAAlBhlC,EAASn7B,KAAwBm7B,EAASj5B,KAAOi5B,EAASlhC,MAG/E,GAFAyJ,KAAKu8D,sBAAsBx0B,EAAW00B,IAEjCH,GAAUv0B,EAAUE,MAAO,CAC9B,IACEA,EACEF,EADFE,MAGiB,eAAfA,EAAM3rC,KACR0D,KAAKuX,MAAMwwB,EAAUrwC,MAAO+R,EAAciC,sBAAuBu8B,EAAM1xC,MAAOkmE,IAE9Ez8D,KAAK6oC,kBAAkBZ,EAAMzpC,KAAMypC,EAAMvwC,OAAO,GAAM,GACtDsI,KAAKgY,MAAM0kD,iBAAiBz0B,MAjBkB,oCAqB/C,GAAIhhC,EAAK62B,YACd,GAA8B,wBAA1B72B,EAAK62B,YAAYxhC,MAA4D,qBAA1B2K,EAAK62B,YAAYxhC,KAA6B,CACnG,IAAMmc,EAAKxR,EAAK62B,YAAYrlB,GAC5B,IAAKA,EAAI,MAAM,IAAIhhB,MAAM,qBACzBuI,KAAKu8D,sBAAsBt1D,EAAMwR,EAAGja,WAC/B,GAA8B,wBAA1ByI,EAAK62B,YAAYxhC,KAAgC,WAChC2K,EAAK62B,YAAYm5B,cADe,IAC1D,2BAAyD,KAA9Cn5B,EAA8C,QACvD99B,KAAKq1B,iBAAiByI,EAAYrlB,KAFsB,+BAUhE,GAFiCzY,KAAK6H,MAAM2lB,eAAextB,KAAK6H,MAAM2lB,eAAeh2B,OAAS,GAEjEA,OAC3B,MAAMwI,KAAKuX,MAAMtQ,EAAKvP,MAAO+R,EAAcsI,8B,8BAI/C,SAAiB9K,GACf,GAAkB,eAAdA,EAAK3K,KACP0D,KAAKu8D,sBAAsBt1D,EAAMA,EAAKzI,WACjC,GAAkB,kBAAdyI,EAAK3K,KAA0B,WACrB2K,EAAK2B,YADgB,IACxC,2BAAoC,KAAzBohB,EAAyB,QAClChqB,KAAKq1B,iBAAiBrL,IAFgB,oCAInC,GAAkB,iBAAd/iB,EAAK3K,KAAyB,WACpB2K,EAAKO,UADe,IACvC,2BAAkC,KAAvB0nD,EAAuB,QAC5BA,GACFlvD,KAAKq1B,iBAAiB65B,IAHa,mCAMhB,mBAAdjoD,EAAK3K,KACd0D,KAAKq1B,iBAAiBpuB,EAAK1Q,OACJ,gBAAd0Q,EAAK3K,KACd0D,KAAKq1B,iBAAiBpuB,EAAKuyB,UACJ,sBAAdvyB,EAAK3K,MACd0D,KAAKq1B,iBAAiBpuB,EAAK6gC,Q,mCAI/B,SAAsB7gC,EAAMzI,GACtBwB,KAAKgnD,oBAAoBvqD,IAAI+B,IAC/BwB,KAAKuX,MAAMtQ,EAAKvP,MAAgB,YAAT8G,EAAqBiL,EAAc2B,uBAAyB3B,EAAc4B,gBAAiB7M,GAGpHwB,KAAKgnD,oBAAoB7uC,IAAI3Z,K,mCAG/B,WACE,IAAMm+D,EAAQ,GACVz6B,GAAQ,EAGZ,IAFAliC,KAAKs5B,OAAO74B,EAAQY,SAEZrB,KAAKg5B,IAAIv4B,EAAQe,SAAS,CAChC,GAAI0gC,EACFA,GAAQ,OAGR,GADAliC,KAAKs5B,OAAO74B,EAAQmB,OAChB5B,KAAKg5B,IAAIv4B,EAAQe,QAAS,MAGhC,IAAMyF,EAAOjH,KAAKy2B,YAClBxvB,EAAKghC,MAAQjoC,KAAKqoC,wBAClBphC,EAAKwwB,SAAWz3B,KAAK68B,cAAc,MAAQ78B,KAAKqoC,wBAA0BphC,EAAKghC,MAAMS,UACrFi0B,EAAMx9D,KAAKa,KAAK42B,WAAW3vB,EAAM,oBAGnC,OAAO01D,I,mCAGT,WACE,GAAI38D,KAAK3C,MAAMoD,EAAQpF,QAAS,CAC9B,IAAMuC,EAASoC,KAAK2rC,mBAAmB3rC,KAAK6H,MAAMtR,OAC5CqmE,EAAYh/D,EAAOrH,MAAM8G,MAAM22D,IAMrC,OAJI4I,GACF58D,KAAKuX,MAAM3Z,EAAOlG,MAAO+R,EAAc6E,iCAAkCsuD,EAAU,GAAGj0D,WAAW,GAAGk0D,SAAS,KAGxGj/D,EAGT,OAAOoC,KAAK47B,iBAAgB,K,yBAG9B,SAAY30B,GAGV,GAFAA,EAAK8B,WAAa,IAEb/I,KAAK3C,MAAMoD,EAAQpF,QAAS,CAC/B,IACMyhE,GADa98D,KAAK+8D,iCAAiC91D,IACxBjH,KAAKg5B,IAAIv4B,EAAQmB,OAC5Cq5D,EAAU6B,GAAa98D,KAAKi+C,8BAA8Bh3C,GAC5D61D,IAAc7B,GAASj7D,KAAKk+C,2BAA2Bj3C,GAC3DjH,KAAKw7B,iBAAiB,QAGxBv0B,EAAKb,OAASpG,KAAKm+C,oBACnB,IAAM+d,EAAal8D,KAAKm8D,6BAExB,GAAID,EACFj1D,EAAKi1D,WAAaA,MACb,CACL,IAAM1kC,EAAax3B,KAAKg9D,6BAEpBxlC,IACFvwB,EAAKuwB,WAAaA,GAKtB,OADAx3B,KAAKu8B,YACEv8B,KAAK42B,WAAW3vB,EAAM,uB,+BAG/B,WAEE,OADKjH,KAAK3C,MAAMoD,EAAQpF,SAAS2E,KAAK84B,aAC/B94B,KAAKo5B,kB,sCAGd,SAAyBnyB,GACvB,OAAOjH,KAAK3C,MAAMoD,EAAQjC,Q,uCAG5B,SAA0ByI,EAAM8gC,EAAWzrC,EAAM0rC,GAC/CD,EAAUE,MAAQjoC,KAAK47B,kBACvB57B,KAAKkoC,UAAUH,EAAUE,MAAOD,EA99Yf1K,GA+9YjBr2B,EAAK8B,WAAW5J,KAAKa,KAAK42B,WAAWmR,EAAWzrC,M,gCAGlD,WACE,IAAM2gE,EAAQ,GACRC,EAAY,IAAItiE,IAEtB,EAAG,CACD,GAAIoF,KAAK3C,MAAMoD,EAAQe,QACrB,MAGF,IAAMyF,EAAOjH,KAAKy2B,YACZu5B,EAAUhwD,KAAK6H,MAAMtR,MAgB3B,GAdI2mE,EAAUzgE,IAAIuzD,IAChBhwD,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAc4E,kCAAmC2hD,GAGhFkN,EAAU/kD,IAAI63C,GAEVhwD,KAAK3C,MAAMoD,EAAQpF,QACrB4L,EAAKlI,IAAMiB,KAAK2rC,mBAAmBqkB,GAEnC/oD,EAAKlI,IAAMiB,KAAK47B,iBAAgB,GAGlC57B,KAAKs5B,OAAO74B,EAAQqB,QAEf9B,KAAK3C,MAAMoD,EAAQpF,QACtB,MAAM2E,KAAK84B,WAAW94B,KAAK6H,MAAMnQ,MAAO+R,EAAc2E,6BAGxDnH,EAAK1Q,MAAQyJ,KAAK2rC,mBAAmB3rC,KAAK6H,MAAMtR,OAChDyJ,KAAK42B,WAAW3vB,EAAM,mBACtBg2D,EAAM99D,KAAK8H,SACJjH,KAAKg5B,IAAIv4B,EAAQmB,QAE1B,OAAOq7D,I,wCAGT,WACE,IAAIj9D,KAAK3C,MAAMoD,EAAQwE,QAAWjF,KAAKguC,wBAIrC,OAAIhuC,KAAKoJ,UAAU,oBAA4B,GACxC,KAJPpJ,KAAK29C,aAAa,oBAClB39C,KAAKwY,OAMP,IAAMykD,EAAQ,GACRzlC,EAAa,IAAI58B,IAEvB,EAAG,CACD,IAAMqM,EAAOjH,KAAKy2B,YAclB,GAbAxvB,EAAKlI,IAAMiB,KAAK47B,iBAAgB,GAEV,SAAlB30B,EAAKlI,IAAIP,MACXwB,KAAKuX,MAAMtQ,EAAKlI,IAAIrH,MAAO+R,EAAc0E,iCAAkClH,EAAKlI,IAAIP,MAGlFg5B,EAAW/6B,IAAIwK,EAAKlI,IAAIP,OAC1BwB,KAAKuX,MAAMtQ,EAAKlI,IAAIrH,MAAO+R,EAAc4E,kCAAmCpH,EAAKlI,IAAIP,MAGvFg5B,EAAWrf,IAAIlR,EAAKlI,IAAIP,MACxBwB,KAAKs5B,OAAO74B,EAAQqB,QAEf9B,KAAK3C,MAAMoD,EAAQpF,QACtB,MAAM2E,KAAK84B,WAAW94B,KAAK6H,MAAMnQ,MAAO+R,EAAc2E,6BAGxDnH,EAAK1Q,MAAQyJ,KAAK2rC,mBAAmB3rC,KAAK6H,MAAMtR,OAChDyJ,KAAK42B,WAAW3vB,EAAM,mBACtBg2D,EAAM99D,KAAK8H,SACJjH,KAAKg5B,IAAIv4B,EAAQmB,QAE1B,OAAOq7D,I,wCAGT,WACE,IAAIj9D,KAAKg9B,aAAa,WAAch9B,KAAKguC,wBAIvC,OAAIhuC,KAAKoJ,UAAU,oBAA4B,GACxC,KAJPpJ,KAAK29C,aAAa,oBAClB39C,KAAKwY,OAMPxY,KAAKg5B,IAAIv4B,EAAQY,QACjB,IAAM47D,EAAQj9D,KAAKm9D,qBAEnB,OADAn9D,KAAKg5B,IAAIv4B,EAAQe,QACVy7D,I,8CAGT,SAAiCh2D,GAC/B,QAAIjH,KAAKo9D,yBAAyBn2D,KAChCjH,KAAKq9D,0BAA0Bp2D,EAAMjH,KAAKy2B,YAAa,yBAA0B,6BAC1E,K,2CAMX,SAA8BxvB,GAC5B,GAAIjH,KAAK3C,MAAMoD,EAAQmD,MAAO,CAC5B,IAAMmkC,EAAY/nC,KAAKy2B,YAIvB,OAHAz2B,KAAKwY,OACLxY,KAAKw7B,iBAAiB,MACtBx7B,KAAKq9D,0BAA0Bp2D,EAAM8gC,EAAW,2BAA4B,+BACrE,EAGT,OAAO,I,wCAGT,SAA2B9gC,GACzB,IAAIi7B,GAAQ,EAGZ,IAFAliC,KAAKs5B,OAAO74B,EAAQY,SAEZrB,KAAKg5B,IAAIv4B,EAAQe,SAAS,CAChC,GAAI0gC,EACFA,GAAQ,MACH,CACL,GAAIliC,KAAKg5B,IAAIv4B,EAAQqB,OACnB,MAAM9B,KAAKuX,MAAMvX,KAAK6H,MAAMnQ,MAAO+R,EAAcyB,wBAInD,GADAlL,KAAKs5B,OAAO74B,EAAQmB,OAChB5B,KAAKg5B,IAAIv4B,EAAQe,QAAS,MAGhCxB,KAAKs9D,qBAAqBr2D,M,kCAI9B,SAAqBA,GACnB,IAAM8gC,EAAY/nC,KAAKy2B,YACjB8mC,EAAmBv9D,KAAK3C,MAAMoD,EAAQpF,QAG5C,GAFA0sC,EAAUU,SAAWzoC,KAAKqoC,wBAEtBroC,KAAK68B,cAAc,MACrBkL,EAAUE,MAAQjoC,KAAK47B,sBAClB,CACL,IACE6M,EACEV,EADFU,SAGF,GAAI80B,EACF,MAAMv9D,KAAKuX,MAAMwwB,EAAUrwC,MAAO+R,EAAc0C,sBAAuBs8B,EAASlyC,OAGlFyJ,KAAK6oC,kBAAkBJ,EAASjqC,KAAMupC,EAAUrwC,OAAO,GAAM,GAC7DqwC,EAAUE,MAAQQ,EAASC,UAG7B1oC,KAAKkoC,UAAUH,EAAUE,MAAO,mBA3nZf3K,GA4nZjBr2B,EAAK8B,WAAW5J,KAAKa,KAAK42B,WAAWmR,EAAW,sB,yBAGlD,SAAY1E,GACV,MAAsB,eAAfA,EAAM/mC,MAAwC,SAAf+mC,EAAM7kC,S,GA5qDlBopD,KAswD9B,SAAS4V,GAAUrjE,EAASuO,GAC1B,IAAIiyC,EAAMuZ,GAOV,OALe,MAAX/5D,GAAmBA,EAAQ+O,WA76LjC,SAAyBA,GACvB,GAAIE,GAAUF,EAAS,cAAe,CACpC,GAAIE,GAAUF,EAAS,qBACrB,MAAM,IAAIzR,MAAM,mEAGlB,IAAMgmE,EAAyB3pC,GAAgB5qB,EAAS,aAAc,0BAEtE,GAA8B,MAA1Bu0D,EACF,MAAM,IAAIhmE,MAAM,mQACX,GAAsC,mBAA3BgmE,EAChB,MAAM,IAAIhmE,MAAM,+CAIpB,GAAI2R,GAAUF,EAAS,SAAWE,GAAUF,EAAS,cACnD,MAAM,IAAIzR,MAAM,+CAGlB,GAAI2R,GAAUF,EAAS,iBAAmBE,GAAUF,EAAS,eAC3D,MAAM,IAAIzR,MAAM,wDAGlB,GAAI2R,GAAUF,EAAS,sBAAwB+qB,GAAmB+W,SAASlX,GAAgB5qB,EAAS,mBAAoB,aACtH,MAAM,IAAIzR,MAAM,+EAAiFw8B,GAAmBl3B,KAAI,SAAA2gE,GAAC,iBAAQA,EAAR,QAAclkE,KAAK,OAG9I,GAAI4P,GAAUF,EAAS,oBAAqB,CAExC,GAAIE,GAAUF,EAAS,oBACrB,MAAM,IAAIzR,MAAM,iEAKlB,GAA2C,aAFAq8B,GAAgB5qB,EAAS,mBAAoB,WAGtF,MAAM,IAAIzR,MAAM,wJAKtB,GAAI2R,GAAUF,EAAS,oBAAsBgrB,GAA8B8W,SAASlX,GAAgB5qB,EAAS,iBAAkB,eAC7H,MAAM,IAAIzR,MAAM,+EAAiFy8B,GAA8Bn3B,KAAI,SAAA2gE,GAAC,iBAAQA,EAAR,QAAclkE,KAAK,OAGzJ,GAAI4P,GAAUF,EAAS,wBAA0BE,GAAUF,EAAS,iBAAkB,CACpF,IAAM7P,EAAQ,IAAI5B,MAAM,gGAExB,MADA4B,EAAMskE,eAAiB,gBACjBtkE,GA83LNukE,CAAgBzjE,EAAQ+O,SACxByxC,EAQJ,SAAwBkjB,GACtB,IAAMC,EAAa1f,GAAiBL,QAAO,SAAAv/C,GAAI,OAAI4K,GAAUy0D,EAAoBr/D,MAC3EO,EAAM++D,EAAWtkE,KAAK,KACxBmhD,EAAMojB,GAAiBh/D,GAE3B,IAAK47C,EAAK,CACRA,EAAMuZ,GADE,UAGa4J,GAHb,IAGR,2BAAiC,KAAtB30D,EAAsB,QAC/BwxC,EAAMxmB,GAAahrB,GAAQwxC,IAJrB,8BAORojB,GAAiBh/D,GAAO47C,EAG1B,OAAOA,EAvBCqjB,CAAe7jE,EAAQ+O,UAGxB,IAAIyxC,EAAIxgD,EAASuO,GAG1B,IAAMq1D,GAAmB,GAoBzBznE,EAAQovC,MA9ER,SAAeh9B,EAAOvO,GACpB,IAAI9B,EAEJ,GAAsE,iBAAzC,OAAvBA,EAAW8B,QAAmB,EAAS9B,EAASy1B,YA+BpD,OAAO0vC,GAAUrjE,EAASuO,GAAOg9B,QA9BjCvrC,EAAU/D,OAAOkC,OAAO,GAAI6B,GAE5B,IACEA,EAAQ2zB,WAAa,SACrB,IAAMhwB,EAAS0/D,GAAUrjE,EAASuO,GAC5BrR,EAAMyG,EAAO4nC,QAEnB,GAAI5nC,EAAOkL,kBACT,OAAO3R,EAGT,GAAIyG,EAAOmL,4BACT,IAEE,OADA9O,EAAQ2zB,WAAa,SACd0vC,GAAUrjE,EAASuO,GAAOg9B,QACjC,MAAO/Q,SAETt9B,EAAIb,QAAQs3B,WAAa,SAG3B,OAAOz2B,EACP,MAAO4mE,GACP,IAEE,OADA9jE,EAAQ2zB,WAAa,SACd0vC,GAAUrjE,EAASuO,GAAOg9B,QACjC,MAAOw4B,IAET,MAAMD,IAgDZ3nE,EAAQ+iC,gBA1CR,SAAyB3wB,EAAOvO,GAC9B,IAAM2D,EAAS0/D,GAAUrjE,EAASuO,GAMlC,OAJI5K,EAAO3D,QAAQ0zB,aACjB/vB,EAAO+J,MAAMwkB,QAAS,GAGjBvuB,EAAOqgE,iBAoChB7nE,EAAQ8nE,SAAW39D,G,kCCh/bnB,YAEArK,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ+nE,iBAAmBA,EAC3B/nE,EAAQuB,QAsIR,SAAkBymE,EAAUC,EAAYC,GAAsB,IAAX7kE,EAAW,uDAAJ,GACxD,IAAK8kE,EAAyB,CAC5BA,GAA0B,EAC1B,IAAMxqD,EAAU,sGAEhB,GAAIyqD,EAAQC,YACVD,EAAQC,YAAY1qD,EAAS,0BACxB,CACL,IAAM2qD,EAAmB,IAAInnE,MAAMwc,GACnC2qD,EAAiBpgE,KAAO,qBACxBqgE,QAAQC,KAAK,IAAIrnE,MAAMwc,KAK3B,IAAM8qD,EAAW,CACfrnE,MAAO,CACLiP,OAHJ63D,EAAYQ,KAAKC,IAAIT,EAAW,GAI5B/3D,KAAM83D,IAGV,OAAOF,EAAiBC,EAAUS,EAAUplE,IAzJ9C,IAAIulE,EAAapoE,EAAQ,MAErB2nE,GAA0B,EAE9B,SAASnkE,EAAQF,GACf,MAAO,CACL+kE,OAAQ/kE,EAAMqB,KACd2jE,OAAQhlE,EAAMilE,IAAIxjE,KAClBoY,QAAS7Z,EAAMilE,IAAIxjE,MAIvB,IAAME,EAAU,0BAEhB,SAASujE,EAAe13D,EAAKxB,EAAQzM,GACnC,IAAM2Z,EAAWld,OAAOkC,OAAO,CAC7BqO,OAAQ,EACRF,MAAO,GACNmB,EAAIlQ,OACD+b,EAASrd,OAAOkC,OAAO,GAAIgb,EAAU1L,EAAIf,KAC/C,EAGIlN,GAAQ,GAHZ,IACE4lE,kBADF,MACe,EADf,MAEEC,kBAFF,MAEe,EAFf,EAIMzxC,EAAYza,EAAS7M,KACrBg5D,EAAcnsD,EAAS3M,OACvB+4D,EAAUjsD,EAAOhN,KACjBk5D,EAAYlsD,EAAO9M,OACrBjP,EAAQsnE,KAAKC,IAAIlxC,GAAawxC,EAAa,GAAI,GAC/C14D,EAAMm4D,KAAKY,IAAIx5D,EAAO5O,OAAQkoE,EAAUF,IAEzB,IAAfzxC,IACFr2B,EAAQ,IAGO,IAAbgoE,IACF74D,EAAMT,EAAO5O,QAGf,IAAMqoE,EAAWH,EAAU3xC,EACrB+xC,EAAc,GAEpB,GAAID,EACF,IAAK,IAAIhhE,EAAI,EAAGA,GAAKghE,EAAUhhE,IAAK,CAClC,IAAM0/D,EAAa1/D,EAAIkvB,EAEvB,GAAK0xC,EAEE,GAAU,IAAN5gE,EAAS,CAClB,IAAMkhE,EAAe35D,EAAOm4D,EAAa,GAAG/mE,OAC5CsoE,EAAYvB,GAAc,CAACkB,EAAaM,EAAeN,EAAc,QAChE,GAAI5gE,IAAMghE,EACfC,EAAYvB,GAAc,CAAC,EAAGoB,OACzB,CACL,IAAMI,EAAe35D,EAAOm4D,EAAa1/D,GAAGrH,OAC5CsoE,EAAYvB,GAAc,CAAC,EAAGwB,QAR9BD,EAAYvB,IAAc,OAc1BuB,EAAY/xC,GAFZ0xC,IAAgBE,GACdF,GACuB,CAACA,EAAa,GAKhB,CAACA,EAAaE,EAAYF,GAIvD,MAAO,CACL/nE,QACAmP,MACAi5D,eAIJ,SAASzB,EAAiBC,EAAU12D,GAAgB,IAAXjO,EAAW,uDAAJ,GACxCkD,GAAelD,EAAKqmE,eAAiBrmE,EAAKsD,cAAe,EAAIiiE,EAAWjlE,iBAAiBN,GACzFS,GAAQ,EAAI8kE,EAAWhlE,UAAUP,GACjCU,EAAOC,EAAQF,GAEf6lE,EAAiB,SAACC,EAAS7kE,GAC/B,OAAOwB,EAAcqjE,EAAQ7kE,GAAUA,GAGnC8kE,EAAQ7B,EAAS/kE,MAAMwC,GAC7B,EAIIujE,EAAe13D,EAAKu4D,EAAOxmE,GAH7BjC,EADF,EACEA,MACAmP,EAFF,EAEEA,IACAi5D,EAHF,EAGEA,YAEIM,EAAax4D,EAAIlQ,OAAqC,kBAArBkQ,EAAIlQ,MAAMiP,OAC3C05D,EAAiB5qD,OAAO5O,GAAKrP,OAC7B8oE,EAAmBzjE,GAAc,EAAIqiE,EAAWrnE,SAASymE,EAAU3kE,GAAQ2kE,EAC7EiC,EAAQD,EAAiB/mE,MAAMwC,GAASxE,MAAMG,EAAOmP,GAAK9J,KAAI,SAAC0J,EAAMjJ,GACvE,IAAMrC,EAASzD,EAAQ,EAAI8F,EACrBgjE,EAAe,WAAIrlE,GAAS5D,OAAO8oE,GACnClB,EAAS,IAAH,OAAOqB,EAAP,MACNC,EAAYX,EAAY3kE,GACxBulE,GAAkBZ,EAAY3kE,EAAS,GAE7C,GAAIslE,EAAW,CACb,IAAIE,EAAa,GAEjB,GAAI/nE,MAAMC,QAAQ4nE,GAAY,CAC5B,IAAMG,EAAgBn6D,EAAKlP,MAAM,EAAGynE,KAAKC,IAAIwB,EAAU,GAAK,EAAG,IAAIvsD,QAAQ,SAAU,KAC/E2sD,EAAkBJ,EAAU,IAAM,EACxCE,EAAa,CAAC,MAAOV,EAAe5lE,EAAK8kE,OAAQA,EAAOjrD,QAAQ,MAAO,MAAO,IAAK0sD,EAAeX,EAAe5lE,EAAK+kE,OAAQ,KAAK0B,OAAOD,IAAkBrnE,KAAK,IAE7JknE,GAAkB/mE,EAAKsa,UACzB0sD,GAAc,IAAMV,EAAe5lE,EAAK4Z,QAASta,EAAKsa,UAI1D,MAAO,CAACgsD,EAAe5lE,EAAK+kE,OAAQ,KAAMa,EAAe5lE,EAAK8kE,OAAQA,GAAS14D,EAAKjP,OAAS,EAAd,WAAsBiP,GAAS,GAAIk6D,GAAYnnE,KAAK,IAEnI,iBAAWymE,EAAe5lE,EAAK8kE,OAAQA,IAAvC,OAAiD14D,EAAKjP,OAAS,EAAd,WAAsBiP,GAAS,OAEjFjN,KAAK,MAMR,OAJIG,EAAKsa,UAAYmsD,IACnBG,EAAQ,GAAH,OAAM,IAAIO,OAAOT,EAAiB,IAAlC,OAAuC1mE,EAAKsa,QAA5C,aAAwDssD,IAG3D1jE,EACKzC,EAAM2mE,MAAMR,GAEZA,K,oDCtIXnqE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQqC,MAMR,SAAeqoE,EAAGC,GAChB,MAKIA,EAJFljE,4BADF,MACyBijE,EAAEjjE,qBAD3B,IAKIkjE,EAHF9nE,0BAFF,MAEuB6nE,EAAE7nE,mBAFzB,IAKI8nE,EAFF/iE,wBAHF,MAGqB8iE,EAAE9iE,iBAHvB,IAKI+iE,EADF9iE,6BAJF,MAI0B6iE,EAAE7iE,sBAJ5B,EAMA,MAAO,CACLL,OAAQ1H,OAAOkC,OAAO,GAAI0oE,EAAEljE,OAAQmjE,EAAEnjE,QACtCC,uBACA5E,qBACA+E,mBACAC,0BAjBJ7H,EAAQa,SAqBR,SAAkBwC,GAChB,GAAY,MAARA,GAAgC,kBAATA,EACzB,MAAM,IAAIlC,MAAM,6BAGZ,IAAAypE,EAAOvnE,GAAQ,GAEnBoE,EAIEmjE,EAJFnjE,qBACA5E,EAGE+nE,EAHF/nE,mBACA+E,EAEEgjE,EAFFhjE,iBACAC,EACE+iE,EADF/iE,sBAEIL,EA9BR,SAAuCsI,EAAQ+6D,GAAY,GAAc,MAAV/6D,EAAgB,MAAO,GAAI,IAA2DrH,EAAKF,EAA5DuiE,EAAS,GAAQC,EAAajrE,OAAO0I,KAAKsH,GAAqB,IAAKvH,EAAI,EAAGA,EAAIwiE,EAAW7pE,OAAQqH,IAAOE,EAAMsiE,EAAWxiE,GAAQsiE,EAASx7B,QAAQ5mC,IAAQ,IAAaqiE,EAAOriE,GAAOqH,EAAOrH,IAAQ,OAAOqiE,EA8BzRE,CAA8BJ,EAAM,CAAC,uBAAwB,qBAAsB,mBAAoB,0BAEtH,GAA4B,MAAxBnjE,KAAkCA,aAAgCnD,KACpE,MAAM,IAAInD,MAAM,6DAGlB,GAA0B,MAAtB0B,KAAgCA,aAA8BgN,UAAkC,IAAvBhN,EAC3E,MAAM,IAAI1B,MAAM,qEAGlB,GAAwB,MAApByG,GAAwD,mBAArBA,EACrC,MAAM,IAAIzG,MAAM,6DAGlB,GAA6B,MAAzB0G,GAAkE,mBAA1BA,EAC1C,MAAM,IAAI1G,MAAM,kEAGlB,IAA8B,IAA1B0G,IAA2D,MAAxBJ,GAAsD,MAAtB5E,GACrE,MAAM,IAAI1B,MAAM,2GAGlB,MAAO,CACLqG,SACAC,qBAAsBA,QAAwByB,EAC9CrG,mBAA0C,MAAtBA,OAA6BqG,EAAYrG,EAC7D+E,iBAAsC,MAApBA,OAA2BsB,EAAYtB,EACzDC,sBAAgD,MAAzBA,OAAgCqB,EAAYrB,IA3DvE7H,EAAQwD,sBA+DR,SAA+BD,GAC7B,GAAIjB,MAAMC,QAAQgB,GAChB,OAAOA,EAAa0nE,QAAO,SAACC,EAAK5iE,EAAaC,GAE5C,OADA2iE,EAAI,IAAM3iE,GAAKD,EACR4iE,IACN,IACE,GAA4B,kBAAjB3nE,GAA6C,MAAhBA,EAC7C,OAAOA,QAAgB2F,EAGzB,MAAM,IAAI/H,MAAM,wE,iCC9ElBrB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQuB,QAUR,SAA+BE,EAAWd,EAAM0C,GAC9C,IACEoE,EAIEpE,EAJFoE,qBACA5E,EAGEQ,EAHFR,mBACA+E,EAEEvE,EAFFuE,iBACAC,EACExE,EADFwE,sBAEI9G,EA2HR,SAA4BJ,EAAMwqE,EAAYtjE,GAC5C,IAAM+K,GAAWu4D,EAAWv4D,SAAW,IAAI3R,SAEb,IAA1B4G,GACF+K,EAAQ/J,KAAK,gBAGfsiE,EAAarrE,OAAOkC,OAAO,CACzBkmD,4BAA4B,EAC5BE,yBAAyB,EACzB5wB,WAAY,UACX2zC,EAAY,CACbv4D,YAGF,IACE,OAAO,EAAIw4D,EAAQh8B,OAAOzuC,EAAMwqE,GAChC,MAAO/nE,GACP,IAAMkO,EAAMlO,EAAIkO,IAShB,MAPIA,IACFlO,EAAIua,SAAW,MAAO,EAAI0tD,EAAWtD,kBAAkBpnE,EAAM,CAC3DS,MAAOkQ,IAETlO,EAAIzC,KAAO,8BAGPyC,GAtJIkoE,CAAmB3qE,EAAM0C,EAAKmE,OAAQK,GAClDtH,EAAEgrE,qBAAqBxqE,EAAK,CAC1B6G,qBAEFnG,EAAUZ,SAASE,GACnB,IAAMyqE,EAAY,CAChB1jE,aAAc,GACd2jE,iBAAkB,IAAInnE,KAElBonE,EAAS,CACb5jE,aAAc,GACd2jE,iBAAkB,IAAInnE,KAElBqnE,EAAc,CAClB1rE,WAAOiJ,GAUT,OARA3I,EAAEqrE,SAAS7qE,EAAK8qE,EAA2B,CACzCL,YACAE,SACAC,cACAlkE,uBACA5E,qBACAgF,0BAEK/H,OAAOkC,OAAO,CACnBjB,OACC4qE,EAAY1rE,MAAQyrE,EAASF,IAzClC,IAAIjrE,EAAIC,EAAQ,KAEZ4qE,EAAU5qE,EAAQ,KAElB6qE,EAAa7qE,EAAQ,KAEnBsrE,EAAU,gBAsChB,SAASD,EAA0Bl7D,EAAMo7D,EAAWx6D,GAClD,IAAIy6D,EAEA9jE,EAEJ,GAAI3H,EAAE0rE,cAAct7D,GAAO,CACzB,IAAoC,IAAhCY,EAAM1J,sBACR,MAAM,IAAI1G,MAAM,oFAEhB+G,EAAOyI,EAAKzI,KAAKA,KACjBqJ,EAAMo6D,YAAY1rE,OAAQ,MAEvB,KAAgC,IAA5BsR,EAAMo6D,YAAY1rE,OAAmBsR,EAAM1J,sBACpD,OACK,GAAItH,EAAE2rE,aAAav7D,IAASpQ,EAAE4rE,gBAAgBx7D,GACnDzI,EAAOyI,EAAKzI,KACZqJ,EAAMo6D,YAAY1rE,OAAQ,MACrB,KAAIM,EAAE6rE,gBAAgBz7D,GAI3B,OAHAzI,EAAOyI,EAAK1Q,MACZsR,EAAMo6D,YAAY1rE,OAAQ,GAK5B,IAAKsR,EAAMo6D,YAAY1rE,QAAsC,MAA5BsR,EAAM1O,oBAA4D,MAA9B0O,EAAM9J,sBACzE,MAAM,IAAItG,MAAM,2GAGlB,IAAIoQ,EAAMo6D,YAAY1rE,QAAuC,IAA7BsR,EAAM1O,qBAAkC0O,EAAM1O,oBAAsBipE,GAAS1lE,KAAK8B,IAAoE,OAAvD8jE,EAAwBz6D,EAAM9J,uBAAiCukE,EAAsB7lE,IAAI+B,GAAxN,CAKA,IAIIlC,EAJJ,GADA+lE,EAAYA,EAAU9qE,SAIR8qE,EAAU7qE,OAAS,GAFzBmrE,EADR,EACE17D,KACAlI,EAFF,EAEEA,IAIElI,EAAE6rE,gBAAgBz7D,IAASpQ,EAAE0rE,cAAct7D,EAAM,CACnD+1C,aAAc,kBAEd1gD,EAAO,SACEzF,EAAE+rE,gBAAgBD,IAAmB,cAAR5jE,GAAuBlI,EAAEgsE,iBAAiBF,IAAmB,cAAR5jE,GAAuBlI,EAAEisE,WAAWH,IAAmB,WAAR5jE,EAC1IzC,EAAO,QACEzF,EAAEksE,sBAAsBJ,KAAY9rE,EAAE0rE,cAAct7D,IAC7D3K,EAAO,YACP+lE,EAAYA,EAAU9qE,MAAM,GAAI,IAEhC+E,EADSzF,EAAEqvC,YAAYj/B,IAASpQ,EAAE0rE,cAAct7D,GACzC,YAEA,QAGT,MAGIY,EAAMo6D,YAAY1rE,MAAQsR,EAAMm6D,OAASn6D,EAAMi6D,UAFjD1jE,EADF,EACEA,aACA2jE,EAFF,EAEEA,iBAEF3jE,EAAae,KAAK,CAChBX,OACAlC,OACA0mE,QAAS,SAAA3rE,GAAG,OAMhB,SAA0BA,EAAKgrE,GAG7B,IAFA,IAAIM,EAAStrE,EAEJwH,EAAI,EAAGA,EAAIwjE,EAAU7qE,OAAS,EAAGqH,IAAK,CAC7C,MAGIwjE,EAAUxjE,GAFZE,EADF,EACEA,IACAvB,EAFF,EAEEA,MAIAmlE,OADYnjE,IAAVhC,EACOmlE,EAAO5jE,GAEP4jE,EAAO5jE,GAAKvB,GAIzB,MAGI6kE,EAAUA,EAAU7qE,OAAS,GAF/BuH,EADF,EACEA,IACAvB,EAFF,EAEEA,MAEF,MAAO,CACLmlE,SACA5jE,MACAvB,SA7BgBylE,CAAiB5rE,EAAKgrE,IACtC9jE,YAAawjE,EAAiBtlE,IAAI+B,KAEpCujE,EAAiB5pD,IAAI3Z,M,8CCjHvBpI,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQuB,QAIR,SAA8B+B,EAAUC,GACtC,IAAMxC,EAAMR,EAAEqsE,UAAUtpE,EAASvC,KAE7BwC,IACFD,EAASwE,aAAaO,SAAQ,SAAAL,GAC5B,IAAKlI,OAAO4I,UAAUC,eAAeC,KAAKrF,EAAcyE,EAAYE,MAAO,CACzE,IAAM2kE,EAAkB7kE,EAAYE,KACpC,MAAM,IAAI/G,MAAJ,4CAA+C0rE,EAA/C,mOAE+DA,EAF/D,uDAG0BA,EAH1B,aAMV/sE,OAAO0I,KAAKjF,GAAc8E,SAAQ,SAAAI,GAChC,IAAKnF,EAASmoE,iBAAiBtlE,IAAIsC,GACjC,MAAM,IAAItH,MAAJ,gCAAmCsH,EAAnC,gBAaZ,OARAnF,EAASwE,aAAa7G,QAAQ6rE,UAAUzkE,SAAQ,SAAAL,GAC9C,KAUJ,SAA0BA,EAAajH,EAAKuH,GACtCN,EAAYC,cACV3F,MAAMC,QAAQ+F,GAChBA,EAAcA,EAAY7B,KAAI,SAAAkK,GAAI,OAAIpQ,EAAEqsE,UAAUj8D,MAClB,kBAAhBrI,IAChBA,EAAc/H,EAAEqsE,UAAUtkE,KAI9B,MAIIN,EAAY0kE,QAAQ3rE,GAHtBsrE,EADF,EACEA,OACA5jE,EAFF,EAEEA,IACAvB,EAHF,EAGEA,MAGF,GAAyB,WAArBc,EAAYhC,MAKd,GAJ2B,kBAAhBsC,IACTA,EAAc/H,EAAEwsE,cAAczkE,KAG3BA,IAAgB/H,EAAE6rE,gBAAgB9jE,GACrC,MAAM,IAAInH,MAAM,qCAEb,GAAyB,cAArB6G,EAAYhC,UACPkD,IAAVhC,EACGoB,EAEMhG,MAAMC,QAAQ+F,GACvBA,EAAc/H,EAAEysE,eAAe1kE,GACC,kBAAhBA,EAChBA,EAAc/H,EAAE0sE,oBAAoB1sE,EAAEimD,WAAWl+C,IACvC/H,EAAEqvC,YAAYtnC,KACxBA,EAAc/H,EAAE0sE,oBAAoB3kE,IANpCA,EAAc/H,EAAE2sE,iBASd5kE,IAAgBhG,MAAMC,QAAQ+F,KACL,kBAAhBA,IACTA,EAAc/H,EAAEimD,WAAWl+C,IAGxB/H,EAAEqvC,YAAYtnC,KACjBA,EAAc/H,EAAE0sE,oBAAoB3kE,UAIrC,GAAyB,UAArBN,EAAYhC,MAKrB,GAJ2B,kBAAhBsC,IACTA,EAAc/H,EAAEimD,WAAWl+C,SAGfY,IAAVhC,EAAqB,MAAM,IAAI/F,MAAM,2BAMzC,GAJ2B,kBAAhBmH,IACTA,EAAc/H,EAAEimD,WAAWl+C,IAGzBhG,MAAMC,QAAQ+F,GAChB,MAAM,IAAInH,MAAM,mDAIpB,QAAc+H,IAAVhC,EACF3G,EAAEM,SAASwrE,EAAQ5jE,EAAKH,GACxB+jE,EAAO5jE,GAAOH,MACT,CACL,IAAM66C,EAAQkpB,EAAO5jE,GAAKxH,QAED,cAArB+G,EAAYhC,MAA6C,UAArBgC,EAAYhC,KAC/B,MAAfsC,EACF66C,EAAMlxC,OAAO/K,EAAO,GACX5E,MAAMC,QAAQ+F,GACvB66C,EAAMlxC,OAAN,MAAAkxC,EAAK,CAAQj8C,EAAO,GAAf,SAAqBoB,KAE1B66C,EAAMj8C,GAASoB,EAGjB66C,EAAMj8C,GAASoB,EAGjB/H,EAAEM,SAASwrE,EAAQ5jE,EAAK06C,GACxBkpB,EAAO5jE,GAAO06C,GAzFZgqB,CAAiBnlE,EAAajH,EAAKwC,GAAgBA,EAAayE,EAAYE,OAAS,MACrF,MAAO+1B,GAEP,MADAA,EAAEtgB,QAAF,uCAA4C3V,EAAYE,KAAxD,cAAkE+1B,EAAEtgB,SAC9DsgB,MAGHl9B,GA9BT,IAAIR,EAAIC,EAAQ","file":"static/js/vendors-runtime-template.fb528985.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        if (result.error) {\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    const value = this.input.slice(start + 2, end);\n    const comment = {\n      type: \"CommentBlock\",\n      value: value,\n      start: start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}