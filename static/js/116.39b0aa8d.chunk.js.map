{"version":3,"sources":["../../../packages/react-menu/README.md"],"names":[],"mappings":"uHAAA,OAAe","file":"static/js/116.39b0aa8d.chunk.js","sourcesContent":["export default \"Menu 菜单\\n===\\n\\n为页面和功能提供导航的菜单列表。\\n\\n```jsx\\nimport { Menu } from 'uiw';\\n// or\\nimport Menu from '@uiw/react-menu';\\n```\\n\\n### 基本用法\\n\\n⚠️ 注意 `SubMenu` 父菜单为折叠菜单，当前 `SubMenu` 的子菜单弹出会因为 `overflow: hidde` 而无法显示。\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Row, Col } from 'uiw';\\n\\nconst Demo = () => (\\n  <Row justify=\\\"flex-start\\\" gutter={10}>\\n    <Col fixed>\\n      <Menu bordered>\\n        <Menu.Item icon=\\\"reload\\\" text=\\\"重新加载\\\" />\\n        <Menu.Divider />\\n        <Menu.Item icon=\\\"heart-on\\\" text=\\\"另存为\\\" active />\\n        <Menu.Item icon=\\\"appstore\\\" text=\\\"应用商城\\\" />\\n        <Menu.Item icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\" />\\n        <Menu.Item icon=\\\"setting\\\" text=\\\"偏好设置\\\" />\\n        <Menu.Divider />\\n        <Menu.Item icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n        <Menu.Item icon=\\\"map\\\" text=\\\"百度地图\\\" href=\\\"https://map.baidu.com\\\" target=\\\"_blank\\\" />\\n      </Menu>\\n    </Col>\\n    <Col fixed>\\n      <Menu bordered>\\n        <Menu.Divider title=\\\"编辑\\\" />\\n        <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n        <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n        <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n        <Menu.Item icon=\\\"delete\\\" disabled text=\\\"删除\\\" />\\n        <Menu.SubMenu icon=\\\"setting-o\\\" text=\\\"选项\\\" collapse>\\n          <Menu.Item icon=\\\"dot-chart\\\" text=\\\"显示边栏\\\" />\\n          <Menu.Item icon=\\\"date\\\" text=\\\"添加日期\\\" />\\n          <Menu.Item icon=\\\"tags-o\\\" text=\\\"标签名称\\\" />\\n        </Menu.SubMenu>\\n        <Menu.Divider title=\\\"其它\\\" />\\n        <Menu.SubMenu icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\">\\n          <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n          <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n          <Menu.Divider title=\\\"类别\\\" />\\n          <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n          <Menu.SubMenu icon=\\\"bar-chart\\\" text=\\\"报表\\\" collapse>\\n            <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n            <Menu.SubMenu icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\">\\n              <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n              <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n            </Menu.SubMenu>\\n          </Menu.SubMenu>\\n        </Menu.SubMenu>\\n        <Menu.SubMenu icon=\\\"setting\\\" disabled text=\\\"偏好设置\\\">\\n          <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n          <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n        </Menu.SubMenu>\\n        <Menu.Item icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n      </Menu>\\n    </Col>\\n    <Col fixed>\\n      <Menu bordered>\\n        <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n        <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n        <Menu.SubMenu icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\"\\n          overlayProps={{\\n            isOpen: true\\n          }}\\n        >\\n          <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n          <Menu.Divider title=\\\"类别\\\" />\\n          <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n          <Menu.SubMenu icon=\\\"bar-chart\\\" text=\\\"报表\\\" collapse>\\n            <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n            <Menu.SubMenu icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\">\\n              <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n              <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n            </Menu.SubMenu>\\n          </Menu.SubMenu>\\n        </Menu.SubMenu>\\n        <Menu.Item icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n      </Menu>\\n    </Col>\\n  </Row>\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 下拉菜单\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Popover, Button, Row, Col } from 'uiw';\\n\\nconst btnStl = {position: 'relative', width: 70 }\\nconst content = (\\n  <Menu>\\n    <Menu.Divider title=\\\"编辑\\\" />\\n    <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n    <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n    <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n    <Menu.Item icon=\\\"delete\\\" disabled text=\\\"删除\\\" />\\n    <Menu.Divider title=\\\"其它\\\" />\\n    <Menu.Item icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\" />\\n    <Menu.Item icon=\\\"setting\\\" disabled text=\\\"偏好设置\\\" />\\n    <Menu.Item icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n  </Menu>\\n)\\nconst Demo = () => (\\n  <div>\\n    <div style={{ position: 'relative' }}>\\n\\n      <Popover trigger=\\\"click\\\" placement=\\\"topLeft\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70 }}>TL</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"top\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70}}>Top</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"topRight\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70 }}>TR</Button>\\n      </Popover>\\n\\n    </div>\\n    <div style={{ position: 'relative', paddingTop: 10 }}>\\n\\n      <Popover trigger=\\\"click\\\" placement=\\\"leftTop\\\" content={content}>\\n        <Button style={{ ...btnStl }}>LT</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"rightTop\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 216 }}>RT</Button>\\n      </Popover>\\n\\n    </div>\\n    <div style={{ position: 'relative', paddingTop: 10 }}>\\n\\n      <Popover trigger=\\\"click\\\" placement=\\\"left\\\" content={content}>\\n        <Button style={{ ...btnStl }}>Left</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"right\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 216 }}>Right</Button>\\n      </Popover>\\n\\n    </div>\\n    <div style={{ position: 'relative', paddingTop: 10 }}>\\n\\n      <Popover trigger=\\\"click\\\" placement=\\\"leftBottom\\\" content={content}>\\n        <Button style={{ ...btnStl }}>LB</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"rightBottom\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 216 }}>RB</Button>\\n      </Popover>\\n\\n    </div>\\n    <div style={{ position: 'relative', paddingTop: 10 }}>\\n\\n      <Popover trigger=\\\"click\\\" placement=\\\"bottomLeft\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70 }}>BL</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"bottom\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70 }}>Bottom</Button>\\n      </Popover>\\n      <Popover trigger=\\\"click\\\" placement=\\\"bottomRight\\\" content={content}>\\n        <Button style={{ ...btnStl, left: 70 }}>BR</Button>\\n      </Popover>\\n\\n    </div>\\n  </div>\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 内嵌菜单\\n\\n通过设置 `overlayProps={ isOpen: true }`，让菜单默认展开。\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Row, Col } from 'uiw';\\n\\nconst Demo = () => (\\n  <Row justify=\\\"flex-start\\\" gutter={10}>\\n    <Col fixed>\\n      <Menu bordered style={{ maxWidth: 200 }}>\\n        <Menu.Item icon=\\\"delete\\\" disabled text=\\\"删除\\\" />\\n        <Menu.SubMenu icon=\\\"setting-o\\\" text=\\\"选项\\\" disabled collapse>\\n          <Menu.Item icon=\\\"dot-chart\\\" text=\\\"显示边栏\\\" />\\n          <Menu.Item icon=\\\"date\\\" text=\\\"添加日期\\\" />\\n          <Menu.Item icon=\\\"tags-o\\\" text=\\\"标签名称\\\" />\\n        </Menu.SubMenu>\\n        <Menu.Divider title=\\\"其它\\\" />\\n        <Menu.SubMenu\\n          icon=\\\"bar-chart\\\" text=\\\"每年2019年统计报表导出\\\" collapse\\n          // overlayProps={{ isOpen: true }}\\n        >\\n          <Menu.Item text=\\\"添加文件\\\" />\\n          <Menu.Item text=\\\"添加文件夹\\\" />\\n          <Menu.Divider title=\\\"类别\\\" />\\n          <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n          <Menu.SubMenu icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" collapse>\\n            <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n            <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n          </Menu.SubMenu>\\n        </Menu.SubMenu>\\n        <Menu.Item icon=\\\"setting\\\" disabled text=\\\"偏好设置\\\" />\\n        <Menu.Item icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n      </Menu>\\n    </Col>\\n  </Row>\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 主题\\n\\n内建了两套主题 `light`、`dark`，默认 `light`。\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Row, Col, Switch } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      theme: 'dark',\\n    }\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <Row justify=\\\"flex-start\\\" gutter={10}>\\n          <Col style={{ paddingBottom: 5 }}>\\n            <Switch\\n              checked\\n              style={{ marginRight: 10 }}\\n              onChange={(e) => {\\n                this.setState({ theme: e.target.checked ? 'dark' : 'light' });\\n              }}\\n            />\\n          </Col>\\n        </Row>\\n        <Row justify=\\\"flex-start\\\" gutter={10}>\\n          <Col fixed>\\n            <Menu theme={this.state.theme} bordered style={{ maxWidth: 200 }}>\\n              <Menu.Item icon=\\\"delete\\\" disabled text=\\\"删除\\\" />\\n              <Menu.SubMenu icon=\\\"setting-o\\\" text=\\\"选项\\\" disabled collapse>\\n                <Menu.Item icon=\\\"dot-chart\\\" text=\\\"显示边栏\\\" />\\n                <Menu.Item icon=\\\"date\\\" text=\\\"添加日期\\\" />\\n                <Menu.Item icon=\\\"tags-o\\\" text=\\\"标签名称\\\" />\\n              </Menu.SubMenu>\\n              <Menu.Divider title=\\\"其它\\\" />\\n              <Menu.Item active icon=\\\"map\\\" text=\\\"谷歌地图\\\" />\\n              <Menu.SubMenu icon=\\\"bar-chart\\\" text=\\\"每年2019年统计报表导出\\\">\\n                <Menu.Item text=\\\"添加文件\\\" />\\n                <Menu.Item text=\\\"添加文件夹\\\" />\\n                <Menu.Divider title=\\\"类别\\\" />\\n                <Menu.SubMenu icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" collapse>\\n                  <Menu.Item icon=\\\"file-add\\\" text=\\\"添加文件\\\" />\\n                  <Menu.Item icon=\\\"folder-add\\\" text=\\\"添加文件夹\\\" />\\n                </Menu.SubMenu>\\n                <Menu.Item icon=\\\"copy\\\" text=\\\"拷贝\\\" />\\n              </Menu.SubMenu>\\n              <Menu.Item icon=\\\"setting\\\" disabled text=\\\"偏好设置\\\" />\\n              <Menu.SubMenu icon=\\\"setting-o\\\" text=\\\"选项\\\" collapse>\\n                <Menu.Item icon=\\\"dot-chart\\\" text=\\\"显示边栏\\\" />\\n                <Menu.Item icon=\\\"date\\\" text=\\\"添加日期\\\" />\\n                <Menu.Item icon=\\\"tags-o\\\" text=\\\"标签名称\\\" />\\n              </Menu.SubMenu>\\n            </Menu>\\n          </Col>\\n        </Row>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 完整菜单展示\\n\\n包括点击选中效果，事件等操作，完整的实例展示。\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Row, Col, Switch } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      theme: 'light',\\n      menus: [\\n        { key: '1', icon: 'delete', label: '删除' },\\n        {\\n          icon: 'setting-o',\\n          label: '选项',\\n          childrend: [\\n            { key: '1-1', icon: 'dot-chart', label: '显示边栏' },\\n            { key: '1-2', icon: 'date', disabled: true, label: '添加日期' },\\n            { key: '1-3', icon: 'tags-o', label: '标签名称' },\\n          ],\\n        },\\n        { divider: true },\\n        { key: '2', icon: 'map', label: '谷歌地图' },\\n        {\\n          icon: 'bar-chart',\\n          label: '每年2019年统计报表导出',\\n          childrend: [\\n            { key: '2-1', label: '统计添加文件' },\\n            { key: '2-2', label: '统计添加文件夹' },\\n            { key: '2-3', icon: 'tags-o', label: '类别', divider: true },\\n            {\\n              icon: 'folder-add',\\n              label: '添加文件夹',\\n              childrend: [\\n                { key: '2-3-1', label: '添加文件夹' },\\n                { key: '2-3-2', label: '添加文件' },\\n                { key: '2-3-3', label: '添加文件夹' },\\n              ],\\n            },\\n          ],\\n        },\\n      ],\\n      active: '1',\\n    }\\n  }\\n\\n  onClickItem(key) {\\n    this.setState({ active: key });\\n  }\\n\\n  renderMenu(menus, k) {\\n    const { active } = this.state;\\n    const items = [];\\n    menus.forEach((item, key) => {\\n      if (item.childrend) {\\n        items.push(\\n          <Menu.SubMenu key={key} icon={item.icon} text={item.label} collapse\\n            // 参数 usePortal 容易出问题\\n            // overlayProps={{ usePortal: true }}\\n          >\\n            {this.renderMenu(item.childrend, `${k}${key}`)}\\n          </Menu.SubMenu>\\n        );\\n      } else if (item.divider) {\\n        items.push(<Menu.Divider key={`${k}${key}`} title={item.label} />);\\n      } else {\\n        items.push(\\n          <Menu.Item\\n            onClick={this.onClickItem.bind(this, item.key)}\\n            active={active === item.key} key={`${k}${key}`}\\n            icon={item.icon}\\n            text={item.label}\\n          />\\n        );\\n      }\\n    });\\n    return items;\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Row justify=\\\"flex-start\\\" gutter={10}>\\n          <Col style={{ paddingBottom: 5 }}>\\n            <Switch\\n              checked={this.state.theme === 'dark'}\\n              style={{ marginRight: 10 }}\\n              onChange={(e) => {\\n                this.setState({ theme: e.target.checked ? 'dark' : 'light' });\\n              }}\\n            />\\n          </Col>\\n        </Row>\\n        <Row justify=\\\"flex-start\\\" gutter={10}>\\n          <Col fixed>\\n            <Menu inlineIndent={13} theme={this.state.theme} bordered style={{ maxWidth: 200 }}>\\n              {this.renderMenu(this.state.menus, 'k')}\\n            </Menu>\\n          </Col>\\n        </Row>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 缩起内嵌菜单\\n\\n内嵌菜单可以被缩起/展开，需要 `SubMenu` 的参数 `collapse` 和 `inlineCollapsed` 配合使用。\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Menu, Row, Col, Icon, Button } from 'uiw';\\n\\nconst menusData = [\\n  { key: '1', icon: 'delete', label: '删除' },\\n  {\\n    icon: 'setting-o',\\n    label: '选项',\\n    childrend: [\\n      { key: '1-1', icon: 'dot-chart', label: '显示边栏' },\\n      { key: '1-2', icon: 'date', disabled: true, label: '添加日期' },\\n      { key: '1-3', icon: 'tags-o', label: '标签名称' },\\n    ],\\n  },\\n  { key: '2', icon: 'map', label: '谷歌地图' },\\n  {\\n    icon: 'bar-chart',\\n    label: '每年2019年统计报表导出',\\n    childrend: [\\n      { key: '2-1', label: '统计添加文件' },\\n      { key: '2-2', label: '统计添加文件夹' },\\n      { key: '2-3', icon: 'tags-o', label: '类别', divider: true },\\n      {\\n        icon: 'folder-add',\\n        label: '添加文件夹',\\n        childrend: [\\n          { key: '2-3-1', label: '添加文件夹' },\\n          { key: '2-3-2', label: '添加文件' },\\n          { key: '2-3-3', label: '添加文件夹' },\\n        ],\\n      },\\n    ],\\n  },\\n];\\n\\nconst Demo = () => {\\n  const [theme, setTheme] = React.useState('dark');\\n  const [collapse, setCollapse] = React.useState(false);\\n  const menuRef = React.useRef();\\n  function onClickItem() {\\n    console.log(';;;;>>>')\\n  }\\n  function renderMenu(menus) {\\n    const items = [];\\n    menus.forEach((item, key) => {\\n      if (item.childrend) {\\n        items.push(\\n          <Menu.SubMenu key={key} icon={item.icon} text={item.label}\\n            collapse={collapse}\\n          >\\n            {renderMenu(item.childrend)}\\n          </Menu.SubMenu>\\n        );\\n      } else if (item.divider) {\\n        items.push(<Menu.Divider key={key} title={item.label} />);\\n      } else {\\n        items.push(\\n          <Menu.Item\\n            onClick={onClickItem.bind(this, item.key)}\\n            key={key}\\n            icon={item.icon}\\n            text={item.label}\\n          />\\n        );\\n      }\\n    });\\n    return items;\\n  }\\n  return (\\n    <div style={{ maxWidth: 200}}>\\n      <Button type=\\\"primary\\\" size=\\\"small\\\" onClick={() => setCollapse(!collapse)} style={{ marginBottom: 10 }}>\\n        <Icon type={collapse ? 'menu-fold' : 'menu-unfold' } />\\n      </Button>\\n      <Switch\\n        size=\\\"large\\\"\\n        data-checked=\\\"light\\\"\\n        data-unchecked=\\\"dark\\\"\\n        checked={theme === 'dark'}\\n        style={{ marginLeft: 10, marginBottom: 10, display: 'inline-block' }}\\n        onChange={(e) => setTheme(e.target.checked ? 'dark' : 'light')}\\n      />\\n      <Menu\\n        theme={theme}\\n        ref={menuRef}\\n        inlineCollapsed={collapse}\\n        inlineIndent={13}\\n        bordered\\n        // style={{ maxWidth: 200 }}\\n      >\\n        {renderMenu(menusData)}\\n      </Menu>\\n    </div>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Menu.Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| className | 设置类的名称 | String | - |\\n| style | 元素的行内样式 | Object | - |\\n| inlineIndent | 菜单缩进宽度 | Number | `10` |\\n| theme | 主题颜色 | Enum{`light`, `dark`} | - |\\n| bordered | 是否有边框 | Boolean | `false` |\\n\\n\\n## Menu.Item.Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| icon | 菜单图标 [`<Icon />`](#/components/icon) 的 `type` 属性 | ReactNode/String | - |\\n| text | 菜单标题内容 | ReactNode | - |\\n| addonAfter | 菜单标题后面插入内容 | ReactNode | - |\\n| ~~isSubMenuItem~~ | 不可用，SubMenu 组件传递给 Item 组件的**标记**属性，这是一个内部参数。 | Boolean | - |\\n| tagName | 设置子节点标签名，默认 `<a />` 标签，也可以指定路由 [`<Link />`](https://reacttraining.com/react-router/web/api/Link) | String | `a` |\\n| active | 激活选中状态 | Boolean | `false` |\\n| inlineCollapsed | 菜单是否收起状态 | Boolean | `false` |\\n| disabled | 禁用状态 | Boolean | `false` |\\n\\n其它参数可根据 `tagName` 来设置，默认 `<a />` 标签时，可设置 `href=\\\"https://wwww.google.com\\\"` 或者 `target=\\\"_blank\\\"` 等参数，你可以设置 [react-router-dom](https://github.com/ReactTraining/react-router) 路由 `<Link>`，例如：\\n\\n```jsx\\nimport { Menu } from 'uiw';\\nimport { Link } from 'react-router-dom';\\n\\nconst Demo = () => {\\n  return (\\n    <Menu style={{ maxWidth: 200 }}>\\n      <Menu.Item tagName={Link} to=\\\"/home\\\" icon=\\\"reload\\\" text=\\\"跳转首页\\\" />\\n      <Menu.Item icon=\\\"map\\\" text=\\\"百度地图\\\" href=\\\"https://map.baidu.com\\\" target=\\\"_blank\\\" />\\n    </Menu>\\n  )\\n}\\n```\\n\\n## Menu.SubMenu.Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| icon | 菜单图标 [`<Icon />`](#/components/icon) 的 `type` 属性 | String | - |\\n| text | 菜单标题内容 | ReactNode | - |\\n| disabled | 禁用状态 | Boolean | `false` |\\n| collapse | 默认子菜单是 OverlayTrigger 的弹出层，通过设置 `collapse={true}` 变为~~折叠~~(弹出框式 `@v4.2.0+`)菜单  | Boolean | `false` |\\n| overlayProps | 对象将传递到 `OverlayTrigger` 组件，修改部分参数，相关参数参考 [`OverlayTrigger`](#/components/overlay-trigger) | Object | - |\\n\\n## Menu.Divider.Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| className | 设置类的名称 | String | - |\\n| style | 元素的行内样式 | Object | - |\\n| title | 标题 | String | - |\\n\";"],"sourceRoot":""}