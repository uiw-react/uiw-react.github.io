{"version":3,"file":"static/js/9961.9db8f620.chunk.js","mappings":"gHAAA","sources":["../../packages/react-tabs/README.md"],"sourcesContent":["export default \"Tabs 标签页\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-tabs/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-tabs.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-tabs)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-tabs.svg?label=@uiw/react-tabs)](https://npmjs.com/@uiw/react-tabs)\\n\\n标签页切换组件，分隔内容上有关联但属于不同类别的数据集合。\\n\\n```jsx\\nimport { Tabs } from 'uiw';\\n// or\\nimport Tabs from '@uiw/react-tabs';\\n```\\n\\n### 基本用法\\n\\n基础的、简洁的卡片式标签页。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Tabs } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <Tabs activeKey=\\\"1\\\" onTabClick={(tab, key, e) => {\\n          console.log(\\\"=>\\\", key, tab);\\n        }}>\\n          <Tabs.Pane label=\\\"用户管理\\\" key=\\\"1\\\">用户管理</Tabs.Pane>\\n          <Tabs.Pane label=\\\"配置管理\\\" key=\\\"2\\\">配置管理</Tabs.Pane>\\n          <Tabs.Pane sequence=\\\"fadeIn up\\\" label=\\\"角色管理\\\" key=\\\"3\\\">角色管理</Tabs.Pane>\\n          <Tabs.Pane label=\\\"大爷欢乐多\\\" key=\\\"4\\\"><div>大爷欢乐多22</div></Tabs.Pane>\\n      </Tabs>\\n    );\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 行样式\\n\\n基础的、简洁的卡片式标签页。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Tabs } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <Tabs type=\\\"line\\\" activeKey=\\\"1\\\" onTabClick={(tab, key, e) => {\\n          console.log(\\\"=>\\\", key, tab);\\n        }}>\\n        <Tabs.Pane label=\\\"用户管理\\\" key=\\\"1\\\">用户管理</Tabs.Pane>\\n        <Tabs.Pane disabled label=\\\"配置管理\\\" key=\\\"2\\\">配置管理</Tabs.Pane>\\n        <Tabs.Pane sequence=\\\"fadeIn up\\\" label=\\\"角色管理\\\" key=\\\"3\\\">角色管理</Tabs.Pane>\\n        <Tabs.Pane label=\\\"大爷欢乐多\\\" key=\\\"4\\\"><div>大爷欢乐多22</div></Tabs.Pane>\\n      </Tabs>\\n    );\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 卡片样式\\n\\n另一种样式的页签，不提供对应的垂直样式。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Tabs } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <Tabs type=\\\"card\\\" activeKey=\\\"1\\\" onTabClick={(tab, key, e) => {\\n          console.log(\\\"=>\\\", key, tab);\\n        }}>\\n        <Tabs.Pane label=\\\"用户管理\\\" key=\\\"1\\\">用户管理</Tabs.Pane>\\n        <Tabs.Pane label=\\\"配置管理\\\" key=\\\"2\\\">配置管理</Tabs.Pane>\\n        <Tabs.Pane disabled sequence=\\\"fadeIn up\\\" label=\\\"角色管理\\\" key=\\\"3\\\">角色管理</Tabs.Pane>\\n        <Tabs.Pane label=\\\"大爷欢乐多\\\" key=\\\"4\\\"><div>大爷欢乐多22</div></Tabs.Pane>\\n      </Tabs>\\n    );\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n\\n### 卡片样式\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Tabs, Divider } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeKey: '1',\\n    };\\n  }\\n  render() {\\n    const { activeKey } = this.state;\\n    return (\\n      <div>\\n        <Tabs\\n          type=\\\"card\\\"\\n          activeKey={activeKey}\\n          onTabClick={(activeKey, key, e) => {\\n            this.setState({ activeKey });\\n          }}\\n        >\\n          <Tabs.Pane label=\\\"用户管理\\\" key=\\\"1\\\" />\\n          <Tabs.Pane label=\\\"配置管理\\\" key=\\\"2\\\" />\\n          <Tabs.Pane disabled sequence=\\\"fadeIn up\\\" label=\\\"角色管理\\\" key=\\\"3\\\" />\\n          <Tabs.Pane label=\\\"大爷欢乐多\\\" key=\\\"4\\\" />\\n        </Tabs>\\n        <Divider />\\n        {activeKey === '1' && (\\n          <div>用户管理{activeKey}</div>\\n        )}\\n        {activeKey === '2' && (\\n          <div>配置管理{activeKey}</div>\\n        )}\\n        {activeKey === '3' && (\\n          <div>角色管理{activeKey}</div>\\n        )}\\n        {activeKey === '4' && (\\n          <div>大爷欢乐多{activeKey}</div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 超出收缩\\n\\n当pane过多,超出宽度度时,会将超出部分收缩到下拉选项\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Tabs } from 'uiw';\\n\\nclass Demo extends React.Component {\\n\\nrender() {\\n    const panes=[]\\n    for (let index = 0; index < 20; index++) {\\n      panes.push({label:`Tabs-${index}`,key:index})\\n    }\\n\\n    return (\\n      <Tabs\\n        style={{width:700}}\\n        activeKey=\\\"1\\\"\\n        onTabClick={(tab, key, e) => {\\n          console.log(\\\"=>\\\", key, tab);\\n        }}>\\n        {panes.map(item=>{\\n          return(\\n            <Tabs.Pane label={item.label} key={item.key}>{item.label}</Tabs.Pane>\\n          )\\n        })}\\n      </Tabs>\\n    );\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n\\n## Tabs.Porps\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------ |-------- |---------- |-------- |\\n| type | 页签的基本样式 | Enum{`line`、`card`、`default`} | `default` |\\n| activeKey | 当前激活 `tab` 面板的 `key` | String | - |\\n| onTabClick | `tab` 被点击的回调 | Function | `(item, key, e)=>{}` |\\n\\n## Tabs.Pane.Porps\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------ |-------- |---------- |-------- |\\n| label | 选项卡标题 | String,Node | - |\\n| key | 对应 activeKey | String,Node | - |\\n| disabled | 标签是禁用不可点击 | Boolean | `false` |\\n\";"],"names":[],"sourceRoot":""}