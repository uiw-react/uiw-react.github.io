(this["webpackJsonp@example/uiw"]=this["webpackJsonp@example/uiw"]||[]).push([[102],{1327:function(e,n,t){"use strict";t.r(n),n.default="DatePicker \u65e5\u671f\u9009\u62e9\u5668\n===\n\n\u663e\u793a\u4e00\u4e2a\u6708\u7684\u65e5\u5386\uff0c\u5e76\u5141\u8bb8\u7528\u6237\u9009\u62e9\u5355\u4e2a\u65e5\u671f\uff0c\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\u5728\u8868\u5355\u4e2d\u5e94\u7528\uff0c\u8bf7\u67e5\u770b\u57fa\u4e8e `DatePicker` \u7684 [`DateInput`](#/components/date-input) \u7ec4\u4ef6\u3002\n\n```jsx\nimport { DatePicker } from 'uiw';\n// or\nimport DatePicker from '@uiw/react-date-picker';\n```\n\n### \u57fa\u7840\u7528\u6cd5\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date('2019-02-26 02:00:00'),\n    };\n  }\n  onChange(selectedDate) {\n    console.log('selectedDate:', selectedDate)\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          date={this.state.date}\n          todayButton=\"\u4eca\u5929\"\n          onChange={this.onChange.bind(this)}\n        />\n        <DatePicker\n          showTime\n          date={this.state.date}\n          todayButton=\"\u4eca\u5929\"\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    )\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### \u663e\u793a\u65f6\u95f4\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n    };\n  }\n  onChange(selectedDate) {\n    console.log('selectedDate:', selectedDate)\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          showTime\n          date={this.state.date}\n          todayButton=\"\u4eca\u5929\"\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    )\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### \u8bbe\u7f6e\u672c\u5730\u8bed\u8a00\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n    };\n  }\n  onChange(selectedDate) {\n    console.log('selectedDate:', selectedDate)\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          todayButton=\"Today\"\n          weekTitle={['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']}\n          weekday={['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']}\n          monthLabel={['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']}\n          date={this.state.date}\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    )\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### \u521d\u59cb\u5c55\u793a\u65e5\u671f\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n    };\n  }\n  onChange(selectedDate) {\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          date={this.state.date}\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    );\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### \u7981\u7528\u65f6\u95f4\n\n\u901a\u8fc7 `disabledDate` \u65b9\u6cd5\u8bbe\u7f6e\uff0c\u4eca\u5929\u548c\u4eca\u5929\u4e4b\u524d\u4e0d\u80fd\u9009\u62e9\u3002\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nfunction disabledDate(currentDate) {\n  // \u4eca\u5929\u548c\u4eca\u5929\u4e4b\u524d\u4e0d\u80fd\u9009\u62e9\n  return currentDate && currentDate.valueOf() < Date.now();\n}\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n      // date: new Date(),\n    };\n  }\n  onChange(selectedDate) {\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          disabledDate={disabledDate}\n          date={this.state.date && new Date(this.state.date)}\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    );\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n## \u5b9a\u5236\u65e5\u5386\u5355\u5143\u683c\n\n\u4f7f\u7528 `renderDay` \u53ef\u4ee5\u81ea\u5b9a\u4e49\u65e5\u671f\u5355\u5143\u683c\u7684\u5185\u5bb9\u548c\u6837\u5f0f\u3002\n\n\x3c!--DemoStart,bgWhite,codePen,codeSandbox--\x3e\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DatePicker } from 'uiw';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n    };\n  }\n  onChange(selectedDate) {\n    this.setState({ date: selectedDate });\n  }\n  render() {\n    return (\n      <div>\n        <DatePicker\n          date={this.state.date}\n          renderDay={(day, props) => {\n            const style = {}\n            const week = props.date.getDay();\n            if (week === 0 && !props.prev && !props.next) {\n              style.border = '1px solid red';\n            }\n            return (\n              <div style={style}> {day} </div>\n            );\n          }}\n          onChange={this.onChange.bind(this)}\n        />\n        <div>{this.state.date ? String(this.state.date) : 'no date'}</div>\n      </div>\n    );\n  }\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n## DatePicker\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n|--------- |-------- |--------- |-------- |\n| date | \u9009\u4e2d\u7684\u65e5\u671f | Date | - |\n| panelDate | \u65e5\u5386\u9762\u677f\u9ed8\u8ba4\u5c55\u793a\u54ea\u4e00\u9875 | Date | `new Date` |\n| today | \u9ed8\u8ba4\u9ad8\u4eae\u5f53\u5929\u65e5\u671f | Date | `new Date` |\n| todayButton | \u5c55\u793a\u56de\u5230\u4eca\u5929\u6309\u94ae\uff0c\u548c\u63d0\u793a\u6587\u672c\u3002 | String | - |\n| showTime | \u589e\u52a0\u65f6\u95f4\u9009\u62e9\u529f\u80fd\uff0c\u5f53 showTime \u4e3a\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5176\u5c5e\u6027\u4f1a\u4f20\u9012\u7ed9\u5185\u5efa\u7684 [`<TimePicker />`](#/components/time-picker)\u3002 | Boolean/Object | - |\n| renderDay | \u589e\u52a0\u65f6\u95f4\u9009\u62e9\u529f\u80fd\u3002 `end`: \u5468\u672b\uff0c`prev`: \u4e0a\u4e2a\u6708\uff0c`next`\uff1a\u4e0b\u4e2a\u6708 `@3.0.0+` | Function(day, { end: bool, prev: bool, next: bool, date: Date }) | - |\n| disabledDate | \u4e0d\u53ef\u9009\u62e9\u7684\u65e5\u671f\uff0c\u51fd\u6570\u8fd4\u56de `true` \u5f53\u524d\u65e5\u671f\u88ab\u7981\u7528\u65e0\u6cd5\u9009\u62e9\u3002`end`: \u5468\u672b\uff0c`prev`: \u4e0a\u4e2a\u6708\uff0c`next`\uff1a\u4e0b\u4e2a\u6708 | Function(currentDate, { end: bool, prev: bool, next: bool }) | - |\n| onChange | \u9009\u62e9\u4e00\u5929\u65f6\u8c03\u7528\u3002 | (selectedDate?: Date, dateSource?: IDateSource) | - |\n| weekTitle | \u661f\u671f\u663e\u793a\u6587\u672c\u63d0\u793a | Array | \\[`\u661f\u671f\u5929`, `\u661f\u671f\u4e00`, `\u661f\u671f\u4e8c`, `\u661f\u671f\u4e09`, `\u661f\u671f\u56db`, `\u661f\u671f\u4e94`, `\u661f\u671f\u516d`\\] |\n| weekday | \u661f\u671f\u663e\u793a\u6587\u672c | Array | \\[`\u65e5`, `\u4e00`, `\u4e8c`, `\u4e09`, `\u56db`, `\u4e94`, `\u516d`\\] |\n| monthLabel | \u6708\u4efd\u663e\u793a\u6587\u672c | Array | \\[`\u4e00\u6708`, `\u4e8c\u6708`, `\u4e09\u6708`, `\u56db\u6708`, `\u4e94\u6708`, `\u516d\u6708`, `\u4e03\u6708`, `\u516b\u6708`, `\u4e5d\u6708`, `\u5341\u6708`, `\u5341\u4e00\u6708`, `\u5341\u4e8c\u6708`\\] |\n\n## DatePicker.showTime\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n|--------- |-------- |--------- |-------- |\n| defaultValue | \u9ed8\u8ba4\u65f6\u95f4 | Date | - |\n| disabled | \u7981\u7528\u5168\u90e8\u64cd\u4f5c | Boolean | `false` |\n| disabledHours | \u7981\u6b62\u9009\u62e9\u90e8\u5206\u5c0f\u65f6\u9009\u9879 | Function | - |\n| disabledMinutes | \u7981\u6b62\u9009\u62e9\u90e8\u5206\u5206\u949f\u9009\u9879 | Function | - |\n| disabledSeconds | \u7981\u6b62\u9009\u62e9\u90e8\u5206\u79d2\u9009\u9879 | Function | - |\n| format | \u7981\u6b62\u9009\u62e9\u90e8\u5206\u79d2\u9009\u9879 | Function | `HH:mm:ss` |\n| hourStep | \u7981\u6b62\u9009\u62e9\u90e8\u5206\u79d2\u9009\u9879 | Function | - |\n"}}]);
//# sourceMappingURL=102.32e9adf7.chunk.js.map