{"version":3,"sources":["../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js","../../../node_modules/@babel/plugin-transform-classes/lib/index.js","../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../../../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","beforeExpr","startsExpr","isLoop","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","name","options","token","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","length","CommentsParser","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","id","FlowScope","args","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","Array","isArray","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","fn","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","isDuplicate","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","_helperPluginUtils","_helperAnnotateAsPure","_interopRequireDefault","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","builtinClasses","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","isClassDeclaration","ClassDeclaration","ref","generateUidIdentifier","replaceWith","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","isArrowFunctionExpression","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","unshift","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","closureParams","closureArgs","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.f1a5f5d4.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types.braceL);\n\n    while (!this.match(types.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types._export);\n\n    if (this.eat(types._default)) {\n      if (this.match(types._function) || this.match(types._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types.eq)) {\n      this.eat(types.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types.bracketR);\n    this.expect(types.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types.parenL);\n\n    if (this.match(types._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types.braceBarL)) {\n      this.expect(types.braceBarL);\n      endDelim = types.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types.braceL);\n      endDelim = types.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types.ellipsis)) {\n      const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types.bracketR)) break;\n      this.expect(types.comma);\n    }\n\n    this.expect(types.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types._this;\n\n    if (lh.type === types.colon || lh.type === types.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types.parenL:\n        this.next();\n\n        if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          if (this.match(types.name) || this.match(types._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types.question && token !== types.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n            this.expect(types.parenR);\n            return type;\n          } else {\n            this.eat(types.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types.parenR);\n        this.expect(types.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types._true:\n      case types._false:\n        node.value = this.match(types._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types.bracketL) || this.match(types.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types.bracketL);\n\n      if (!optional && this.match(types.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types.questionDot, 2);\n      }\n\n      return this.finishOp(types.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.isIterator = true;\n      return super.readWord();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types.parenL);\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n    switch (this.state.type) {\n      case types.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types._true:\n      case types._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types.braceR)) {\n      if (this.eat(types.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types.braceR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma) && !this.isLineTerminator()) {\n      this.expect(types.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}