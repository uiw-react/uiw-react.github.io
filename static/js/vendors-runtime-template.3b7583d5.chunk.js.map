{"version":3,"sources":["../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","require","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","default","createTemplateBuilder","formatter","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","get","_literal","set","NO_PLACEHOLDER","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","has","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","key","prototype","hasOwnProperty","call","push","formatters","_builder","_default","bind","undefined","beforeExpr","startsExpr","isLoop","isAssign","TokenType","label","conf","this","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","node","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","preserveSpace","types","brace","templateQuasi","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","out","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","count","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","curContext","jsxReadToken","jsxReadWord","jsxReadString","prevType","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","tryParse","failState","clone","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","indexOf","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","hasPrecedingLineBreak","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","content","mods","char","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","parseModuleExpression","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","functionStatement","functionExpression","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","parent","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement"],"mappings":"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","file":"static/js/vendors-runtime-template.3b7583d5.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  templateQuasi: new TokContext(\"${\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  if (context.length > 1) {\n    context.pop();\n  }\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.dollarBraceL.updateContext = context => {\n  context.push(types.templateQuasi);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScopeFlags() & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr);\n  context.push(types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.braceL) {\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.push(types.brace);\n      } else if (curContext === types.j_expr) {\n        context.push(types.templateQuasi);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.length -= 2;\n      context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, {\n        start: 0\n      }, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      if (type === types$1._class || type === types$1._function) {\n        const curContext = this.curContext();\n\n        if (curContext === types.functionStatement || curContext === types.functionExpression) {\n          this.state.context.pop();\n        }\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}