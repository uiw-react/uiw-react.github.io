{"version":3,"sources":["../../../packages/react-dropdown/README.md"],"names":[],"mappings":"uHAAA,OAAe","file":"static/js/106.c6753690.chunk.js","sourcesContent":["export default \"Dropdown 下拉菜单\\n===\\n\\n向下弹出的列表。\\n\\n```jsx\\nimport { Dropdown } from 'uiw';\\n// or\\nimport Dropdown from '@uiw/react-dropdown';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Dropdown, Menu, ButtonGroup, Button, Divider, Icon } from 'uiw';\\n\\nconst menu = (\\n  <div>\\n    <Menu bordered style={{ minWidth: 120 }}>\\n      <Menu.Item icon=\\\"reload\\\" text=\\\"重新加载\\\" />\\n      <Menu.Item icon=\\\"heart-on\\\" text=\\\"另存为\\\" active />\\n      <Menu.Item icon=\\\"appstore\\\" text=\\\"应用商城\\\" />\\n      <Menu.Item icon=\\\"bar-chart\\\" text=\\\"月统计报表\\\" />\\n      <Menu.Item icon=\\\"setting\\\" text=\\\"偏好设置\\\" />\\n    </Menu>\\n  </div>\\n);\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Dropdown menu={menu}>\\n          <a href='#' onClick={e => e.preventDefault()}>\\n            鼠标经过出现菜单 <Icon type=\\\"down\\\" />\\n          </a>\\n        </Dropdown>\\n        <Dropdown trigger=\\\"click\\\" menu={menu}>\\n          <a href='#' onClick={e => e.preventDefault()}>\\n            点击我出现下拉菜单 <Icon type=\\\"down\\\" />\\n          </a>\\n        </Dropdown>\\n      </div>\\n    )\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 被禁用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Dropdown, Menu, ButtonGroup, Button } from 'uiw';\\n\\nconst menu = (\\n  <div>\\n    <Menu bordered style={{ maxWidth: 200 }}>\\n      <Menu.Item icon=\\\"reload\\\" text=\\\"重新加载\\\" />\\n      <Menu.Divider />\\n      <Menu.Item icon=\\\"heart-on\\\" text=\\\"另存为\\\" active />\\n      <Menu.Item icon=\\\"appstore\\\" text=\\\"应用商城\\\" />\\n      <Menu.Item icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\" />\\n      <Menu.Item icon=\\\"setting\\\" text=\\\"偏好设置\\\" />\\n    </Menu>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <div>\\n    <ButtonGroup style={{ marginRight: 5, display: 'inline-block' }}>\\n      <Button disabled icon=\\\"copy\\\">点击右边</Button>\\n      <Dropdown disabled trigger=\\\"click\\\" placement=\\\"bottomRight\\\" menu={menu}>\\n        <Button icon=\\\"more\\\" />\\n      </Dropdown>\\n    </ButtonGroup>\\n    <Dropdown disabled menu={menu}>\\n      <Button basic type=\\\"link\\\"> (超连接样式)link </Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"primary\\\">主要按钮</Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"success\\\">成功按钮</Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"warning\\\">警告按钮</Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"danger\\\">错误按钮</Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"light\\\">亮按钮</Button>\\n    </Dropdown>\\n    <Dropdown disabled menu={menu}>\\n      <Button type=\\\"dark\\\">暗按钮</Button>\\n    </Dropdown>\\n  </div>,\\n  _mount_\\n);\\n```\\n\\n### 弹出位置\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Dropdown, Menu, ButtonGroup, Button } from 'uiw';\\n\\nconst menu = (\\n  <div>\\n    <Menu bordered style={{ maxWidth: 200 }}>\\n      <Menu.Item icon=\\\"reload\\\" text=\\\"重新加载\\\" />\\n      <Menu.Divider />\\n      <Menu.Item icon=\\\"heart-on\\\" text=\\\"另存为\\\" active />\\n      <Menu.Item icon=\\\"appstore\\\" text=\\\"应用商城\\\" />\\n      <Menu.Item icon=\\\"bar-chart\\\" text=\\\"月统计报表导出\\\" />\\n      <Menu.Item icon=\\\"setting\\\" text=\\\"偏好设置\\\" />\\n    </Menu>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <div>\\n    <ButtonGroup style={{ marginRight: 5, display: 'inline-block' }}>\\n      <Button icon=\\\"copy\\\">top</Button>\\n      <Dropdown trigger=\\\"click\\\" placement=\\\"top\\\" menu={menu}>\\n        <Button icon=\\\"more\\\" />\\n      </Dropdown>\\n    </ButtonGroup>\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"topLeft\\\">\\n      <Button type=\\\"primary\\\">topLeft</Button>\\n    </Dropdown>\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"topRight\\\">\\n      <Button type=\\\"success\\\">topRight</Button>\\n    </Dropdown>\\n    <Divider />\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"bottomRight\\\">\\n      <Button type=\\\"light\\\">bottomRight</Button>\\n    </Dropdown>\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"bottom\\\">\\n      <Button type=\\\"warning\\\">bottom</Button>\\n    </Dropdown>\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"bottomLeft\\\">\\n      <Button type=\\\"danger\\\">bottomLeft</Button>\\n    </Dropdown>\\n    <Dropdown menu={menu} trigger=\\\"click\\\" placement=\\\"right\\\">\\n      <Button type=\\\"dark\\\">right</Button>\\n    </Dropdown>\\n  </div>,\\n  _mount_\\n);\\n```\\n\\n### 选择器\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Dropdown, Menu, Button, Icon } from 'uiw';\\n\\nfunction Select(props) {\\n  const { option, onChange } = props;\\n  const [open, setOpen] = React.useState(false);\\n  const [value, setValue] = React.useState(props.value);\\n  const label = option.find(item => value === item.value);\\n\\n  React.useEffect(() => {\\n    if (props.value !== value) {\\n      setValue(props.value);\\n    }\\n  }, [props.value]);\\n\\n  return (\\n    <Dropdown\\n      trigger=\\\"click\\\"\\n      onVisibleChange={(isOpen) => setOpen(isOpen)}\\n      isOpen={open}\\n      menu={\\n        <div>\\n          <Menu bordered style={{ minWidth: 120 }}>\\n            {option.map((item, idx) => {\\n              const active = value === item.value;\\n              return (\\n                <Menu.Item\\n                  key={idx}\\n                  active={active}\\n                  text={item.label}\\n                  onClick={(e) => {\\n                    setValue(item.value)\\n                    setOpen(false)\\n                    onChange && onChange(item.value, e)\\n                  }}\\n                />\\n              );\\n            })}\\n          </Menu>\\n        </div>\\n      }\\n    >\\n      <Button type=\\\"link\\\">{label.label}<Icon type={open ? 'up' : 'down'} /></Button>\\n    </Dropdown>\\n  )\\n}\\n\\nconst option = [\\n  { label: '往返', value: 1 },\\n  { label: '单程', value: 2 },\\n  { label: '联程', value: 3 },\\n  { label: 'Nomad', value: 4 },\\n];\\n\\nconst option2 = [\\n  { label: '经济舱', value: 1 },\\n  { label: '豪华经济舱', value: 2 },\\n  { label: '商务舱', value: 3 },\\n  { label: '头等舱', value: 4 },\\n];\\n\\nReactDOM.render(\\n  <div>\\n    <Select option={option} value={1} onChange={(item) => { console.log('item', item); }} />\\n    <Select option={option2} value={2} onChange={(item) => { console.log('item', item); }} />\\n  </div>,\\n  _mount_\\n);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| -------- | -------- | -------- | -------- |\\n| menu | 菜单 | [`<Menu>`](#/components/menu) | - |\\n| disabled | 菜单是否禁用 | Boolean | - |\\n| trigger[`<OverlayTrigger>`](#/components/overlay-trigger) | 悬停/点击弹出窗口 | Enum{`hover`, `click`, `focus`} | `hover` |\\n| placement[`<OverlayTrigger>`](#/components/overlay-trigger) | 指定弹出框位置，支持 12 个访问展示菜单。 | Enum{} | `bottomLeft` |\\n\\n更多属性文档请参考 [OverlayTrigger](#/components/overlay-trigger)。\";"],"sourceRoot":""}