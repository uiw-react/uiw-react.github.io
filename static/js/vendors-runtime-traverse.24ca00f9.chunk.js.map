{"version":3,"sources":["../../../node_modules/@babel/traverse/lib/context.js","../../../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../../../node_modules/@babel/traverse/node_modules/debug/src/common.js","../../../node_modules/@babel/traverse/node_modules/ms/index.js","../../../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../../../node_modules/@babel/traverse/lib/path/ancestry.js","../../../node_modules/@babel/traverse/lib/path/inference/index.js","../../../node_modules/@babel/traverse/lib/path/inference/inferers.js","../../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../../../node_modules/@babel/traverse/lib/path/replacement.js","../../../node_modules/@babel/traverse/lib/path/evaluation.js","../../../node_modules/@babel/traverse/lib/path/conversion.js","../../../node_modules/@babel/traverse/lib/path/introspection.js","../../../node_modules/@babel/traverse/lib/path/context.js","../../../node_modules/@babel/traverse/lib/path/removal.js","../../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../../../node_modules/@babel/traverse/lib/path/modification.js","../../../node_modules/@babel/traverse/lib/path/lib/hoister.js","../../../node_modules/@babel/traverse/lib/path/family.js","../../../node_modules/@babel/traverse/lib/path/comments.js","../../../node_modules/@babel/traverse/lib/visitors.js","../../../node_modules/@babel/traverse/lib/hub.js","../../../node_modules/@babel/traverse/lib/index.js","../../../node_modules/@babel/traverse/lib/path/index.js","../../../node_modules/@babel/traverse/lib/cache.js","../../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../../../node_modules/@babel/traverse/lib/scope/index.js","../../../node_modules/@babel/traverse/lib/scope/binding.js"],"names":["Object","defineProperty","exports","value","default","_path","require","t","TraversalContext","scope","opts","state","parentPath","this","queue","priorityQueue","node","enter","exit","type","keys","VISITOR_KEYS","length","obj","key","listKey","get","parent","container","path","notPriority","trap","Error","push","shouldVisit","create","visitQueue","visited","WeakSet","stop","resync","contexts","pushContext","process","has","add","visit","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","args","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","j","v","JSON","stringify","message","env","createDebug","prevTime","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","call","logFn","apply","selectColor","extend","enumerable","configurable","set","init","delimiter","newDebug","toNamespace","regexp","toString","substring","stack","disable","names","map","skips","join","enable","i","split","len","substr","name","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","ReferencedIdentifier","oldName","newName","Scope","bindingIdentifierEquals","binding","identifier","isMethod","computed","skip","skipKey","skipAllButComputedMethodKey","isVariableDeclaration","ids","getOuterBindingIdentifiers","Renamer","parentDeclar","maybeExportDeclar","isExportDeclaration","isExportDefaultDeclaration","id","block","find","isDeclaration","isFunctionExpression","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","traverse","removeOwnBinding","bindings","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","getFunctionParent","p","isFunction","getStatementParent","isStatement","isProgram","isFile","getEarliestCommonAncestorFrom","paths","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","indexOf","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declar","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","delete","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","types","type2","baseTypeStrictlyMatches","rightArg","left","right","isFlowBaseAnnotation","isGenericType","genericName","isGenericTypeAnnotation","isIdentifier","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","hasBinding","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","callee","TemplateLiteral","UnaryExpression","operator","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","pop","ParenthesizedExpression","AssignmentExpression","UpdateExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","ClassExpression","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","isReferenced","getBinding","functionConstantViolations","constantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","concat","violation","getTypeAnnotationBindingConstantViolations","functions","violations","slice","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","isUnaryExpression","isLiteral","typeValue","createTypeAnnotationBasedOnTypeof","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","_cache","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","loc","_codeFrame","codeFrameColumns","start","line","column","code","program","body","expression","_index","removeProperties","replaceWith","removed","_index2","nodePath","isNodeType","isExpression","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","ReferenceError","inList","validate","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","callExpression","hoistVariablesVisitor","completionRecords","getCompletionRecords","isExpressionStatement","loop","isLoop","uid","getData","generateDeclaredUidIdentifier","pushContainer","returnStatement","cloneNode","setData","assignmentExpression","arrowFunctionToExpression","needToAwaitFunction","hasType","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","Function","VariableDeclaration","kind","getBindingIdentifiers","exprs","declarations","evaluateTruthy","res","evaluate","confident","deoptPath","seen","Map","evaluateCached","undefined","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","isTemplateLiteral","evaluateQuasis","quasis","isTaggedTemplateExpression","isMemberExpression","object","property","quasi","testResult","isExpressionWrapper","isReferencedIdentifier","end","hasValue","NaN","prefix","argument","isClass","arg","isArrayExpression","arr","elems","elemValue","isObjectExpression","props","prop","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","context","func","global","_evaluate","raw","elem","cooked","expr","toComputedKey","isProperty","stringLiteral","ensureBlock","bodyNode","isBlockStatement","statements","stringPath","setup","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","isFunctionDeclaration","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","generateUidIdentifier","objectExpression","unshiftContainer","hub","addHelper","thisExpression","memberExpression","_helperFunctionName","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","isSuper","superBinding","getSuperBinding","superCall","argumentsBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","assignmentPath","op","tmp","binaryExpression","isUpdateExpression","updateExpr","computedKey","parts","numericLiteral","sequenceExpression","isClassMethod","superClass","supers","argsBinding","restElement","super","spreadElement","propName","fnBody","argsList","method","valueIdent","cacheKey","data","ThisExpression","JSXIdentifier","isJSXMemberExpression","isJSXOpeningElement","MemberExpression","MetaProperty","matchesPattern","pattern","allowPartial","isStatic","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","isLabeledStatement","STATEMENT_OR_BLOCK_KEYS","includes","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDeclaration","source","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","references","allStatus","referencePaths","executionOrderCheckedNodes","dangerous","_resolve","constant","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","getProgramParent","isExecutionUncertain","maxIndex","_call","fns","fn","then","_traverseFlags","isBlacklisted","isDenylisted","_this$opts$denylist","denylist","blacklist","shouldSkip","shouldStop","skipKeys","SHOULD_SKIP","SHOULD_STOP","noScope","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","updateSiblingKeys","REMOVED","isWhile","isSwitchCase","expressions","isBinary","insertBefore","nodes_","isExportNamedDeclaration","isJSXElement","isForStatement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","isPattern","assertExpression","temp","fromIndex","incrementBy","msg","verifiedNodes","hoist","hoister","_hoister","run","referenceVisitor","isJSXIdentifier","react","isCompatTag","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","hasOwnBinding","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","_blockHoist","getCompatibleScopes","attachTo","getAttachmentPath","declarator","variableDeclarator","variableDeclaration","attached","children","jsxExpressionContainer","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","getBindingIdentifierPaths","outerOnly","search","shift","_ids","declaration","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","label","unaryExpression","getStatementListCompletion","lastNormalCompletions","newContext","assign","statementCompletions","some","isDoExpression","isTryStatement","isCatchClause","isSwitchStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","comments","explode","verify","merge","visitors","states","wrapper","rootVisitor","visitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","virtualTypes","_exploded","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","FLIPPED_ALIAS_KEYS","deprecatedKey","DEPRECATED_KEYS","trace","alias","_verified","validateVisitorMethods","TYPES","visitorKey","TypeError","oldVisitor","newVisitor","newFn","checkPath","arguments","dest","src","Hub","_scope","_hub","_context","cache","_default","hasDenylistedType","cheap","traverseFast","clearNode","tree","denylistTypes","_debug","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath","isScope","def","SyntaxError","buildError","getPathLocation","targetNode","prototype","typeKey","virtualType","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","grandparent","isBinding","isForXStatement","isBlockScoped","isVar","isUser","isPure","isFlow","importKind","exportKind","isObjectPattern","await","_renamer","_binding","_globals","gatherNodeParts","isModuleDeclaration","isExportAllDeclaration","specifiers","isModuleSpecifier","local","properties","meta","openingElement","openingFragment","collectorVisitor","For","FOR_INIT_KEYS","registerBinding","Declaration","registerDeclaration","ForXStatement","ExportDeclaration","isClassDeclaration","reference","decl","LabeledStatement","getBlockParent","assignments","CatchClause","NOT_LOCAL_BINDING","params","param","labels","inited","globals","uids","crawling","cached","_parent","isKey","generateUid","toIdentifier","_generateUid","hasLabel","hasGlobal","hasReference","defaultName","generateUidBasedOnNode","isThisExpression","dontPush","generateUidIdentifierBasedOnNode","rename","sep","repeat","arrayLikeIsIterable","helperName","getLabel","registerLabel","specifier","reassign","bindingPath","declarators","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","isClassBody","elements","tag","isPureish","crawl","programParent","typeVisitors","addGlobal","ref","unique","blockHoist","dataKey","declarPath","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","parentHasBinding","hasUid","contextVariables","_this$parent","info","_this$getBinding2","builtin","Binding","referenced","clearValue","hasDeoptedValue"],"mappings":"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","file":"static/js/vendors-runtime-traverse.24ca00f9.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar t = require(\"@babel/types\");\n\nconst testing = process.env.NODE_ENV === \"test\";\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.trap) {\n      throw new Error(\"Infinite cycle detected\");\n    }\n\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n\n      if (testing && queue.length >= 10000) {\n        this.trap = true;\n      }\n\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = t.VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar t = require(\"@babel/types\");\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = require(\"@babel/types\");\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = require(\"@babel/types\");\n\nconst hoistVariablesVisitor = {\n  Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path) {\n    if (path.node.kind !== \"var\") return;\n    const bindings = path.getBindingIdentifiers();\n\n    for (const key of Object.keys(bindings)) {\n      path.scope.push({\n        id: bindings[key]\n      });\n    }\n\n    const exprs = [];\n\n    for (const declar of path.node.declarations) {\n      if (declar.init) {\n        exprs.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.id, declar.init)));\n      }\n    }\n\n    path.replaceWithMultiple(exprs);\n  }\n\n};\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  this.traverse(hoistVariablesVisitor);\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        const callee = this.get(\"callee\");\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  const callee = this.get(\"callee\");\n  callee.arrowFunctionToExpression();\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", t.FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    callee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(t.awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    callee.set(\"generator\", true);\n    this.replaceWith(t.yieldExpression(this.node, true));\n  }\n\n  return callee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? t.isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        t.assertExpression(node);\n        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) return records.concat(_getCompletionRecords(path, context));\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records = records.concat(breakCompletions);\n  }\n\n  records = records.concat(lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(t.unaryExpression(\"void\", t.numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  let completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n          newContext.shouldPopulateBreak = true;\n        } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions = completions.concat(lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions = completions.concat(statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions = completions.concat(statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions = completions.concat(statementCompletions);\n      } else {\n        completions = completions.concat(statementCompletions.filter(c => c.type === BREAK_COMPLETION));\n        lastNormalCompletions = statementCompletions.filter(c => c.type === NORMAL_COMPLETION);\n      }\n    }\n  } else if (paths.length) {\n    completions = completions.concat(_getCompletionRecords(paths[paths.length - 1], context));\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    records = records.concat(getStatementListCompletion(path.get(\"body\"), context));\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    records = completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    records = records.concat(getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    }));\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = require(\"@babel/types\");\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar t = require(\"@babel/types\");\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (t.isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;"],"sourceRoot":""}