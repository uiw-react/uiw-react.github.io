{"version":3,"sources":["../../../node_modules/@babel/traverse/lib/context.js","../../../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../../../node_modules/@babel/traverse/node_modules/debug/src/common.js","../../../node_modules/@babel/traverse/node_modules/ms/index.js","../../../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../../../node_modules/@babel/traverse/lib/path/ancestry.js","../../../node_modules/@babel/traverse/lib/path/inference/index.js","../../../node_modules/@babel/traverse/lib/path/inference/inferers.js","../../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../../../node_modules/@babel/traverse/lib/path/replacement.js","../../../node_modules/@babel/traverse/lib/path/evaluation.js","../../../node_modules/@babel/traverse/lib/path/conversion.js","../../../node_modules/@babel/traverse/lib/path/introspection.js","../../../node_modules/@babel/traverse/lib/path/context.js","../../../node_modules/@babel/traverse/lib/path/removal.js","../../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../../../node_modules/@babel/traverse/lib/path/modification.js","../../../node_modules/@babel/traverse/lib/path/lib/hoister.js","../../../node_modules/@babel/traverse/lib/path/family.js","../../../node_modules/@babel/traverse/lib/path/comments.js","../../../node_modules/@babel/traverse/lib/visitors.js","../../../node_modules/@babel/traverse/lib/hub.js","../../../node_modules/@babel/traverse/lib/index.js","../../../node_modules/@babel/traverse/lib/path/index.js","../../../node_modules/@babel/traverse/lib/cache.js","../../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../../../node_modules/@babel/traverse/lib/scope/index.js","../../../node_modules/@babel/traverse/lib/scope/binding.js"],"names":["Object","defineProperty","exports","value","default","_path","require","t","TraversalContext","scope","opts","state","parentPath","this","queue","priorityQueue","node","enter","exit","type","keys","VISITOR_KEYS","length","obj","key","listKey","get","parent","container","path","notPriority","push","shouldVisit","create","visitQueue","visited","WeakSet","stop","resync","contexts","pushContext","has","add","visit","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","args","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","j","v","JSON","stringify","message","env","createDebug","prevTime","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","call","logFn","apply","selectColor","extend","enumerable","configurable","set","init","delimiter","newDebug","toNamespace","regexp","toString","substring","Error","stack","disable","names","map","skips","join","enable","i","split","len","substr","name","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","ReferencedIdentifier","oldName","newName","Scope","bindingIdentifierEquals","binding","identifier","isMethod","computed","skip","skipKey","skipAllButComputedMethodKey","isVariableDeclaration","ids","getOuterBindingIdentifiers","Renamer","parentDeclar","maybeExportDeclar","isExportDeclaration","isExportDefaultDeclaration","id","block","find","isDeclaration","isFunctionExpression","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","traverse","removeOwnBinding","bindings","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","getFunctionParent","p","isFunction","getStatementParent","isStatement","isProgram","isFile","getEarliestCommonAncestorFrom","paths","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","indexOf","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declar","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","delete","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","types","type2","baseTypeStrictlyMatches","rightArg","left","right","isFlowBaseAnnotation","isGenericType","genericName","isGenericTypeAnnotation","isIdentifier","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","hasBinding","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","callee","TemplateLiteral","UnaryExpression","operator","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","pop","ParenthesizedExpression","AssignmentExpression","UpdateExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","ClassExpression","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","isReferenced","getBinding","functionConstantViolations","constantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","concat","violation","getTypeAnnotationBindingConstantViolations","functions","violations","slice","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","isUnaryExpression","isLiteral","typeValue","createTypeAnnotationBasedOnTypeof","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","_cache","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","loc","_codeFrame","codeFrameColumns","start","line","column","code","program","body","expression","_index","removeProperties","replaceWith","removed","_index2","nodePath","isNodeType","isExpression","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","ReferenceError","inList","validate","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","callExpression","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","isLoop","uid","getData","generateDeclaredUidIdentifier","pushContainer","returnStatement","cloneNode","setData","assignmentExpression","arrowFunctionToExpression","newCallee","needToAwaitFunction","hasType","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","Map","evaluateCached","undefined","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","isTemplateLiteral","evaluateQuasis","quasis","isTaggedTemplateExpression","isMemberExpression","object","property","quasi","testResult","isExpressionWrapper","isReferencedIdentifier","end","hasValue","NaN","prefix","argument","isClass","arg","isArrayExpression","arr","elems","elemValue","isObjectExpression","props","prop","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","context","func","global","_evaluate","raw","elem","cooked","expr","toComputedKey","isProperty","stringLiteral","ensureBlock","bodyNode","isBlockStatement","statements","stringPath","setup","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","isFunctionDeclaration","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","generateUidIdentifier","objectExpression","unshiftContainer","hub","addHelper","thisExpression","memberExpression","_helperFunctionName","fnPath","thisEnvFn","isClassProperty","static","inConstructor","kind","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","Function","child","ClassProperty","isSuper","superBinding","getSuperBinding","superCall","argumentsBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","assignmentPath","op","tmp","binaryExpression","isUpdateExpression","updateExpr","computedKey","parts","numericLiteral","sequenceExpression","isClassMethod","superClass","supers","argsBinding","restElement","super","spreadElement","propName","fnBody","argsList","method","valueIdent","cacheKey","data","ThisExpression","JSXIdentifier","isJSXMemberExpression","isJSXOpeningElement","MemberExpression","MetaProperty","matchesPattern","pattern","allowPartial","isStatic","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","isLabeledStatement","STATEMENT_OR_BLOCK_KEYS","includes","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDeclaration","source","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","references","allStatus","referencePaths","executionOrderCheckedNodes","dangerous","_resolve","constant","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","getProgramParent","isExecutionUncertain","maxIndex","_call","fns","fn","then","_traverseFlags","isBlacklisted","isDenylisted","_this$opts$denylist","denylist","blacklist","shouldSkip","shouldStop","skipKeys","SHOULD_SKIP","SHOULD_STOP","noScope","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","getBindingIdentifiers","removeBinding","_removalHooks","hooks","updateSiblingKeys","REMOVED","isWhile","isSwitchCase","declarations","expressions","isBinary","insertBefore","nodes_","isExportNamedDeclaration","isJSXElement","isForStatement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","isPattern","assertExpression","temp","fromIndex","incrementBy","msg","verifiedNodes","hoist","hoister","_hoister","run","referenceVisitor","isJSXIdentifier","react","isCompatTag","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","hasOwnBinding","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","_blockHoist","getCompatibleScopes","attachTo","getAttachmentPath","declarator","variableDeclarator","variableDeclaration","attached","children","jsxExpressionContainer","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","getBindingIdentifierPaths","outerOnly","search","shift","_ids","declaration","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","label","unaryExpression","getStatementListCompletion","lastNormalCompletions","newContext","assign","statementCompletions","some","isDoExpression","isTryStatement","isCatchClause","isSwitchStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","comments","explode","verify","merge","visitors","states","wrapper","rootVisitor","visitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","virtualTypes","_exploded","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","FLIPPED_ALIAS_KEYS","deprecatedKey","DEPRECATED_KEYS","trace","alias","_verified","validateVisitorMethods","TYPES","visitorKey","TypeError","oldVisitor","newVisitor","newFn","checkPath","arguments","dest","src","Hub","_scope","_hub","_context","cache","_default","hasDenylistedType","cheap","traverseFast","clearNode","tree","denylistTypes","_debug","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath","isScope","def","SyntaxError","buildError","getPathLocation","targetNode","prototype","typeKey","virtualType","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","grandparent","isBinding","isForXStatement","isBlockScoped","isVar","isUser","isPure","isFlow","importKind","exportKind","isObjectPattern","await","_renamer","_binding","_globals","gatherNodeParts","isModuleDeclaration","isExportAllDeclaration","specifiers","isModuleSpecifier","local","properties","meta","openingElement","openingFragment","collectorVisitor","For","FOR_INIT_KEYS","registerBinding","Declaration","registerDeclaration","ForXStatement","ExportDeclaration","isClassDeclaration","reference","decl","LabeledStatement","getBlockParent","assignments","CatchClause","NOT_LOCAL_BINDING","params","param","labels","inited","globals","uids","crawling","cached","_parent","isKey","generateUid","toIdentifier","_generateUid","hasLabel","hasGlobal","hasReference","defaultName","generateUidBasedOnNode","isThisExpression","dontPush","generateUidIdentifierBasedOnNode","rename","sep","repeat","arrayLikeIsIterable","helperName","getLabel","registerLabel","specifier","reassign","bindingPath","declarators","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","isClassBody","elements","tag","isPureish","crawl","programParent","typeVisitors","addGlobal","ref","unique","blockHoist","dataKey","declarPath","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","parentHasBinding","hasUid","contextVariables","_this$parent","info","_this$getBinding2","builtin","Binding","referenced","clearValue","hasDeoptedValue"],"mappings":"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","file":"static/js/vendors-runtime-traverse.4492bc58.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar t = require(\"@babel/types\");\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = t.VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar t = require(\"@babel/types\");\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = require(\"@babel/types\");\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", t.FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(t.awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(t.yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? t.isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        t.assertExpression(node);\n        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) return records.concat(_getCompletionRecords(path, context));\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records = records.concat(breakCompletions);\n  }\n\n  records = records.concat(lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(t.unaryExpression(\"void\", t.numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  let completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n          newContext.shouldPopulateBreak = true;\n        } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions = completions.concat(lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions = completions.concat(statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions = completions.concat(statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions = completions.concat(statementCompletions);\n      } else {\n        completions = completions.concat(statementCompletions.filter(c => c.type === BREAK_COMPLETION));\n        lastNormalCompletions = statementCompletions.filter(c => c.type === NORMAL_COMPLETION);\n      }\n    }\n  } else if (paths.length) {\n    completions = completions.concat(_getCompletionRecords(paths[paths.length - 1], context));\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    records = records.concat(getStatementListCompletion(path.get(\"body\"), context));\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    records = completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    records = records.concat(getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    }));\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = require(\"@babel/types\");\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar t = require(\"@babel/types\");\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (t.isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;"],"sourceRoot":""}