{"version":3,"sources":["../../../node_modules/@babel/traverse/lib/context.js","../../../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../../../node_modules/@babel/traverse/lib/path/ancestry.js","../../../node_modules/@babel/traverse/lib/path/inference/index.js","../../../node_modules/@babel/traverse/lib/path/inference/inferers.js","../../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../../../node_modules/@babel/traverse/lib/path/replacement.js","../../../node_modules/@babel/traverse/lib/path/evaluation.js","../../../node_modules/@babel/traverse/lib/path/conversion.js","../../../node_modules/@babel/traverse/lib/path/introspection.js","../../../node_modules/@babel/traverse/lib/path/context.js","../../../node_modules/@babel/traverse/lib/path/removal.js","../../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../../../node_modules/@babel/traverse/lib/path/modification.js","../../../node_modules/@babel/traverse/lib/path/lib/hoister.js","../../../node_modules/@babel/traverse/lib/path/family.js","../../../node_modules/@babel/traverse/lib/path/comments.js","../../../node_modules/@babel/traverse/lib/visitors.js","../../../node_modules/@babel/traverse/lib/hub.js","../../../node_modules/@babel/traverse/lib/index.js","../../../node_modules/@babel/traverse/lib/path/index.js","../../../node_modules/@babel/traverse/lib/cache.js","../../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../../../node_modules/@babel/traverse/lib/scope/index.js","../../../node_modules/@babel/traverse/lib/scope/binding.js"],"names":["Object","defineProperty","exports","value","default","obj","_path","require","__esModule","t","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","WeakMap","TraversalContext","scope","opts","state","parentPath","this","queue","priorityQueue","node","enter","exit","type","keys","VISITOR_KEYS","length","listKey","parent","container","path","notPriority","trap","Error","push","shouldVisit","create","visitQueue","visited","WeakSet","stop","resync","contexts","pushContext","process","add","visit","popContext","nodes","Array","isArray","visitMultiple","visitSingle","_interopRequireDefault","_helperSplitExportDeclaration","renameVisitor","ReferencedIdentifier","name","oldName","newName","Scope","bindingIdentifierEquals","binding","identifier","skip","isVariableDeclaration","ids","getOuterBindingIdentifiers","Renamer","parentDeclar","maybeExportDeclar","isExportDeclaration","isExportDefaultDeclaration","id","block","find","isDeclaration","isFunctionExpression","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","forEach","c","traverse","removeOwnBinding","bindings","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","getFunctionParent","p","isFunction","getStatementParent","isStatement","isProgram","isFile","getEarliestCommonAncestorFrom","paths","getDeepestCommonAncestorFrom","deepest","i","ancestries","earliest","indexOf","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","map","ancestry","unshift","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declar","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","delete","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","types","type2","baseTypeStrictlyMatches","rightArg","left","right","isFlowBaseAnnotation","isGenericType","genericName","isGenericTypeAnnotation","isIdentifier","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","init","isCallExpression","hasBinding","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","callee","TemplateLiteral","UnaryExpression","operator","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","pop","ParenthesizedExpression","AssignmentExpression","UpdateExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","ClassExpression","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","enumerable","_infererReference","buildMatchMemberExpression","resolve","is","returnType","isReferenced","getBinding","functionConstantViolations","constantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","concat","violation","getTypeAnnotationBindingConstantViolations","functions","violations","slice","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","isUnaryExpression","isLiteral","typeValue","createTypeAnnotationBasedOnTypeof","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","_cache","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","parse","err","loc","message","_codeFrame","codeFrameColumns","start","line","column","code","program","body","expression","_index","removeProperties","replaceWith","removed","_index2","nodePath","isNodeType","isExpression","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","ReferenceError","inList","validate","debug","toSequenceExpression","functionParent","isParentAsync","arrowFunctionExpression","blockStatement","callExpression","hoistVariablesVisitor","completionRecords","getCompletionRecords","isExpressionStatement","loop","isLoop","uid","getData","generateDeclaredUidIdentifier","pushContainer","returnStatement","cloneNode","setData","assignmentExpression","arrowFunctionToExpression","hasType","FUNCTION_TYPES","awaitExpression","replaceInline","_containerInsertAfter","Function","VariableDeclaration","kind","getBindingIdentifiers","exprs","declarations","evaluateTruthy","res","evaluate","confident","deoptPath","seen","Map","evaluateCached","undefined","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","val","isSequenceExpression","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","isTemplateLiteral","evaluateQuasis","quasis","isTaggedTemplateExpression","isMemberExpression","object","property","quasi","testResult","isExpressionWrapper","isReferencedIdentifier","end","hasValue","NaN","prefix","argument","isClass","arg","isArrayExpression","arr","elems","elemValue","isObjectExpression","props","prop","isObjectMethod","isSpreadElement","computed","wasConfident","leftConfident","rightConfident","Math","pow","context","func","global","args","apply","_evaluate","raw","str","elem","cooked","expr","String","toComputedKey","isProperty","isMethod","stringLiteral","ensureBlock","bodyNode","isBlockStatement","statements","stringPath","setup","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","isFunctionDeclaration","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","thisBinding","checkBinding","generateUidIdentifier","objectExpression","unshiftContainer","hub","addHelper","thisExpression","memberExpression","_helperFunctionName","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","isSuper","superBinding","getSuperBinding","superCall","argumentsBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","assignmentPath","op","tmp","binaryExpression","isUpdateExpression","updateExpr","computedKey","parts","numericLiteral","sequenceExpression","isClassMethod","superClass","supers","argsBinding","restElement","super","spreadElement","propName","fnBody","argsList","method","valueIdent","cacheKey","data","ThisExpression","JSXIdentifier","isJSXMemberExpression","isJSXOpeningElement","MemberExpression","MetaProperty","matchesPattern","pattern","allowPartial","isStatic","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","isLabeledStatement","STATEMENT_OR_BLOCK_KEYS","includes","referencesImport","moduleSource","importName","isImportDeclaration","source","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","references","allStatus","referencePaths","executionOrderCheckedNodes","dangerous","_resolve","constant","ret","isTypeCastExpression","targetKey","targetName","match","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","getProgramParent","isExecutionUncertain","maxIndex","_call","fns","fn","then","_traverseFlags","isBlacklisted","isDenylisted","_this$opts$denylist","denylist","blacklist","shouldSkip","shouldStop","skipKeys","skipKey","SHOULD_SKIP","SHOULD_STOP","noScope","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","splice","updateSiblingKeys","REMOVED","self","isWhile","isSwitchCase","expressions","isBinary","insertBefore","nodes_","isExportNamedDeclaration","isJSXElement","isForStatement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","isPattern","assertExpression","temp","fromIndex","incrementBy","msg","verifiedNodes","hoist","hoister","_hoister","run","referenceVisitor","isJSXIdentifier","react","isCompatTag","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","hasOwnBinding","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","_blockHoist","getCompatibleScopes","attachTo","getAttachmentPath","declarator","variableDeclarator","variableDeclaration","attached","children","jsxExpressionContainer","getOpposite","addCompletionRecords","isDoExpression","isTryStatement","isCatchClause","isSwitchStatement","isLastCaseWithConsequent","consequent","breakStatement","findBreak","prevSibling","getPrevSibling","buildUndefinedNode","statementFinder","statement","some","completionRecordForSwitch","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","split","_getKey","_getPattern","_","part","duplicates","getBindingIdentifierPaths","outerOnly","search","shift","_ids","declaration","getOuterBindingIdentifierPaths","_findBreak","_findBreak2","isBreakStatement","trailing","trailingComments","leading","leadingComments","prev","next","hasPrev","Boolean","hasNext","addComments","addComment","content","comments","explode","verify","merge","visitors","states","wrapper","rootVisitor","visitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","virtualTypes","_exploded","nodeType","shouldIgnoreKey","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","FLIPPED_ALIAS_KEYS","deprecratedKey","DEPRECATED_KEYS","console","trace","alias","assign","_verified","validateVisitorMethods","TYPES","visitorKey","TypeError","oldVisitor","newVisitor","newFn","toString","checkPath","arguments","dest","src","Hub","_scope","_hub","_context","_default","hasDenylistedType","cheap","traverseFast","clearNode","tree","denylistTypes","_debug","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath","isScope","def","SyntaxError","buildError","join","enabled","getPathLocation","v","targetNode","typeKey","virtualType","clear","clearPath","clearScope","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","grandparent","isBinding","isForXStatement","isBlockScoped","isVar","isUser","isPure","isFlow","importKind","exportKind","isObjectPattern","await","_renamer","_binding","_globals","gatherNodeParts","isModuleDeclaration","isExportAllDeclaration","specifiers","isModuleSpecifier","local","properties","meta","openingElement","openingFragment","namespace","collectorVisitor","For","FOR_INIT_KEYS","registerBinding","Declaration","registerDeclaration","ForXStatement","ExportDeclaration","isClassDeclaration","reference","decl","LabeledStatement","addGlobal","getBlockParent","assignments","Block","bodyPath","CatchClause","NOT_LOCAL_BINDING","params","param","labels","inited","globals","uids","crawling","cached","generateUid","toIdentifier","replace","_generateUid","hasLabel","hasGlobal","hasReference","defaultName","generateUidBasedOnNode","isThisExpression","dontPush","generateUidIdentifierBasedOnNode","rename","sep","repeat","log","allowArrayLike","helperName","getLabel","label","registerLabel","specifier","unaryExpression","reassign","bindingPath","declarators","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","isClassBody","elements","tag","isPureish","crawl","programParent","ref","unique","blockHoist","dataKey","declarPath","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","parentHasBinding","hasUid","contextVariables","_this$parent","info","_this$getBinding2","builtin","Binding","referenced","clearValue","hasDeoptedValue"],"mappings":"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","file":"static/js/vendors-runtime-traverse.671d1989.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"./path\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst testing = process.env.NODE_ENV === \"test\";\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys == null ? void 0 : keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.trap) {\n      throw new Error(\"Infinite cycle detected\");\n    }\n\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n\n      if (testing && queue.length >= 10000) {\n        this.trap = true;\n      }\n\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = _interopRequireDefault(require(\"../binding\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = _interopRequireWildcard(require(\"./inferers\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) == null ? void 0 : _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _infererReference = _interopRequireDefault(require(\"./inferer-reference\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _index2 = _interopRequireDefault(require(\"./index\"));\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst hoistVariablesVisitor = {\n  Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path) {\n    if (path.node.kind !== \"var\") return;\n    const bindings = path.getBindingIdentifiers();\n\n    for (const key of Object.keys(bindings)) {\n      path.scope.push({\n        id: bindings[key]\n      });\n    }\n\n    const exprs = [];\n\n    for (const declar of path.node.declarations) {\n      if (declar.init) {\n        exprs.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.id, declar.init)));\n      }\n    }\n\n    path.replaceWithMultiple(exprs);\n  }\n\n};\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  this.traverse(hoistVariablesVisitor);\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        const callee = this.get(\"callee\");\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  const callee = this.get(\"callee\");\n  callee.arrowFunctionToExpression();\n\n  if (isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES)) {\n    callee.set(\"async\", true);\n    this.replaceWith(t.awaitExpression(this.node));\n  }\n\n  return callee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding == null ? void 0 : binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, specCompliant, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (specCompliant) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, specCompliant = false, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || specCompliant) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (!specCompliant || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (specCompliant) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) return false;\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _index2 = require(\"./index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = _interopRequireWildcard(require(\"./index\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) == null ? void 0 : _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = _interopRequireDefault(require(\"./lib/hoister\"));\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        t.assertExpression(node);\n        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, paths) {\n  if (path) return paths.concat(path.getCompletionRecords());\n  return paths;\n}\n\nfunction findBreak(statements) {\n  let breakStatement;\n\n  if (!Array.isArray(statements)) {\n    statements = [statements];\n  }\n\n  for (const statement of statements) {\n    if (statement.isDoExpression() || statement.isProgram() || statement.isBlockStatement() || statement.isCatchClause() || statement.isLabeledStatement()) {\n      breakStatement = findBreak(statement.get(\"body\"));\n    } else if (statement.isIfStatement()) {\n      var _findBreak;\n\n      breakStatement = (_findBreak = findBreak(statement.get(\"consequent\"))) != null ? _findBreak : findBreak(statement.get(\"alternate\"));\n    } else if (statement.isTryStatement()) {\n      var _findBreak2;\n\n      breakStatement = (_findBreak2 = findBreak(statement.get(\"block\"))) != null ? _findBreak2 : findBreak(statement.get(\"handler\"));\n    } else if (statement.isBreakStatement()) {\n      breakStatement = statement;\n    }\n\n    if (breakStatement) {\n      return breakStatement;\n    }\n  }\n\n  return null;\n}\n\nfunction completionRecordForSwitch(cases, paths) {\n  let isLastCaseWithConsequent = true;\n\n  for (let i = cases.length - 1; i >= 0; i--) {\n    const switchCase = cases[i];\n    const consequent = switchCase.get(\"consequent\");\n    let breakStatement = findBreak(consequent);\n\n    if (breakStatement) {\n      while (breakStatement.key === 0 && breakStatement.parentPath.isBlockStatement()) {\n        breakStatement = breakStatement.parentPath;\n      }\n\n      const prevSibling = breakStatement.getPrevSibling();\n\n      if (breakStatement.key > 0 && (prevSibling.isExpressionStatement() || prevSibling.isBlockStatement())) {\n        paths = addCompletionRecords(prevSibling, paths);\n        breakStatement.remove();\n      } else {\n        breakStatement.replaceWith(breakStatement.scope.buildUndefinedNode());\n        paths = addCompletionRecords(breakStatement, paths);\n      }\n    } else if (isLastCaseWithConsequent) {\n      const statementFinder = statement => !statement.isBlockStatement() || statement.get(\"body\").some(statementFinder);\n\n      const hasConsequent = consequent.some(statementFinder);\n\n      if (hasConsequent) {\n        paths = addCompletionRecords(consequent[consequent.length - 1], paths);\n        isLastCaseWithConsequent = false;\n      }\n    }\n  }\n\n  return paths;\n}\n\nfunction getCompletionRecords() {\n  let paths = [];\n\n  if (this.isIfStatement()) {\n    paths = addCompletionRecords(this.get(\"consequent\"), paths);\n    paths = addCompletionRecords(this.get(\"alternate\"), paths);\n  } else if (this.isDoExpression() || this.isFor() || this.isWhile()) {\n    paths = addCompletionRecords(this.get(\"body\"), paths);\n  } else if (this.isProgram() || this.isBlockStatement()) {\n    paths = addCompletionRecords(this.get(\"body\").pop(), paths);\n  } else if (this.isFunction()) {\n    return this.get(\"body\").getCompletionRecords();\n  } else if (this.isTryStatement()) {\n    paths = addCompletionRecords(this.get(\"block\"), paths);\n    paths = addCompletionRecords(this.get(\"handler\"), paths);\n  } else if (this.isCatchClause()) {\n    paths = addCompletionRecords(this.get(\"body\"), paths);\n  } else if (this.isSwitchStatement()) {\n    paths = completionRecordForSwitch(this.get(\"cases\"), paths);\n  } else {\n    paths.push(this);\n  }\n\n  return paths;\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./path/lib/virtual-types\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecratedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecratedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecratedKey}`);\n      aliases = [deprecratedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = _interopRequireDefault(require(\"./context\"));\n\nvar visitors = _interopRequireWildcard(require(\"./visitors\"));\n\nexports.visitors = visitors;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar cache = _interopRequireWildcard(require(\"./cache\"));\n\nvar _path = _interopRequireDefault(require(\"./path\"));\n\nvar _scope = _interopRequireDefault(require(\"./scope\"));\n\nvar _hub = _interopRequireDefault(require(\"./hub\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes == null ? void 0 : denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./lib/virtual-types\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _scope = _interopRequireDefault(require(\"../scope\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _cache = require(\"../cache\");\n\nvar _generator = _interopRequireDefault(require(\"@babel/generator\"));\n\nvar NodePath_ancestry = _interopRequireWildcard(require(\"./ancestry\"));\n\nvar NodePath_inference = _interopRequireWildcard(require(\"./inference\"));\n\nvar NodePath_replacement = _interopRequireWildcard(require(\"./replacement\"));\n\nvar NodePath_evaluation = _interopRequireWildcard(require(\"./evaluation\"));\n\nvar NodePath_conversion = _interopRequireWildcard(require(\"./conversion\"));\n\nvar NodePath_introspection = _interopRequireWildcard(require(\"./introspection\"));\n\nvar NodePath_context = _interopRequireWildcard(require(\"./context\"));\n\nvar NodePath_removal = _interopRequireWildcard(require(\"./removal\"));\n\nvar NodePath_modification = _interopRequireWildcard(require(\"./modification\"));\n\nvar NodePath_family = _interopRequireWildcard(require(\"./family\"));\n\nvar NodePath_comments = _interopRequireWildcard(require(\"./comments\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst debug = (0, _debug.default)(\"babel\");\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = _interopRequireDefault(require(\"./lib/renamer\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _binding = _interopRequireDefault(require(\"./binding\"));\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _cache = require(\"../cache\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n\n    if (path.isExportDeclaration() && path.get(\"declaration\").isDeclaration()) {\n      return;\n    }\n\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getProgramParent().addGlobal(path.node);\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  Block(path) {\n    const paths = path.get(\"body\");\n\n    for (const bodyPath of paths) {\n      if (bodyPath.isFunctionDeclaration()) {\n        path.scope.getBlockParent().registerDeclaration(bodyPath);\n      }\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    const parent = this.path.findParent(p => p.isScope());\n    return parent == null ? void 0 : parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, allowArrayLike) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if ((binding == null ? void 0 : binding.constant) && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (allowArrayLike) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n\n    if (path.isFunction()) {\n      if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n        this.registerBinding(\"local\", path.get(\"id\"), path);\n      }\n\n      const params = path.get(\"params\");\n\n      for (const param of params) {\n        this.registerBinding(\"param\", param);\n      }\n    }\n\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if (((_previousPath = previousPath) == null ? void 0 : _previousPath.isPattern()) && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.default.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;"],"sourceRoot":""}