{"version":3,"sources":["../../../node_modules/remark-parse/index.js"],"names":["module","exports","options","self","this","Parser","doc","fromMarkdown","Object","assign","data","extensions","mdastExtensions","require"],"mappings":"oHAEAA,EAAOC,QAIP,SAAeC,GACb,IAAIC,EAAOC,KAEXA,KAAKC,OAEL,SAAeC,GACb,OAAOC,EACLD,EACAE,OAAOC,OAAO,GAAIN,EAAKO,KAAK,YAAaR,EAAS,CAIhDS,WAAYR,EAAKO,KAAK,wBAA0B,GAChDE,gBAAiBT,EAAKO,KAAK,2BAA6B,QAfhE,IAAIH,EAAeM,EAAQ","file":"static/js/vendors-remark.67c6ddca.chunk.js","sourcesContent":["'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n"],"sourceRoot":""}