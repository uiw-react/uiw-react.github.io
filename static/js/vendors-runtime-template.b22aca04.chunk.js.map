{"version":3,"sources":["../../../node_modules/@babel/template/lib/formatters.js","../../../node_modules/@babel/template/lib/builder.js","../../../node_modules/@babel/template/lib/string.js","../../../node_modules/@babel/highlight/lib/index.js","../../../node_modules/@babel/template/lib/literal.js","../../../node_modules/@babel/template/lib/index.js","../../../node_modules/@babel/parser/lib/index.js","../../../node_modules/@babel/code-frame/lib/index.js","../../../node_modules/@babel/template/lib/options.js","../../../node_modules/@babel/template/lib/parse.js","../../../node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","jsTokensNs","_helperValidatorIdentifier","_chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","matchToToken","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","formatters","_builder","_default","bind","undefined","beforeExpr","startsExpr","isLoop","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","node","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","id","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","tryParse","failState","clone","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","oldInAbstractClass","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","n","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","parent","update","ExpressionErrors","Node","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","computed","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwait","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement"],"mappings":"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","file":"static/js/vendors-runtime-template.b22aca04.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar jsTokensNs = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const {\n    matchToToken\n  } = jsTokensNs;\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokensNs.default.exec(text)) {\n      const token = matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      return this.parseAwait(startPos, startLoc);\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"],"sourceRoot":""}