{"version":3,"file":"static/js/766.254f786a.chunk.js","mappings":"+GAAA","sources":["../../packages/react-search-tree/README.md"],"sourcesContent":["export default \"SearchTree 带搜索的Tree选择控件\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-search-tree/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-search-tree.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-search-tree)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-search-tree.svg?label=@uiw/react-search-tree)](https://npmjs.com/@uiw/react-search-tree)\\n\\n使用树选择控件可以完整展现其中的层级关系，并具有选中状态。新组件 v4.11.7+ 支持。\\n\\n```jsx\\nimport { SearchTree } from 'uiw';\\n// or\\nimport SearchTree from '@uiw/react-search-tree';\\n```\\n\\n### 基础实例\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {  SearchTree } from 'uiw';\\n\\nconst data = [\\n  {\\n    label: '上海市',\\n    key: 1,\\n    children:[\\n      { label: '黄浦区', key: 2 },\\n      { label: '卢湾区', key: 3 },\\n      {\\n        label: '徐汇区',\\n        key: 4,\\n        children:[\\n          { label: '半淞园路街道', key: 6 },\\n          { label: '南京东路街道', key: 7 },\\n          { label: '外滩街道', key: 8 },\\n        ]\\n      },\\n    ]\\n  },\\n  {\\n    label: '北京市',\\n    key: 9,\\n    children:[\\n      { label: '东城区', key: 10 },\\n      { label: '西城区', key: 11 },\\n      {\\n        label: '崇文区',\\n        key: 12,\\n        children:[\\n          { label: '东花市街道', key: 13 },\\n          { label: '体育馆路街道', key: 14 },\\n          { label: '前门街道', key: 15 },\\n        ]\\n      },\\n    ]\\n  },\\n  { label: '澳门', key: 16 },\\n];\\n\\nconst datas =[\\n  { label: '上海市',  key: 0 },\\n  {\\n    label: '北京市',  key: 1,\\n    children:[\\n      { label: '东城区', key: 10 },\\n   ]\\n  },\\n  { label: '成都市',  key: 2 },\\n]\\n\\nconst Demo = () => {\\n\\nconst [value,valueSet]=useState([{ label: '黄浦区', key: 12 }])\\nconst [values,valuesSet]=useState([{ label: '北京市', key: 1 }])\\nconst [valueSinge,valueSingeSet]=useState([{ label: '上海市', key: '1-0-0' }])\\n\\nconst onChange=(selectd, selectedAll,  isChecked)=>{\\n  console.log('SearchTree-> onChange',selectedAll, selectd, isChecked)\\n  valueSet(selectedAll)\\n}\\n\\nconst onChanges=(selectd, selectedAll,  isChecked)=>{\\n  console.log('SearchTree-> onChange',selectedAll, selectd, isChecked)\\n  valuesSet(selectedAll)\\n}\\n\\nconst onChangeSinge=(selectd, selectedAll,  isChecked)=>{\\n  console.log('SearchTree-> onChange', selectd, selectedAll, isChecked)\\n  valueSingeSet(selectedAll)\\n}\\n\\n return (\\n   <>\\n    <Row>\\n      <Col >\\n        <label>多选</label>\\n        <SearchTree\\n          style={{ width:300 }}\\n          allowClear={true}\\n          onSearch={(searchValue)=>console.log('multiple',searchValue)}\\n          onChange={onChange}\\n          value={value}\\n          options={data}\\n          placeholder=\\\"请输入选择\\\"\\n        />\\n      </Col>\\n    </Row>\\n    <label>单选</label>\\n    <Row>\\n        <SearchTree\\n          style={{width:300}}\\n          loading={true}\\n          multiple={false}\\n          allowClear={true}\\n          onSearch={(searchValue)=>console.log('singe',searchValue)}\\n          onChange={onChanges}\\n          value={values}\\n          options={datas}\\n          placeholder=\\\"请输入选择\\\"\\n        />\\n        <Col style={{marginLeft:20}}>\\n        <SearchTree\\n          style={{width:300}}\\n          multiple={false}\\n          allowClear={true}\\n          onSearch={(searchValue)=>console.log('singe',searchValue)}\\n          onChange={onChangeSinge}\\n          value={valueSinge}\\n          options={data}\\n          placeholder=\\\"请输入选择\\\"\\n        />\\n        </Col>\\n    </Row>\\n  </>\\n  )\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 禁用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {  SearchTree } from 'uiw';\\n\\nconst data = [\\n  { label: '上海市',  key: 0 },\\n  {\\n    label: '北京市',  key: 1,\\n    children:[\\n      { label: '东城区', key: 10 },\\n   ]\\n  },\\n  { label: '成都市',  key: 2 },\\n]\\n\\nconst Demo = () => {\\n\\n  return(\\n    <SearchTree\\n      disabled={true}\\n      style={{ width:300 }}\\n      allowClear={true}\\n      value={[{ label: '东城区', key: 10 },{ label: '成都市',  key: 2 }]}\\n      options={data}\\n      placeholder=\\\"请输入选择\\\"\\n    />\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 自定义空选项\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport {  SearchTree } from 'uiw';\\n\\nconst Demo = () => {\\n  return(\\n    <>\\n      <SearchTree\\n        style={{ width:200 }}\\n        placeholder=\\\"请输入选择\\\"\\n      />\\n      <SearchTree\\n        style={{ width:200,marginTop:5 }}\\n        emptyOption={<span>暂无数据..</span>}\\n        placeholder=\\\"请输入选择\\\"\\n      />\\n    </>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Form中使用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {  Form, Button, SearchTree, Card, Row, Col } from 'uiw';;\\n\\n\\nconst Demo = () => {\\nconst form=useRef()\\n\\n  const data = [\\n    {\\n      label: '上海市',\\n      key: '1-0-0',\\n      children:[\\n        { label: '黄浦区', key: '1-0-1' },\\n        { label: '卢湾区', key: '1-0-2' },\\n        {\\n          label: '徐汇区',\\n          key: '1-0-3',\\n          children:[\\n            { label: '半淞园路街道', key: '1-1-0' },\\n            { label: '南京东路街道', key: '1-2-0' },\\n            { label: '外滩街道', key: '1-3-0' },\\n          ]\\n        },\\n      ]\\n    },\\n    {\\n      label: '北京市',\\n      key: '2-0-0',\\n      children:[\\n        { label: '东城区', key: '2-1-0' },\\n        { label: '西城区', key: '2-2-0' },\\n        {\\n          label: '崇文区',\\n          key: '2-3-0',\\n          children:[\\n            { label: '东花市街道', key: '2-3-1' },\\n            { label: '体育馆路街道', key: '2-3-2' },\\n            { label: '前门街道', key: '2-3-3' },\\n          ]\\n        },\\n      ]\\n    },\\n    { label: '澳门', key: '3' },\\n  ];\\n\\n  const setValue=()=>{\\n    form.current.setFields({\\n      searchTree: [{ label: '东城区', key: '2-1-0' }, { label: '外滩街道', key: '1-3-0' }],\\n      searchTreeSinge:[{ label: '前门街道', key: '2-3-3' }]\\n       })\\n  }\\n\\n  const resetValue=()=>{\\n    form.current.resetForm()\\n  }\\n\\n  return (\\n    <div>\\n      <Form\\n        ref={form}\\n        onSubmitError={(error) => {\\n          if (error.filed) {\\n            return { ...error.filed };\\n          }\\n          return null;\\n        }}\\n        onSubmit={({initial, current}) => {\\n          const errorObj = {};\\n          if (!current.searchTree) {\\n            errorObj.searchTree = '默认需要选择内容，选择入内容';\\n          }\\n          if(Object.keys(errorObj).length > 0) {\\n            const err = new Error();\\n            err.filed = errorObj;\\n            Notify.error({ title: '提交失败！', description: '请确认提交表单是否正确！' });\\n            throw err;\\n          }\\n          Notify.success({\\n            title: '提交成功！',\\n            description: `表单提交成功，选择值为：${current.selectField}，将自动填充初始化值！`,\\n          });\\n        }}\\n        fields={{\\n          searchTree: {\\n            initialValue:[ { label: '黄浦区', key: '1-0-1' }, { label: '卢湾区', key: '1-0-2' }],\\n            children: (\\n                <SearchTree\\n                  allowClear={true}\\n                  onSearch={(searchValue)=>console.log('SearchTree-> SearchTreeOption',searchValue)}\\n                  onChange={(selectd, selectedAll,  isChecked)=>console.log('SearchTree-> onChange', selectd, selectedAll, isChecked)}\\n                  options={data}\\n                  placeholder=\\\"请输入选择\\\"\\n                />\\n            )\\n          },\\n          searchTreeSinge: {\\n            initialValue:[{ label: '东花市街道', key: '2-3-1' }],\\n            children: (\\n                <SearchTree\\n                  multiple={false}\\n                  allowClear={true}\\n                  onSearch={(searchValue)=>console.log('SearchTree-> SearchTreeOption',searchValue)}\\n                  onChange={(selectd, selectedAll,  isChecked)=>console.log('SearchTree-> onChange', selectd, selectedAll, isChecked)}\\n                  options={data}\\n                  placeholder=\\\"请输入选择\\\"\\n                />\\n            )\\n          },\\n        }}\\n      >\\n        {({ fields, state, canSubmit }) => {\\n          return (\\n            <div>\\n              <Row style={{display:'flex',flexDirection:'column'}}>\\n                <div>多选</div>\\n                <Col >{fields.searchTree}</Col>\\n              </Row>\\n              <Row style={{display:'flex',flexDirection:'column'}}>\\n                <label>单选</label>\\n                <Col >{fields.searchTreeSinge}</Col>\\n              </Row>\\n              <Row>\\n                <Col fixed>\\n                  <Button disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n                  <Button onClick={setValue} type=\\\"primary\\\" >setValue</Button>\\n                  <Button onClick={resetValue} type=\\\"primary\\\" >重置</Button>\\n                </Col>\\n              </Row>\\n              <Row>\\n                <Col>\\n                  <pre style={{ padding: 10, marginTop: 10 }}>\\n                    {JSON.stringify(state.current, null, 2)}\\n                  </pre>\\n                </Col>\\n              </Row>\\n            </div>\\n          )\\n        }}\\n      </Form>\\n    </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| allowClear | 支持清除 | Boolean | `false` |\\n| disabled | 禁用选择器 | Boolean | `false` |\\n| multiple | 是否可以多选 | Boolean | `true` |\\n| value | 指定当前选中的条目 | [{label:string, key:string}] | - |\\n| options | 下拉数据源,可参考Tree下拉数据源 | [{label:string, key:string, children: [{label:string, key:string}] }] | - |\\n| placeholder | 选择框默认文字 | String | - |\\n| size | 选择框尺寸 | Enum{large, default, small } | `default` |\\n| onChange | 选中 option，或 input 的 value，调用此函数 | function(selectd, selectdAll, isChecked)=>void | - |\\n| onSearch | 文本框值变化时回调 | function(searchValue) | - |\\n| loading | 加载中状态 | Boolean | `false` |\\n| emptyOption | 自定义下拉选项为空时显示内容 | React.ReactNode | [Empty](https://uiwjs.github.io/#/components/empty) |\\n\\n\";"],"names":[],"sourceRoot":""}