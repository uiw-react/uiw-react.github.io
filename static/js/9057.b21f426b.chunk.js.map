{"version":3,"file":"static/js/9057.b21f426b.chunk.js","mappings":"gHAAA","sources":["../../packages/react-tree-checked/README.md"],"sourcesContent":["export default \"TreeChecked 树形选择控件\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-tree-checked/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-tree-checked.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-tree-checked)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-tree-checked.svg?label=@uiw/react-tree-checked)](https://npmjs.com/@uiw/react-tree-checked)\\n\\n使用树选择控件可以完整展现其中的层级关系，并具有选中状态。\\n\\n```jsx\\nimport { TreeChecked } from 'uiw';\\n// or\\nimport TreeChecked from '@uiw/react-tree-checked';\\n```\\n\\n### 基础实例\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { TreeChecked, Card, Row, Col } from 'uiw';\\n\\nconst data = [\\n  {\\n    label: '湖北省',\\n    key: '0-0-0',\\n    children:[\\n      {\\n        label: '武汉市',\\n        key: '0-1-0',\\n        children:[\\n          { label: '新洲区', key: '0-1-1', disabled: true },\\n          { label: '武昌区', key: '0-1-2' },\\n          {\\n            label: '汉南区',\\n            key: '0-1-3',\\n            children:[\\n              { label: '汉南区1', key: '0-1-3-1' },\\n              { label: '汉南区2', key: '0-1-3-2' },\\n              { label: '汉南区3', key: '0-1-3-3' },\\n            ]\\n          },\\n        ]\\n      },\\n      { label: '黄冈市', key: '0-2-0' },\\n      {\\n        label: '黄石市',\\n        key: '0-3-0',\\n        children:[\\n          { label: '青山区', key: '0-3-1' },\\n          { label: '黄陂区', key: '0-3-2' },\\n          { label: '青山区', key: '0-3-3' },\\n        ]\\n      },\\n    ]\\n  },\\n  {\\n    label: '上海市',\\n    key: '1-0-0',\\n    children:[\\n      { label: '黄浦区', key: '1-0-1' },\\n      { label: '卢湾区', key: '1-0-2' },\\n      {\\n        label: '徐汇区',\\n        key: '1-0-3',\\n        children:[\\n          { label: '半淞园路街道', key: '1-1-0' },\\n          { label: '南京东路街道', key: '1-2-0' },\\n          { label: '外滩街道', key: '1-3-0' },\\n        ]\\n      },\\n    ]\\n  },\\n  {\\n    label: '北京市',\\n    key: '2-0-0',\\n    children:[\\n      { label: '东城区', key: '2-1-0' },\\n      { label: '西城区', key: '2-2-0' },\\n      {\\n        label: '崇文区',\\n        key: '2-3-0',\\n        children:[\\n          { label: '东花市街道', key: '2-3-1' },\\n          { label: '体育馆路街道', key: '2-3-2' },\\n          { label: '前门街道', key: '2-3-3' },\\n        ]\\n      },\\n    ]\\n  },\\n  { label: '澳门', key: '3' },\\n];\\n\\nconst Demo = () => (\\n  <TreeChecked\\n    data={data}\\n    selectedKeys={['0-1-1']}\\n    onExpand={(key, expanded, data, node) => {\\n      console.log(key, expanded, data, node);\\n    }}\\n    onSelected={(key, selected, item, evn) => {\\n      console.log('select:', key);\\n      console.log('select:', selected);\\n      console.log('select:', item);\\n      console.log('select:', evn);\\n    }}\\n  />\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 表单使用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React, { useState, useRef } from \\\"react\\\";\\nimport ReactDOM from 'react-dom';\\nimport { Form, Input, Row, Col, TreeChecked, Slider, Button, Notify } from 'uiw';\\n\\nconst data = [\\n  {\\n    label: '湖北省',\\n    key: '0-0-0',\\n    children:[\\n      {\\n        label: '武汉市',\\n        key: '0-1-0',\\n        children:[\\n          { label: '新洲区', key: '0-1-1', disabled: true },\\n          { label: '武昌区', key: '0-1-2' },\\n          {\\n            label: '汉南区',\\n            key: '0-1-3',\\n            children:[\\n              { label: '汉南区1', key: '0-1-3-1' },\\n              { label: '汉南区2', key: '0-1-3-2' },\\n              { label: '汉南区3', key: '0-1-3-3' },\\n            ]\\n          },\\n        ]\\n      },\\n      { label: '黄冈市', key: '0-2-0' },\\n      {\\n        label: '黄石市',\\n        key: '0-3-0',\\n        children:[\\n          { label: '青山区', key: '0-3-1' },\\n          { label: '黄陂区', key: '0-3-2' },\\n          { label: '青山区', key: '0-3-3' },\\n        ]\\n      },\\n    ]\\n  },\\n  { label: '澳门', key: '3' },\\n];\\n\\nfunction Demo() {\\n  const form = useRef()\\n\\n  const onSubmit = () => {\\n    form.current.onSubmit()\\n  }\\n  const resetForm = () => {\\n    form.current.resetForm()\\n  }\\n  const getFieldValues = () => {\\n    console.log('getFieldValues', form.current.getFieldValues())\\n  }\\n\\n  const setFieldValue=()=>{\\n    form.current.setFieldValue('name','UIW')\\n  }\\n\\n  return (\\n    <div>\\n      <Form\\n        ref={form}\\n        onChange={({ initial, current }) => {\\n          console.log('onChange', initial, current);\\n        }}\\n        onSubmit={({ initial, current }) => {\\n          if (current.tree === initial.tree) {\\n            Notify.error({\\n              title: '提交失败！',\\n              description: `表单提交内容为空！`,\\n            });\\n          } else {\\n            Notify.success({\\n              title: '提交成功！',\\n            });\\n          }\\n        }}\\n        fields={{\\n          tree: {\\n            label: \\\"树\\\",\\n            initialValue: ['3'],\\n            children: <TreeChecked\\n              data={data}\\n              selectedKeys={['0-2-0']}\\n            />\\n          }\\n        }}\\n      >\\n        {({ fields, state, canSubmit }) => {\\n          return (\\n            <div>\\n              <Row>\\n                <Col style={{ maxWidth: 300 }}>{fields.tree}</Col>\\n              </Row>\\n              <Row>\\n                <Col>\\n                  <Button disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n                </Col>\\n              </Row>\\n            </div>\\n          )\\n        }}\\n      </Form>\\n    </div>\\n  )\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n完全继承 [Tree](#/components/Tree) 组件属性，默认初始值不一样，下面仅列出默认不一致的 Props。\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| checkStrictly | 子节点受父节点控制设置 `true`，需要配合 `multiple` 参数使用。 | Boolean | `true` |\\n| isSelected | 是否选中当前节点 | Boolean | `false` |\\n| multiple | 支持点选多个节点 | Boolean | `true` |\\n\";"],"names":[],"sourceRoot":""}