{"version":3,"file":"static/js/6869.38330ca9.chunk.js","mappings":"gHAAA","sources":["../../packages/react-date-input/README.md"],"sourcesContent":["export default \"DateInput 日期输入框\\n===\\n\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-date-input/file/README.md)\\n[![NPM Downloads](https://img.shields.io/npm/dm/@uiw/react-date-input.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-date-input)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-date-input.svg?label=@uiw/react-date-input)](https://npmjs.com/@uiw/react-date-input)\\n\\n显示一个月的日历，并允许用户选择单个日期。\\n\\n```jsx\\nimport { DateInput, DateInputRange } from 'uiw';\\n// or\\nimport DateInput,{ DateInputRange } from '@uiw/react-date-input';\\n// 在 `v4.13.0` 版本中增加 DateInputRange 组件\\n```\\n\\n## 基本使用\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { DateInput, DateInputRange, Row, Col } from 'uiw';\\n\\nfunction Demo () {\\n\\n  const [dataRange,dataRangeSet] =React.useState(['2022-02-25 15:06:24','2022-02-27 14:47:32'])\\n\\n function onChange(selectedDate,dataRange) {\\n    console.log('selectedDate',selectedDate,dataRange)\\n  }\\n    return (\\n      <div>\\n        <Row gutter={10} style={{ maxWidth: 360,marginBottom:10 }}>\\n          <Col fixed>\\n            <DateInput\\n              value={new Date()}\\n              datePickerProps={{ todayButton: '今天' }}\\n              onChange={onChange}\\n            />\\n          </Col>\\n          <Col>\\n            <DateInput\\n              value={new Date()}\\n              disabled\\n              onChange={onChange}\\n            />\\n          </Col>\\n        </Row>\\n        <Row gutter={10}>\\n          <Col>\\n            <DateInputRange\\n              bodyStyle={{width:350}}\\n              format=\\\"YYYY/MM/DD HH:mm:ss\\\"\\n              value={dataRange}\\n              datePickerProps={{ todayButton: '今天',showTime:true }}\\n              onChange={onChange}\\n            />\\n          </Col>\\n        </Row>\\n      </div>\\n    )\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 在表单中使用\\n\\n在 [`<Form />`](#/components/form) 表单中应用 [`<DateInput />`](#/components/date-input) 组件。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { DateInput,DateInputRange, Notify, Button, Form, Row, Col } from 'uiw';\\n\\nfunction Demo(){\\n  const form = React.useRef(null)\\n\\n  const resetDateRange = () => {\\n    form.current.resetForm()\\n  }\\n\\n  const setDateRange = () => {\\n    form.current.setFields({dateRange:[new Date(),new Date()]})\\n  }\\n\\n  return (\\n    <Form\\n      ref={form}\\n      onSubmit={({ initial, current }) => {\\n        if (current.date) {\\n          Notify.success({\\n            title: '提交成功！',\\n            description: `表单提交时间成功，时间为：${current.date}`,\\n          });\\n        } else {\\n          Notify.error({\\n            title: '提交失败！',\\n            description: `表单提交时间成功，时间为：${current.date}，将自动填充初始化值！`,\\n          });\\n        }\\n      }}\\n      fields={{\\n        date: {\\n          initialValue: '2019/02/17',\\n          labelClassName: 'fieldLabel',\\n          labelFor: 'date-inline',\\n          children: <DateInput datePickerProps={{ todayButton: '今天' }} id=\\\"date-inline\\\" />\\n        },\\n        dateRange: {\\n          initialValue: ['2019/02/17', '2019/02/20'],\\n          labelClassName: 'fieldLabel',\\n          labelFor: 'date-inline',\\n          children: <DateInputRange datePickerProps={{ todayButton: '今天' }} id=\\\"date-inline\\\" />\\n        },\\n      }}\\n    >\\n      {({ fields, state, canSubmit }) => {\\n        return (\\n          <div>\\n            <Row gutter={10}>\\n              <Col fixed>{fields.date}</Col>\\n            </Row>\\n            <Row gutter={10}>\\n              <Col fixed>{fields.dateRange}</Col>\\n            </Row>\\n            <Row gutter={10}>\\n              <Col>\\n                <Button disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n                <Button onClick={resetDateRange} >重置</Button>\\n                <Button onClick={setDateRange}>setValue</Button>\\n              </Col>\\n            </Row>\\n          </div>\\n        )\\n      }}\\n    </Form>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 日期格式\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { DateInput } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  onChange(selectedDate) {\\n    console.log('selectedDate:', selectedDate);\\n  }\\n  render() {\\n    return (\\n      <div style={{ maxWidth: 200 }}>\\n        <DateInput\\n          format=\\\"YYYY # MM # DD\\\"\\n          datePickerProps={{ todayButton: '今天' }}\\n          onChange={this.onChange.bind(this)}\\n        />\\n      </div>\\n    )\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 日期时间设置\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { DateInput } from 'uiw';\\n\\nclass Demo extends React.Component {\\n  onChange(selectedDate) {\\n    console.log('selectedDate:', selectedDate);\\n  }\\n  render() {\\n    return (\\n      <div style={{ maxWidth: 200 }}>\\n        <DateInput\\n          format=\\\"YYYY/MM/DD HH:mm:ss\\\"\\n          datePickerProps={{ showTime: true, todayButton: '今天' }}\\n          onChange={this.onChange.bind(this)}\\n        />\\n      </div>\\n    )\\n  }\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ---- | ---- | ---- | ---- |\\n| value | 初始时间值 | Date | - |\\n| placeholder | 输入框提示文字 | String | - |\\n| allowClear | 是否显示清除按钮 | Boolean | true |\\n| format | 格式化时间，规则查看 [`<formatter>`](#/components/formatter) 文档 | String | `YYYY/MM/DD` |\\n| onChange | 选择一天时调用。 | Function(selectedDate:Date) | - |\\n| popoverProps | 将参数传递给 [`<Popover>`](#/components/popover) 组件 | Object | - |\\n| datePickerProps | 将参数传递给 [`<DatePicker>`](#/components/date-picker) 组件 | Object | - |\\n| disabled | 组件 [`<Input>`](#/components/input) 的属性，禁用日历 | Boolean | - |\\n\\n组件 `DateInput` 继承 `<Input>` 组件，更多属性文档请参考 [`<Input>`](#/components/input)。\\n\\n## DateInputRange\\n\\n在 `v4.13.0` 版本中增加 `DateInputRange` 组件。\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ---- | ---- | ---- | ---- |\\n| value | 初始时间值 | Array<Date, string> | - |\\n| placeholder | 输入框提示文字 | String | - |\\n| allowClear | 是否显示清除按钮 | Boolean | true |\\n| format | 格式化时间，规则查看 [`<formatter>`](#/components/formatter) 文档 | String | `YYYY/MM/DD` |\\n| onChange | 选择一天时调用。 | Function(selectedDate:Date, dateRange: Array<Date>) | - |\\n| popoverProps | 将参数传递给 [`<Popover>`](#/components/popover) 组件 | Object | - |\\n| datePickerProps | 将参数传递给 [`<DatePicker>`](#/components/date-picker) 组件 | Object | - |\\n| disabled | 组件 [`<Input>`](#/components/input) 的属性，禁用日历 | Boolean | - |\\n| bodyStyle | 选择框样式  | Object | { width: 300 } | - |\\n\\n组件 `DateInputRange` 继承 `<Input>` 组件，更多属性文档请参考 [`<Input>`](#/components/input)。\\n\\n\";"],"names":[],"sourceRoot":""}