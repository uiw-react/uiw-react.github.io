{"version":3,"sources":["../../../packages/react-steps/README.md"],"names":[],"mappings":"uHAAA,OAAe","file":"static/js/132.13cb32bf.chunk.js","sourcesContent":["export default \"Steps 步骤条\\n===\\n\\n引导用户按照流程完成任务的导航条。当任务复杂或者存在先后关系时，将其分解成一系列步骤，从而简化任务。\\n\\n```jsx\\nimport { Steps } from 'uiw';\\n// or\\nimport Steps from '@uiw/react-steps';\\n```\\n\\n### 基本用法\\n\\n简单的步骤条。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Steps current={1} style={{ padding:\\\"20px 0\\\" }}>\\n      <Steps.Step title=\\\"步骤一\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。这里是步骤一的说明，可以很长很长哦。这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤二\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤三\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤四\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n    </Steps>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 没有详情介绍\\n\\n简单的步骤条。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Steps current={1} style={{padding:\\\"20px 0\\\"}}>\\n      <Steps.Step title=\\\"步骤一\\\" />\\n      <Steps.Step title=\\\"步骤二\\\" />\\n      <Steps.Step title=\\\"步骤三\\\" />\\n      <Steps.Step title=\\\"步骤四\\\" />\\n    </Steps>\\n  )\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 带图标的步骤条\\n\\n通过设置 `Steps.Step` 的 `icon` 属性，可以启用自定义图标。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps, Icon } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Steps current={1} style={{padding:\\\"20px 0\\\"}}>\\n      <Steps.Step icon={<Icon type=\\\"user\\\"/>} title=\\\"注册\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step icon={<Icon type=\\\"picasa\\\" spin={true} color=\\\"red\\\" />} title=\\\"上传头像\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step icon=\\\"message\\\" title=\\\"验证邮箱\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n    </Steps>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 步骤运行错误\\n\\n使用 `Steps` 的 `status` 属性来指定当前步骤的状态。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Steps current={2} status=\\\"error\\\" style={{padding:\\\"20px 0\\\"}}>\\n      <Steps.Step title=\\\"步骤一\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤二\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤三\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤四\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n    </Steps>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 点状步骤条\\n\\n包含步骤点的进度条。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Steps progressDot status=\\\"error\\\" current={2} style={{padding:\\\"20px 0\\\"}}>\\n      <Steps.Step title=\\\"步骤一\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤二\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤三\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n      <Steps.Step title=\\\"步骤四\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n    </Steps>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 步骤切换\\n\\n通常配合内容及按钮使用，表示一个流程的处理进度。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps, Button, Notify } from 'uiw';\\n\\nconst conStyle = { minHeight: 200, backgroundColor: '#fafafa',textAlign: 'center', borderRadius: 6, paddingTop: 80, marginTop: 15 }\\nconst steps = [\\n  {\\n    title: '第一步',\\n    content: '注册一个账号',\\n  }, {\\n    title: '第二步',\\n    content: '填写个人信息。',\\n  }, {\\n    title: '第三步',\\n    content: '验证邮箱',\\n  }\\n]\\n\\nfunction Demo() {\\n  const [current, setCurrent] = React.useState(0);\\n    return (\\n      <div>\\n        <Steps current={current}>\\n          {steps.map(item => <Steps.Step key={item.title} title={item.title} />)}\\n        </Steps>\\n        <div style={conStyle}>{steps[current].content}</div>\\n        <div style={{marginTop: 20}}>\\n          {current < steps.length - 1 && (\\n            <Button type=\\\"primary\\\" size=\\\"small\\\" onClick={() => setCurrent(current + 1)}>下一步</Button>\\n          )}\\n          {current === steps.length - 1 && (\\n            <Button type=\\\"primary\\\" size=\\\"small\\\" onClick={() => Notify.open({ description: '处理完成!' })}>完成</Button>\\n          )}\\n          {current > 0 && (\\n            <Button size=\\\"small\\\" style={{ marginLeft: 8 }} onClick={() => setCurrent(current - 1)}>\\n              上一步\\n            </Button>\\n          )}\\n        </div>\\n      </div>\\n    );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 竖直方向的步骤条\\n\\n简单的竖直方向的步骤条。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Steps } from 'uiw';\\n\\nfunction Demo() {\\n  return (\\n    <Row gutter={20}>\\n      <Col>\\n        <Steps current={1} direction=\\\"vertical\\\" style={{ padding: '20px 0' }}>\\n          <Steps.Step title=\\\"已完成\\\" description=\\\"这里是该步骤的描述信息\\\" />\\n          <Steps.Step title=\\\"进行中\\\" description=\\\"这里是该步骤的描述信息\\\" />\\n          <Steps.Step status=\\\"error\\\" title=\\\"待进行\\\" description=\\\"这里是该步骤的描述信息\\\" />\\n          <Steps.Step title=\\\"待进行\\\" description=\\\"这里是该步骤的描述信息\\\" />\\n        </Steps>\\n      </Col>\\n      <Col>\\n        <Steps direction=\\\"vertical\\\" progressDot status=\\\"error\\\" current={2} style={{ padding: '20px 0' }}>\\n          <Steps.Step title=\\\"步骤一\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n          <Steps.Step title=\\\"步骤二\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n          <Steps.Step title=\\\"步骤三\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n          <Steps.Step title=\\\"步骤四\\\" description=\\\"这里是步骤一的说明，可以很长很长哦。\\\" />\\n        </Steps>\\n      </Col>\\n    </Row>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Props\\n\\n### Steps \\n\\n| 参数      | 说明    | 类型      |  默认值   |\\n|--------- |-------- |---------- |-------- |\\n| current | 指定当前步骤，从 `0` 开始记数。| Number | `0` |\\n| status | 当前步骤的状态，可选值为`wait`、`process`、`finish`、`error` | String | `process` |\\n| direction | 指定步骤条方向，支持水平`vertical`、`horizontal` |  | `horizontal` |\\n| progressDot | 点状步骤条|  | `horizontal` |\\n\\n### Steps.Step\\n\\n| 参数      | 说明    | 类型      |  默认值   |\\n|--------- |-------- |---------- |-------- |\\n| status | 指定状态。当不配置该属性时，会使用 Steps 的 current 来自动指定状态。可选：`wait` `process` `finish` `error` | String | `wait` |\\n| title | 指定每个步骤标题 | String/ReactNode | - |\\n| description | 步骤的详情描述，可选 | String/ReactNode | - |\\n| icon | 步骤的图标，字符串类型从`<Icon/>`组件中找，可选 | String/ReactNode | - |\\n\";"],"sourceRoot":""}