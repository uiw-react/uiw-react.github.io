{"version":3,"sources":["../../../packages/react-rate/README.md"],"names":[],"mappings":"uHAAA,OAAe","file":"static/js/129.09264877.chunk.js","sourcesContent":["export default \"Rate 评分\\n===\\n\\n评分组件\\n\\n```jsx\\nimport { Rate } from 'uiw';\\n// or\\nimport Rate from '@uiw/react-rate';\\n```\\n\\n### 基本用法\\n\\n按钮样式的单选组合。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider, Icon } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Rate value={3} />\\n    <Divider />\\n    <Rate allowHalf character={<Icon type=\\\"star-on\\\" />} value={2.5} />\\n    <Divider />\\n    <Rate color=\\\"#393E48\\\" character=\\\"☆\\\" value={4} />\\n    <Divider />\\n    <Rate color=\\\"#28a745\\\" character={<Icon type=\\\"heart-on\\\" />} value={3} />\\n    <Divider />\\n    <Rate color=\\\"#dc3545\\\" character=\\\"✿\\\" value={4} />\\n  </div>\\n)\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 在表单中使用\\n\\n在 [`<Form />`](#/components/form) 表单中应用 [`<Rate />`](#/components/rate) 组件\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Form, Row, Col, Icon, Rate, Button, Notify } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Form\\n      resetOnSubmit={false}\\n      onSubmitError={(error) => {\\n        if (error.filed) {\\n          return { ...error.filed };\\n        }\\n        return null;\\n      }}\\n      onSubmit={({initial, current}) => {\\n        const errorObj = {};\\n        if (current.rate < 2) {\\n          errorObj.rate = '评分低于 2 拒绝提交评分！';\\n        }\\n        if(Object.keys(errorObj).length > 0) {\\n          const err = new Error();\\n          err.filed = errorObj;\\n          Notify.error({ title: '提交失败！', description: '请确认提交表单是否正确！' });\\n          throw err;\\n        }\\n        Notify.success({\\n          title: '提交成功！',\\n          description: `表单提交成功，选择值为：${current.rate}！`,\\n        });\\n      }}\\n      fields={{\\n        rate: {\\n          initialValue: 3,\\n          children: <Rate style={{ fontSize: 14 }} character={<Icon type=\\\"star-on\\\" />} />\\n        },\\n      }}\\n    >\\n      {({ fields, state, canSubmit }) => {\\n        return (\\n          <div>\\n            <Row>\\n              <Col fixed>{fields.rate}</Col>\\n            </Row>\\n            <Row>\\n              <Col fixed>\\n                <Button size=\\\"small\\\" disabled={!canSubmit()} type=\\\"primary\\\" htmlType=\\\"submit\\\">提交</Button>\\n              </Col>\\n            </Row>\\n            <Row>\\n              <Col>\\n                <pre style={{ padding: 10, marginTop: 10 }}>\\n                  {JSON.stringify(state.current, null, 2)}\\n                </pre>\\n              </Col>\\n            </Row>\\n          </div>\\n        )\\n      }}\\n    </Form>\\n  </div>\\n)\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 受控\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider, Icon, RadioGroup, Radio } from 'uiw';\\n\\nconst Demo = () => {\\n  const [value, setValue] = React.useState(4);\\n  return (\\n    <div>\\n      <Rate readOnly value={value} character={<Icon type=\\\"star-on\\\" />} />\\n      <Divider />\\n      <RadioGroup value={value} onChange={(e) => {\\n        setValue(e.target.value);\\n      }}>\\n        <Radio value=\\\"0\\\">选择 0 星</Radio>\\n        <Radio value=\\\"1\\\">选择 1 星</Radio>\\n        <Radio value=\\\"2\\\">选择 2 星</Radio>\\n        <Radio value=\\\"3\\\">选择 3 星</Radio>\\n      </RadioGroup>\\n    </div>\\n  )\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 只读\\n\\n按钮样式的单选组合。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider, Icon } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Rate readOnly value={3} />\\n    <Divider />\\n    <Rate readOnly character=\\\"☆\\\" value={4} />\\n    <Divider />\\n    <Rate readOnly character={<Icon type=\\\"heart-on\\\" />} value={3.5} />\\n    <Divider />\\n    <Rate readOnly character=\\\"✿\\\" value={4} />\\n  </div>\\n)\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 文本\\n\\n按钮样式的单选组合。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Rate character=\\\"美\\\" value={4} />\\n    <Divider />\\n    <Rate color=\\\"#d80000\\\" character=\\\"好\\\" value={3} />\\n    <Divider />\\n    <Rate character=\\\"传\\\" value={4} />\\n  </div>\\n)\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 半选\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider, Icon } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Rate allowHalf character={<Icon type=\\\"heart-on\\\" />} value={3.3} />\\n    <Divider />\\n    <Rate allowHalf color=\\\"#d80000\\\" character={<Icon type=\\\"heart-on\\\" />} value={4.3} />\\n  </div>\\n);\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 尺寸\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { Rate, Divider, Icon } from 'uiw';\\n\\nconst Demo = () => (\\n  <div>\\n    <Rate style={{ fontSize: 34 }} character={<Icon type=\\\"heart-on\\\" />} value={3} />\\n  </div>\\n)\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## Rate\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| value | 根据 value 进行比较，判断是否选中 | Number | - |\\n| count | star 总数 | Number | `5` |\\n| readOnly | 只读，无法进行交互 | Boolean | `false` |\\n| allowHalf | 是否允许半选 | Boolean | `false` |\\n| character | 自定义字符 | ReactNode | - |\\n| color | 自定义 Star 的颜色 | String | - |\\n| className | 自定义样式类名 | String | - |\\n| onChange | 数值改变时的回调，返回当前值 | Funtcion(e:Even,value) | - |\\n| onHoverChange | 鼠标经过时数值变化的回调 | Funtcion(e:Even,value) | - |\\n\";"],"sourceRoot":""}